searchState.loadedDescShard("embedded_graphics", 0, "Embedded-graphics is a 2D graphics library that is focused …\nThe pixel color type.\nMarks an object as “drawable”. Must be implemented for …\nThe return type of the <code>draw</code> method.\nA single pixel.\nDraw the graphics object using the supplied DrawTarget.\nA target for embedded-graphics drawing operations.\nDrawing examples\nFramebuffer.\nReturns the argument unchanged.\nGeometry module.\nImage support for embedded-graphics\nCalls <code>U::from(self)</code>.\nIterators.\nMock display for use in tests.\nMonospaced bitmap fonts.\nPixel color types.\nPrelude\nGraphics primitives\nText drawing.\nTransformations for graphics objects\nClipped draw target.\nThe pixel color type the targetted display supports.\nColor conversion draw target.\nCropped draw target.\nA target for embedded-graphics drawing operations.\nExtension trait for <code>DrawTarget</code>s.\nError type to return when a drawing operation fails.\nTranslated draw target.\nFill the entire display with a solid color.\nCreates a clipped draw target based on this draw target.\nCreates a color conversion draw target.\nCreates a cropped draw target based on this draw target.\nDraw individual pixels to the display without a defined …\nFill a given area with an iterator providing a contiguous …\nFill a given area with a solid color.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a translated draw target based on this draw target.\nA framebuffer.\nReturns an image based on the framebuffer content.\nCalculates the required buffer size.\nCalculates the required buffer size.\nReturns a reference to the raw framebuffer data.\nReturns a mutable reference to the raw framebuffer data.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new framebuffer.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nSets the color of a pixel.\nAnchor point.\nX axis anchor point.\nY axis anchor point.\nAngle.\nAngleUnit trait.\nBottom.\nBottom center.\nBottom left.\nBottom right.\nCenter.\nCenter.\nCenter.\nCenter left.\nCenter right.\nAdds the ability to get the bounding box of an item.\nLeft.\nDimensions with <code>top_left</code> of the bounding box at <code>(0, 0)</code>.\n2D point.\nRight.\n2D size.\nTop.\nTop center.\nTop left.\nTop right.\nRemove the sign from a coordinate\nCompute the absolute value of the angle.\nOffsets a point by adding a size.\nOffsets a point by adding a size.\nReturns the bounding box.\nReturns the componentwise division of two <code>Points</code>s.\nReturns the componentwise division of two <code>Size</code>s.\nReturns the componentwise maximum of two <code>Point</code>s\nReturns the componentwise maximum of two <code>Size</code>s.\nReturns the componentwise minimum of two <code>Point</code>s\nReturns the componentwise minimum of two <code>Size</code>s.\nReturns the componentwise multiplication of two <code>Point</code>s.\nReturns the componentwise multiplication of two <code>Size</code>s.\nConvert a number (interpreted as degrees) to an <code>Angle</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an angle defined in degrees.\nCreates an angle defined in radians.\nCreates an anchor point from an X and Y component.\nThe height.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a point from  X and Y coordinates.\nCreates a size from a width and a height.\nCreates a point with X and Y values set to an equal value.\nCreates a size with width and height set to an equal value.\nNormalize the angle to less than one full rotation (ie. in …\nConvert a number (interpreted as radians) to an <code>Angle</code>.\nSaturating addition.\nSaturating subtraction.\nReturns the size of the bounding box.\nOffsets a point by subtracting a size.\nOffsets a point by subtracting a size.\nReturn numerical value of the angle in degree\nReturn numerical value of the angle in radian\nThe width.\nReturns the X axis component.\nThe x coordinate.\nReturns a point with equal <code>x</code> value and <code>y</code> set to <code>0</code>.\nReturns a size with equal <code>width</code> value and <code>height</code> set to <code>0</code>.\nReturns the Y axis component.\nThe y coordinate.\nReturns a point with equal <code>y</code> value and <code>x</code> set to <code>0</code>.\nReturns a size with equal <code>height</code> value and <code>width</code> set to <code>0</code>.\nCreates a point with X and Y equal to zero.\nCreates a size with width and height equal to zero.\nCreates a zero degree angle.\nThe color type.\nThe color type.\nPixel getter.\nImage object.\nImage drawable.\nExtension trait for image drawables.\nAn image constructed from a slice of raw pixel data.\nImage with big endian data.\nImage with little endian data.\nSub image.\nDraws the entire image to the target.\nDraws a part of the image to the target.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new image.\nCreates a new <code>Image</code>.\nGets the color of a pixel.\nReturns a sub image of this image drawable.\nTranslate the image by a given delta, returning a new image\nTranslate the image by a given delta, modifying the …\nCreates a new <code>Image</code> centered around a given point.\nExtension trait for contiguous iterators.\nExtension trait for pixel iterators.\nContiguous iterator.\nDraws the pixel iterator to a draw target.\nConverts a contiguous iterator into a pixel iterator.\nPixel iterator.\nRaw data iterator.\nReturns a translated version of the iterator.\nConverts a contiguous iterator into a pixel iterator.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTranslated pixel iterator.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIterator for raw data slices with less than 8 BPP.\nIterator for raw data slices with 8 BPP.\nIterator for raw data slices more than 8 BPP.\nRaw data slice.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new raw data slice.\nMapping between <code>char</code>s and colors.\nMock display struct\nColor used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …\nColor used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …\nReturns the area that was affected by drawing operations.\nChecks if the displays are equal.\nChecks if the displays are equal.\nChecks if the display is equal to the given pattern.\nChecks if the display is equal to the given pattern.\nConverts a char into a color of type <code>C</code>.\nConverts a color of type <code>C</code> into a char.\nCompares the display to another display.\nChanges the color of a pixel.\nReturns the argument unchanged.\nCreates a new mock display from a character pattern.\nCreate a mock display from an iterator of <code>Point</code>s.\nReturns the color of a pixel.\nCalls <code>U::from(self)</code>.\nMaps a <code>MockDisplay&lt;C&gt;</code> to a <code>MockDisplay&lt;CT&gt;</code> by applying a …\nCreates a new empty mock display.\nSets if out of bounds drawing is allowed.\nSets if overdrawing is allowed.\nChanges the value of a pixel without bounds checking.\nSets the points in an iterator to the given color.\nReturns a copy of with the content mirrored by swapping x …\nDecoration dimensions.\nMonospaced bitmap font.\nStyle properties for text using a monospaced font.\nText style builder for monospaced fonts.\nASCII glyph subset.\nSets the background color.\nBackground color.\nThe baseline.\nBuilds the text style.\nSize of a single character in pixel.\nSpacing between characters.\nCreates a new default strikethrough decoration for the …\nCreates a new default underline decoration for the given …\nSets the font.\nFont.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGlyph mapping.\nHeight of the decoration.\nRaw image data containing the font.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the style is transparent.\nISO_8859_1 glyph subset.\nISO_8859_10 glyph subset.\nISO_8859_13 glyph subset.\nISO_8859_14 glyph subset.\nISO_8859_15 glyph subset.\nISO_8859_16 glyph subset.\nISO_8859_2 glyph subset.\nISO_8859_3 glyph subset.\nISO_8859_4 glyph subset.\nISO_8859_5 glyph subset.\nISO_8859_7 glyph subset.\nISO_8859_9 glyph subset.\nJIS_X0201 glyph subset.\nGlyph mapping.\nCreates a text style with transparent background.\nCreates a new text style builder.\nCreates new decoration dimensions.\nOffset from the top of the character to the top of the …\nResets the background color to transparent.\nRemoves the strikethrough decoration.\nResets the text color to transparent.\nRemoves the underline decoration.\nEnables strikethrough using the text color.\nStrikethrough decoration dimensions.\nStrikethrough color.\nEnables strikethrough with a custom color.\nSets the text color.\nText color.\nEnables underline using the text color.\nUnderline decoration dimensions.\nUnderline color.\nEnables underline with a custom color.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n4x6 pixel monospace font.\n5x7 pixel monospace font.\n5x8 pixel monospace font.\n6x10 pixel monospace font.\n6x12 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x13 pixel monospace font.\n6x9 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x13 pixel monospace font.\n7x14 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\n9x18 pixel monospace font.\n10x20 pixel monospace font.\n6x13 pixel monospace font.\n7x14 pixel monospace font.\n8x13 pixel monospace font.\n9x15 pixel monospace font.\n9x18 pixel monospace font.\nASCII.\nASCII.\nMapping from characters to glyph indices.\nISO/IEC 8859 Part 1: Latin-1, Western European.\nISO/IEC 8859 Part 10: Latin-6, Nordic.\nISO/IEC 8859 Part 13: Latin-7, Baltic Rim.\nISO/IEC 8859 Part 14: Latin-8, Celtic.\nISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).\nISO/IEC 8859 Part 16: Latin-10: South-East European.\nISO/IEC 8859 Part 2: Latin-2, Central European.\nISO/IEC 8859 Part 3: Latin-3, South European.\nISO/IEC 8859 Part 4: Latin-4, North European.\nISO/IEC 8859 Part 5: Latin/Cyrillic.\nISO/IEC 8859 Part 7: Latin/Greek.\nISO/IEC 8859 Part 9: Latin-5, Turkish.\nISO/IEC 8859 Part 1: Latin-1, Western European.\nISO/IEC 8859 Part 10: Latin-6, Nordic.\nISO/IEC 8859 Part 13: Latin-7, Baltic Rim.\nISO/IEC 8859 Part 14: Latin-8, Celtic.\nISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).\nISO/IEC 8859 Part 16: Latin-10: South-East European.\nISO/IEC 8859 Part 2: Latin-2, Central European.\nISO/IEC 8859 Part 3: Latin-3, South European.\nISO/IEC 8859 Part 4: Latin-4, North European.\nISO/IEC 8859 Part 5: Latin/Cyrillic.\nISO/IEC 8859 Part 7: Latin/Greek.\nISO/IEC 8859 Part 9: Latin-5, Turkish.\nJIS X 0201: Japanese katakana (halfwidth).\nJIS X 0201: Japanese katakana (halfwidth).\nMapping.\nGlyph mapping stored as a UTF-8 string.\nReturns an iterator over the characters in this mapping.\nReturns if the mapping contains the given char.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a glyph mapping for this mapping.\nMaps a character to a glyph index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all mappings.\nReturns the MIME identifier for this mapping.\nCreates a new glyph mapping.\nReturns an iterator over the character ranges.\nBlack color (0% luma).\nBlack color (R: 0%, G: 0%, B: 0%)\nBlue color (R: 0%, G: 0%, B: 100%)\nBgr555 color.\nBgr565 color.\nBgr666 color.\nBgr888 color.\nBinary color.\n Alice Blue\n Antique White\n Aqua\n Aquamarine\n Azure\n Beige\n Bisque\n Black\n Blanched Almond\n Blue\n Blue Violet\n Brown\n Burly Wood\n Cadet Blue\n Chartreuse\n Chocolate\n Coral\n Cornflower Blue\n Cornsilk\n Crimson\n Cyan\n Dark Blue\n Dark Cyan\n Dark Goldenrod\n Dark Gray\n Dark Green\n Dark Khaki\n Dark Magenta\n Dark Olive Green\n Dark Orange\n Dark Orchid\n Dark Red\n Dark Salmon\n Dark Sea Green\n Dark Slate Blue\n Dark Slate Gray\n Dark Turquoise\n Dark Violet\n Deep Pink\n Deep Sky Blue\n Dim Gray\n Dodger Blue\n Fire Brick\n Floral White\n Forest Green\n Fuchsia\n Gainsboro\n Ghost White\n Gold\n Goldenrod\n Gray\n Green\n Green Yellow\n Honeydew\n Hot Pink\n Indian Red\n Indigo\n Ivory\n Khaki\n Lavender\n Lavender Blush\n Lawn Green\n Lemon Chiffon\n Light Blue\n Light Coral\n Light Cyan\n Light Goldenrod Yellow\n Light Gray\n Light Green\n Light Pink\n Light Salmon\n Light Sea Green\n Light Sky Blue\n Light Slate Gray\n Light Steel Blue\n Light Yellow\n Lime\n Lime Green\n Linen\n Magenta\n Maroon\n Medium Aquamarine\n Medium Blue\n Medium Orchid\n Medium Purple\n Medium Sea Green\n Medium Slate Blue\n Medium Spring Green\n Medium Turquoise\n Medium Violet Red\n Midnight Blue\n Mint Cream\n Misty Rose\n Moccasin\n Navajo White\n Navy\n Old Lace\n Olive\n Olive Drab\n Orange\n Orange Red\n Orchid\n Pale Goldenrod\n Pale Green\n Pale Turquoise\n Pale Violet Red\n Papaya Whip\n Peach Puff\n Peru\n Pink\n Plum\n Powder Blue\n Purple\n Rebeccapurple\n Red\n Rosy Brown\n Royal Blue\n Saddle Brown\n Salmon\n Sandy Brown\n Seashell\n Sea Green\n Sienna\n Silver\n Sky Blue\n Slate Blue\n Slate Gray\n Snow\n Spring Green\n Steel Blue\n Tan\n Teal\n Thistle\n Tomato\n Turquoise\n Violet\n Wheat\n White\n White Smoke\n Yellow\n Yellow Green\nCyan color (R: 0%, G: 100%, B: 100%)\nGreen color (R: 0%, G: 100%, B: 0%)\n2 bit grayscale color.\n4 bit grayscale color.\n8 bit grayscale color.\nGrayscale color.\nConvert a <code>PixelColor</code> into its underlying storage type\nMagenta color (R: 100%, G: 0%, B: 100%)\nThe maximum value in the blue channel.\nThe maximum value in the green channel.\nThe maximum value in the red channel.\nInactive pixel.\nActive pixel.\nPixel color trait.\nRed color (R: 100%, G: 0%, B: 0%)\nRaw data type.\nRgb555 color.\nRgb565 color.\nRgb666 color.\nRgb888 color.\nRGB color.\nThe underlying storage type for the pixel color\nWhite color (100% luma).\nWhite color (R: 100%, G: 100%, B: 100%)\nNamed colors as defined in the CSS specification.\nYellow color (R: 100%, G: 100%, B: 0%)\nReturns the blue channel value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the green channel value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the <code>PixelColor</code> into its raw storage form\nInverts the color.\nReturns <code>true</code> if this color is <code>Off</code>.\nReturns <code>true</code> if this color is <code>On</code>.\nReturns the luma channel value.\nCreates a new grayscale color.\nCreates a new grayscale color.\nCreates a new grayscale color.\nCreates a new Rgb555 color. Too large channel values will …\nCreates a new Bgr555 color. Too large channel values will …\nCreates a new Rgb565 color. Too large channel values will …\nCreates a new Bgr565 color. Too large channel values will …\nCreates a new Rgb666 color. Too large channel values will …\nCreates a new Bgr666 color. Too large channel values will …\nCreates a new Rgb888 color. Too large channel values will …\nCreates a new Bgr888 color. Too large channel values will …\nReturns the red channel value.\nRaw color types.\nBits per pixel.\nBig endian byte order marker.\nRaw data byte order.\nReturn type of methods in this trait.\nLittle endian byte order marker.\nTrait implemented by all <code>RawUx</code> types.\n1 bit per pixel raw data.\n16 bits per pixel raw data.\n2 bits per pixel raw data.\n24 bits per pixel raw data.\n32 bits per pixel raw data.\n4 bits per pixel raw data.\n8 bits per pixel raw data.\nStorage type.\nTrait to convert colors into a byte array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a <code>u32</code> into a <code>RawData</code> type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this raw data into the storage type.\nCreates a new color from the least significant 1 bit of …\nCreates a new color from the least significant 2 bits of …\nCreates a new color from the least significant 4 bits of …\nCreates a new color from the least significant 8 bits of …\nCreates a new color from the least significant 16 bits of …\nCreates a new color from the least significant 24 bits of …\nCreates a new color from the least significant 32 bits of …\nConverts a color into a byte array with big endian byte …\nConverts a color into a byte array with little endian byte …\nConverts a color into a byte array with native byte order.\nCenter.\nColor type.\nTrait to check if a point is inside a closed shape.\nInside.\nIterator over all points inside the primitive.\nOffset outline trait.\nOutput type.\nOutside.\nCreate an iterator over all points in the primitive.\nPrimitive trait\nStyle properties for primitives.\nPrimitive style builder.\nStroke alignment.\nStyled.\nStyled dimensions.\nStyled drawable.\nThe arc primitive\nBuilds the primitive style.\nThe circle primitive\nReturns <code>true</code> if the given point is inside the shape.\nDraws the primitive using the given style.\nThe ellipse primitive\nReturns the fill area.\nSets the fill color.\nFill color of the primitive.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this primitive into a <code>Styled</code>.\nReturns if a primitive drawn with this style is completely …\nThe line primitive\nCreates a primitive style without fill and stroke.\nCreates a new primitive style builder.\nCreates a styled.\nOffsets the outline of the shape.\nReturns an iterator over the pixels in this styled …\nReturns an iterator over all points inside the primitive.\nThe polyline primitive\nPrimitive.\nThe rectangle primitive. Also good for drawing squares.\nResets the fill color to transparent.\nResets the stroke color to transparent.\nThe rounded rectangle primitive.\nThe sector primitive\nSets the stroke alignment.\nStroke alignment.\nReturns the stroke area.\nSets the stroke color.\nStroke color of the primitive.\nSets the stroke width.\nStroke width in pixels.\nStyle.\nReturns the bounding box using the given style.\nThe triangle primitive.\nCreates a fill primitive style.\nCreates a stroke primitive style.\nArc primitive\nIterator over all points on the arc line.\nPixel iterator for each pixel in the arc border\nAngle at which the arc starts\nAngle defining the arc sweep starting at angle_start\nReturn the center point of the arc.\nDiameter of the circle supporting the arc\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an arc based on a circle.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new arc delimited with a top-left point with a …\nReturns a circle with the same <code>top_left</code> and <code>diameter</code> as …\nTop-left point of the bounding-box of the circle …\nTranslate the arc from its current position to a new …\nTranslate the arc from its current position to a new …\nCreate a new arc centered around a given point with a …\nCircle primitive\nIterator over all points inside the circle.\nPixel iterator for each pixel in the circle border\nReturn the center point of the circle\nDiameter of the circle\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new circle delimited with a top-left point with a …\nTop-left point of circle’s bounding box\nTranslate the circle from its current position to a new …\nTranslate the circle from its current position to a new …\nCreate a new circle centered around a given point with a …\nEllipse primitive\nIterator over all points inside the ellipse\nPixel iterator for each pixel in the ellipse border\nReturn the center point of the ellipse\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new ellipse delimited with a top-left point with …\nSize of the ellipse\nTop-left point of ellipse’s bounding box\nTranslate the ellipse from its current position to a new …\nTranslate the ellipse from its current position to a new …\nCreate a new ellipse centered around a given point with a …\nLine primitive\nIterator over all points on the line.\nStyled line iterator.\nCompute the delta (<code>end - start</code>) of the line.\nEnd point\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute the midpoint of the line.\nCreates a line between two points.\nStart point\nTranslate the line from its current position to a new …\nTranslate the line from its current position to a new …\nCreates a line with a start point and a delta vector.\nAn iterator over all pixel positions on the polyline\nPolyline primitive\nPixel iterator for each pixel in the line\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new polyline from a list of vertices\nTranslate the polyline from its current position to a new …\nAn offset to apply to the polyline as a whole\nTranslate the polyline from its current position to a new …\nAll vertices in the line\nIterator over all points inside the rectangle.\nRectangle primitive\nPixel iterator for each pixel in the rect border\nReturns an anchor point.\nReturns the X coordinate of a given anchor edge of the …\nReturns the Y coordinate of a given anchor edge of the …\nReturns the bottom right corner of this rectangle.\nReturns the center of this rectangle.\nReturns the range of X coordinates in this rectangle.\nReturn whether the rectangle contains a given point.\nCreate a points iterator that returns no items.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>Rectangle</code> containing the intersection of <code>self</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> is the rectangle is zero sized.\nCreates a new rectangle from the top left point and the …\nOffset the rectangle by a given value.\nReturns a resized copy of this rectangle.\nReturns a new rectangle with the given height, resized …\nReturns a new rectangle with the given width, resized …\nReturns the range of Y coordinates in this rectangle.\nSize of the rectangle.\nTop left point of the rectangle.\nTranslate the rect from its current position to a new …\nTranslate the rect from its current position to a new …\nCreates a new rectangle from the center point and the size.\nCreates a new rectangle from two corners.\nReturns a zero sized rectangle.\nThe definition of each corner radius for a rounded …\n<code>CornerRadii</code> builder.\nIterator over all points inside the rounded rectangle.\nRounded rectangle primitive.\nPixel iterator for each pixel in the rect border\nSet all corner radii to the same value.\nSet the bottom left and bottom right corner radii to the …\nSet the bottom left corner radius.\nBottom left corner radius\nSet the bottom right corner radius.\nBottom right corner radius\nConsume the builder and produce a <code>CornerRadii</code> …\nReturn the rounded rectangle with confined corner radii.\nThe radius of each corner\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the top left and bottom left corner radii to the same …\nCreate a new set of corner radii with all corners having …\nCreate a new corner radii builder.\nCreates a new rounded rectangle with the given corner …\nThe base rectangle\nSet the top right and bottom right corner radii to the …\nSet the top left and top right corner radii to the same …\nSet the top left corner radius.\nTop left corner radius\nSet the top right corner radius.\nTop right corner radius\nTranslate the rounded rectangle from its current position …\nTranslate the rounded rectangle from its current position …\nCreates a new rounded rectangle with equal corner radius …\nIterator over all points inside the sector.\nSector primitive\nPixel iterator for each pixel in the sector border\nAngle at which the sector starts\nAngle defining the sector sweep starting at angle_start\nReturn the center point of the sector\nDiameter of the circle supporting the sector\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an arc based on a circle.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new sector delimited with a top-left point with a …\nReturns a circle with the same <code>top_left</code> and <code>diameter</code> as …\nTop-left point of the bounding-box of the circle …\nTranslate the sector from its current position to a new …\nTranslate the sector from its current position to a new …\nCreate a new sector centered around a given point with a …\nIterator over all points inside the triangle.\nPixel iterator for each pixel in the triangle border\nTriangle primitive\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new triangle from a <code>Point</code> slice.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new triangle with the given vertices.\nTranslate the triangle from its current position to a new …\nTranslate the triangle from its current position to a new …\nThe vertices of the triangle.\nHorizontal text alignment.\nAlphabetic baseline.\nText baseline.\nBottom.\nCenter.\nText decoration with a custom color.\nText decoration color.\nLeft.\nText line height.\nMiddle.\nNo text decoration.\nRelative line height in percent of the default line height.\nAbsolute line height in pixels.\nRight.\nText drawable.\nText decoration with the same color as the text.\nText style.\nBuilder for text styles.\nTop.\nSets the horizontal text alignment.\nHorizontal text alignment.\nSets the text baseline.\nText baseline.\nBuilds the text style.\nThe character style.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the decoration_color is <code>Custom</code>.\nReturns <code>true</code> if the decoration_color is <code>None</code>.\nReturns <code>true</code> if the decoration_color is <code>TextColor</code>.\nSets the line height.\nLine height.\nCreates a text drawable with the default text style.\nCreates a new text style builder.\nThe position.\nText renderer.\nThe string.\nThe text style.\nConverts the line height to an absolute pixel distance.\nCreates a text drawable with the given alignment.\nCreates a new text style with the given alignment.\nCreates a text drawable with the given baseline.\nCreates a new text style with the given baseline.\nCreates a text drawable with the given text style.\nCharacter style.\nThe color type.\nColor type.\nText metrics.\nText renderer.\nBounding box.\nDraws a string.\nDraws whitespace of the given width.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the default line height.\nReturns the text metrics for a string.\nThe position of the next text.\nSets the background color.\nSets the background color.\nSets the strikethrough color.\nSets the strikethrough color.\nSets the text color.\nSets the text color.\nSets the underline color.\nSets the underline color.\nTransform operations\nMove the origin of an object by a given number of (x, y) …\nMove the origin of an object by a given number of (x, y) …")