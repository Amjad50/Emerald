var searchIndex = new Map(JSON.parse('[\
["emerald_kernel_user_link",{"doc":"","t":"SSSQCCQCQQPGPFFPPGFGPPSPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOHOONNNNNNNNNNNNNNNNNNNNNNFNNNONNNONNNPPPPPPPPPPKPPPPPPPPPSPPPPSSSSSSSSSSSSSSSSSSGGPINNNNNNNNNNNNMNNHHHHNNNNNN","n":["FD_STDERR","FD_STDIN","FD_STDOUT","call_syscall","file","process","sys_arg","syscalls","to_arg_err","verify_args","Block","BlockingMode","BlockingMode","DirEntry","DirFilename","Directory","File","FileMeta","FileStat","FileType","IsTerminal","Line","MAX_FILENAME_LEN","None","as_cstr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","default","default","default","default","eq","eq","eq","eq","eq","eq","file_type","filename_cstr","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_flags","hash","hash","hash","hash","hash","hash","inner_u64","into","into","into","into","into","into","name","parse_flags","size","stat","to_u64","to_u64_meta_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","SpawnFileMapping","borrow","borrow_mut","clone","dst_fd","fmt","from","into","src_fd","try_from","try_into","type_id","BufferTooSmall","CouldNotAllocateProcess","CouldNotLoadElf","CouldNotOpenFile","CouldNotReadFromFile","CouldNotWriteToFile","DuplicateFileMappings","EndOfFile","Err","FileNotFound","FromSyscallArgU64","GeneralInvalid","HeapRangesExceeded","InvalidArgument","InvalidError","InvalidFileIndex","InvalidHeapIncrement","InvalidUserPointer","IsDirectory","IsNotDirectory","NUM_SYSCALLS","NotValidUtf8","Ok","PidNotFound","ProcessStillRunning","SYSCALL_INTERRUPT_NUMBER","SYS_BLOCKING_MODE","SYS_CHDIR","SYS_CLOSE","SYS_CREATE_PIPE","SYS_EXIT","SYS_GET_CWD","SYS_GET_FILE_META","SYS_INC_HEAP","SYS_OPEN","SYS_OPEN_DIR","SYS_READ","SYS_READ_DIR","SYS_SET_FILE_META","SYS_SPAWN","SYS_STAT","SYS_WAIT_PID","SYS_WRITE","SyscallArgError","SyscallError","SyscallNotFound","SyscallResult","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","from","from_syscall_arg_u64","into","into","syscall_arg_to_u64","syscall_handler_wrapper","syscall_result_from_u64","syscall_result_to_u64","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"emerald_kernel_user_link"],[10,"emerald_kernel_user_link::file"],[108,"emerald_kernel_user_link::process"],[120,"emerald_kernel_user_link::syscalls"],[192,"core::ffi::c_str"],[193,"core::fmt"],[194,"core::fmt"],[195,"core::option"],[196,"core::result"],[197,"core::any"],[198,"core::ops::function"]],"d":["","","","Creates a syscall, the first argument is the syscall …","","","Get the syscall arguments from the interrupt state, the …","","","","","A blocking flag when dealing with files When using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Will extract all the information from the flags, will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contains the error value","","","","","","","","","","","","","","Contains the success value","","","must be one of user interrupts, i.e. 0x20+","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,3,0,7,0,0,4,4,0,0,0,7,3,0,3,1,3,4,5,1,6,7,3,4,5,1,6,7,3,4,5,1,6,7,4,5,1,6,3,4,5,1,6,7,5,6,3,4,5,1,6,7,3,4,5,1,1,6,7,3,3,4,5,1,6,7,7,3,4,5,1,6,7,6,0,5,6,3,7,3,3,4,5,1,6,7,7,3,4,5,1,6,7,3,4,5,1,6,7,0,18,18,18,18,18,18,18,18,18,18,18,20,20,20,20,20,20,19,20,21,20,0,19,20,20,20,20,19,19,20,20,0,19,21,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,19,20,19,20,19,20,19,19,20,21,19,20,22,19,20,0,0,0,0,19,20,19,20,19,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[4,4],[5,5],[1,1],[6,6],[7,7],[[],4],[[],5],[[],1],[[],6],[[3,3],8],[[4,4],8],[[5,5],8],[[1,1],8],[[6,6],8],[[7,7],8],0,[6,2],[[3,9],10],[[4,9],10],[[5,9],10],[[1,9],10],[[6,9],10],[[7,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[11,1],[-1,-1,[]],[-1,-1,[]],[12,3],[[3,-1],13,14],[[4,-1],13,14],[[5,-1],13,14],[[1,-1],13,14],[[6,-1],13,14],[[7,-1],13,14],[7,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[12,[[15,[3]]]],0,0,[3,12],[7,12],[-1,[[16,[-2]]],[],[]],[12,[[16,[3,-1]]],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[13,[12,12]]],[[16,[7,-1]]],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,18],0,[[18,9],10],[-1,-1,[]],[-1,-2,[],[]],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,19],[20,20],[[19,19],8],[[19,9],10],[[20,9],10],[20,21],[-1,-1,[]],[-1,-1,[]],[12,[[16,[22,19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[16,[-1,19]]],22],[[12,-1],12,[[24,[],[[23,[21]]]]]],[12,21],[21,12],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]]],"c":[146],"p":[[5,"DirFilename",10],[5,"CStr",192],[6,"BlockingMode",10],[6,"FileType",10],[5,"FileStat",10],[5,"DirEntry",10],[6,"FileMeta",10],[1,"bool"],[5,"Formatter",193],[8,"Result",193],[1,"str"],[1,"u64"],[1,"tuple"],[10,"Hasher",194],[6,"Option",195],[6,"Result",196],[5,"TypeId",197],[5,"SpawnFileMapping",108],[6,"SyscallArgError",120],[6,"SyscallError",120],[8,"SyscallResult",120],[10,"FromSyscallArgU64",120],[17,"Output"],[10,"FnOnce",198]],"b":[]}],\
["increasing_heap_allocator",{"doc":"","t":"FFKNMONNNNNNMNNONNONNNNNNNNNN","n":["HeapAllocator","HeapStats","PageAllocatorProvider","alloc","allocate_pages","allocated","borrow","borrow","borrow_mut","borrow_mut","clone","dealloc","deallocate_pages","debug_free_blocks","fmt","free_size","from","from","heap_size","into","into","new","stats","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"increasing_heap_allocator"],[29,"core::alloc::layout"],[30,"core::option"],[31,"core::iter::traits::iterator"],[32,"core::fmt"],[33,"core::fmt"],[34,"core::any"]],"d":["","","","Safety","Return the start address of the new allocated heap","","","","","","","Safety","Deallocate pages from the end of the heap Return true if …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,1,4,7,1,7,1,7,7,1,4,1,7,7,1,7,7,1,7,1,1,1,7,1,7,1,7],"f":[0,0,0,[[[1,[-1]],2],3,4],[[4,5],[[6,[3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[[[1,[-1]],3,2],8,4],[[4,5],9],[[[1,[-1]]],[[0,[[11,[],[[10,[[8,[5,5]]]]]]]]],4],[[7,12],13],0,[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-1]]],4],[[[1,[-1]]],7,4],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]]],"c":[],"p":[[5,"HeapAllocator",0],[5,"Layout",29],[1,"u8"],[10,"PageAllocatorProvider",0],[1,"usize"],[6,"Option",30],[5,"HeapStats",0],[1,"tuple"],[1,"bool"],[17,"Item"],[10,"Iterator",31],[5,"Formatter",32],[8,"Result",32],[6,"Result",33],[5,"TypeId",34]],"b":[]}],\
["kernel",{"doc":"","t":"CCCQCQQCHCCHHCCCHQQCCCECPPPFGGPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPFGPPPPPPPFPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPFFPFPFPPPPFPPPPPPFPPPPPPFIIPPPGGPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHHHHHHHHHHNOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNHNNNNNNNNNNNOONOOONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFPFSSJFPFFFGPFPFPPFFPFPGFPFPFPFPFPFPPFFPPFFFFFFPPGPPPFPFOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOHOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNHOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOCFNNONNNNNNNONNNNOSJFKSONNHNNOHENCNNCHHHHHOCHHNCNNHHHMHMHHHCNOOHHHNONHOHHHHHHNNNNSJFFFSFFJFSFOONOOOOOOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNCOONNNNNNNNNOHHOHNNNNNNNOOOOOOONNNNOOOOONNNNNNNNNNNNNNNNNONNNNNNNOOOSSSSSSHIFFFFIIFJFONONNNNNNNNNNNNOONNNNNNNNOOOONNNNHHOOOOOOOOOONNOOCONNNONNNNNNOOOONJNNNNNNOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOHOOONNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNOOOOSSSHJKFSSSSMHNHHNCNNHHNNNCONHNOCNNNJSSFFFSGFFFSSSSSFFPPSOOOOOOOOHNHNNNNNNNNNNNNNNNNNNNNNNNONNONHNOHOOOOONNNNNNNNNNOOOOHNNNOOOONNNNNNNNNCOONOOOOOOOOOONNNNOOOOOONHNONOOHOOOOOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNSSSSSSSSSSSSSSHSSSSHHJSSKFNNCNNONNCHHNMCCHHNHNNNNJCHCFFFFFFSSSNNONNNNNNNNNNNNNNNNONONNHNNNNNNONNNNNNOOOOONOOOONNNNNNOOOONNOONNOOOOOONNNNONHOONNNNNNNNNNNNNNNNNNNNNNNFFNNNNONNCONNNNNNNNONNNNOONNONNNNNNNNOSSSSSSSSSSSPFPGFPFPPJJFFFGGFPPPOOCONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOOOOOOOONOOOOONNNOOONNNNNNNNNNNNNNNNNNNNNOHOHHOONNONNONNNNNNNNNNONNNNNNOOOOOOOOOOOOOOOONNONOOOOOOOOOOOOOOOCOONNNNONNNNNNNNNNOOOOOOOOOOOOOOOOOONNOOOOOOOOOOOONNNNNNNNOOONNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNOOOOOOONOOONNNNNNNNNONNNNNOOOSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPPPPPPPPPPPPPPPGKFFGPPFPPPPPPPPOONNNNNNNNNNOOONNNNNNOOOMONNNNNNNNNOONNOOONNNNNNNNNNMNNHNCNNNNNNNNNNNNNNNNNNNONNHNOOOOOSSSSSSSSSSSSSSSSSFFNNNNONONHNNNNONNONNONNNNNNNOCHPFFFFFUGGFFGPPPPPPPPPPPPPPPOOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOONOONNOONOOOONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNOONOONOONOOONOONOONOONOOOONOOOONNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNONOOSSSSSSSSSSSSSSTTPFPPTJFPJPFPFPKGFGTFPPPPPPPTPTTPONNNNNONNONNNNNNNNNNNNNNNNNNNNNNNHNOOONHNCNONNNNNNNNNNNNNNNNHNONOONNNNNNNNNNNOOCHNNONNNNNNMNHMNCNNOOOONNMNNONNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOPSGFPPFPPFFFGGUFGPPPPPPPCOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOONNOOOOONNOOOOOOONNNHOOONNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNONHONNNNNNOOONNNNNNNOOONOONNONOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOONNOOOOOSSSSSSSFFOONNNNNNOOONNNNNNNOOOOOOOONNNNNNNFPGFPFPFPPFFPPSPGFNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNONNNQNOOONNNNNNNNNNNNNNNNNNNHHNHNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFRFJHHNNNNNNNNNNNNCMNNNNNNNNNNNNHQNNNCHNNNNNNNNNNNNCCJGPFPFNNNNNNOOOHNNNNNNNNNHNNNOOONNNNHNNNNNNNNNOOOONNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPJSSSSFGFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSPPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNHHNHHONNNHOHCNNNCNNNNNNNNNNNNNONSSSSSSSSSSSSSSSPPSSPPSSSPPSSSSSPPPFGGNNNNNNNNNNNNNNHNNNNONOHNNNNNNNNNNNNNHSSSSFNNNNNNNNHNNNONNNNNCCCCCJFFNNNNNNNNNNNONONNONNNNNNNNSSSSSSSSSSSSSSSSSSSSFSSSSSSHHHJNNJHJNNNNHHHHHHHJJHJNNNNHJFFHNHNNNNNOHNONNOHNNNNOOOHNNNNNNOSSSSSSSJSSFFFFNNNNNNNNNNNNNNNNNHNNNNNNOCONNNNNNNHNHHHHHNNNNNHONNHNNOOOOHNNNNNNNNNNNNNNNHNOSSSSSSSSSSJFFNHNNNNNHHNNONNNHNNNOONNNNNNNOPPPPFPPPFPPPPPPPPPPFPFGFPPPFGFPPPPFPFFGPPFFGFFPPPPPPPPPPPPFFPFOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNOOOOOOONNOOONOOONNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONOOONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPSPFFSSJFFGGPPPPPNNNNONNNNNNNNNNNNNONNNNNNOOONNOOOOOONONONOONNNNNNNNNNNNOONNNOOOONONNNNNNNNNOONONNOOOOOOOOOOOOOOOOOOCNOOOONCNNNNNNNNNNNNNNNNNNNNNNOJFNNHNNONHNOHNHHHHNNNHHHSIHHHHHHHHHHHHHHHHHHHHHHHHHHCCSSSFFONNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNOCCCFNNNNNONNNNNNFFNNNNONNNNNNNNNNNOOONNNNNONNNNNNNNNNNNFFNNNNONNNNNNNNNOOOONNONNNNNNNNN","n":["acpi","collections","cpu","cpuid","devices","eprint","eprintln","executable","finish_boot","fs","io","kernel_main","load_init_process","macros","memory_management","multiboot2","panic","print","println","process","sync","aml","get_acpi_tables","tables","AccessField","Add","Alias","AmlCode","AmlParseError","AmlTerm","And","Aquire","Arg","Arg","Break","Buffer","ByteConst","CannotMoveBackward","Concat","ConcatRes","CondRefOf","ConstOne","ConstOnes","ConstZero","CreateBitField","CreateByteField","CreateDWordField","CreateFieldOp","CreateQWordField","CreateWordField","DWordConst","DataObject","DataObject","Debug","Decrement","DerefOf","DerefOf","Device","Divide","Else","Event","Expression","Field","FieldDef","FieldElement","FindSetLeftBit","FindSetRightBit","If","Increment","Index","Index","IndexField","IndexFieldDef","InvalidPkgLengthLead","InvalidTarget","LAnd","LEqual","LGreater","LGreaterEqual","LLess","LLessEqual","LNot","LNotEqual","LOr","Local","Local","Method","MethodCall","MethodObj","Mid","Mod","Multiply","Mutex","Name","Name","NameObj","NamedField","Nand","None","Noop","Nor","Not","Notify","ObjectType","Or","Package","Parser","PowerResource","PowerResource","PredicateBlock","Processor","ProcessorDeprecated","QWordConst","RefOf","RefOf","Region","RegionObj","Release","RemainingBytes","ReservedField","Reset","Return","Scope","ScopeObj","ShiftLeft","ShiftRight","Signal","SizeOf","Sleep","Stall","State","StateMethodsList","StateNamesList","Store","String","Subtract","Target","TermArg","ToBuffer","ToDecimalString","ToHexString","ToInteger","UnexpectedEndOfCode","VarPackage","Wait","While","WordConst","Xor","add_method","add_name","arg_count","backward","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_empty","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_parser","clone_state","code","display_binary_op","display_call_term_target","display_depth","display_fields","display_index","display_method","display_predicate_block","display_scope","display_target","display_term","display_term_arg","display_terms","display_with_depth","fields","fields","find_method","find_name","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_inner_parser","get_next_byte","get_pkg_length","index_name","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","methods","name","name","name","name","name","name","name","names","new","parse","parse","parse","parse","parse","parse","parse","parse","parse_aml","parse_fields_list_and_flags","parse_name","parse_root","parse_target","parse_term","parse_term_arg","parse_term_arg_general","parse_term_arg_last","parse_term_arg_non_method_arg","parse_term_list","peek_next_byte","pos","predicate","predict_possible_args","region_length","region_offset","region_space","remaining_bytes","resource_order","state","system_level","term_list","term_list","term_list","term_list","term_list","term_list","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_arg","try_parse_local","try_parse_name","try_parse_term","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unk1","unk2","unk3","Apic","Apic","ApicGenericAddress","BIOS_RO_MEM_END","BIOS_RO_MEM_START","BIOS_TABLES","Bgrt","Bgrt","BiosTables","DescriptionHeader","DescriptorTable","DescriptorTableBody","Dsdt","Facp","Facp","GenericInitiatorAffinity","GenericInitiatorAffinity","GicInterruptTranslationService","GicInterruptTranslationServiceAffinity","GiccAffinity","GiccAffinity","Hpet","Hpet","InterruptControllerStruct","InterruptSourceOverride","InterruptSourceOverride","IoApic","IoApic","LocalApicAddressOverride","LocalApicAddressOverride","LocalApicNmi","LocalApicNmi","MemoryAffinity","MemoryAffinity","NonMaskableInterrupt","NonMaskableInterrupt","ProcessorLocalAcpi","ProcessorLocalAcpiAffinity","ProcessorLocalApic","ProcessorLocalApic","ProcessorLocalX2Apic","ProcessorLocalX2ApicAffinity","Rsdp","RsdpV1","RsdpV2","Rsdt","Srat","Srat","Ssdt","StaticResourceAffinity","Unknown","Unknown","Unknown","Waet","Waet","Xsdt","acpi_disable","acpi_enable","acpi_processor_id","acpi_processor_uid","acpi_processor_uid","address","address_space_id","aml_code","apic_id","apic_id","arm_boot_arch","base_address","base_address_high","base_address_low","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","century","checksum","checksum","checksum","clock_domain","clock_domain","clock_domain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","creator_id","creator_revision","cstate_control","day_alarm","deallocate_acpi_mapping","device_handle","device_handle_type","dsdt","duty_offset","duty_width","emulated_device_flags","entries","event_timer_block_id","extended_checksum","extended_checksum","fadt_minor_version","firmware_control","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flush_size","flush_stride","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_header","from_header","from_header","from_physical_ptr","from_type_and_bytes","from_type_and_bytes","from_v1","from_v2","get_acpi_header_with_len","get_acpi_tables","get_struct_from_bytes","get_table","get_table_from_header","global_system_interrupt","global_system_interrupt","global_system_interrupt_base","gpe0_block","gpe0_block_length","gpe1_base","gpe1_block","gpe1_block_length","header","header","hpet_number","hypervisor_vendor_id","iapc_boot_arch","image_address","image_offset_x","image_offset_y","image_type","interrupt_controller_structs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","io_apic_address","io_apic_id","its_id","length","length","length","length_high","length_low","local_apic_address","local_apic_address","local_apic_lint","local_sapic_eid","main_counter_minimum_clock_tick","month_alarm","new","oem_id","oem_id","oem_id","oem_revision","oem_table_id","p_level2_latency","p_level3_latency","page_protection","pm1_control_length","pm1_event_length","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm2_control_length","pm_timer_block","pm_timer_length","preferred_pm_profile","proximity_domain","proximity_domain","proximity_domain","proximity_domain","proximity_domain","proximity_domain_high","proximity_domain_low","pstate_control","rdst","register_bit_offset","register_bit_width","reserved","reserved","reserved","reserved","reserved","reserved","reserved1","reserved1","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved2","reserved2","reserved3","reset_reg","reset_value","revision","revision","revision","rsdp","rsdp_v1","rsdt","rsdt_address","rsdt_address","s4bios_req","sci_interrupt","signature","signature","signature","sleep_control_reg","sleep_status_reg","smi_command_port","source","static_resource_allocation","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","x2apic_id","x_dsdt","x_firmware_control","x_gpe0_block","x_gpe1_block","x_pm1a_control_block","x_pm1a_event_block","x_pm1b_control_block","x_pm1b_event_block","x_pm2_control_block","x_pm_timer_block","xsdt_address","xsdt_address","bytes","struct_type","bytes","struct_type","ring","RingBuffer","borrow","borrow_mut","buffer","clear","empty","from","into","pop","push","push_replace","read_index","try_from","try_into","try_push","type_id","write_index","CPUID_FN_FEAT","CPUS","Cpu","IoPortInt","MAX_CPUS","apic_id","borrow","borrow_mut","clear_interrupts","clone","clone_into","context","cpu","cpuid","empty","flags","fmt","from","gdt","get_cr0","get_cr3","get_cr4","get_cs","halt","id","idt","inb","ind","init","interrupts","interrupts_disabled","into","invalidate_tlp","inw","io_in","io_in","io_out","io_out","lgdt","lidt","ltr","msr","n_cli","n_cli","old_interrupt_enable","outb","outd","outw","pop_cli","process_id","push_cli","rflags","scheduling","set_cr0","set_cr3","set_cr4","set_cs","set_data_segments","set_interrupts","to_owned","try_from","try_into","type_id","IF","GDT","GlobalDescriptorManager","GlobalDescriptorTable","GlobalDescriptorTablePointer","KERNEL_RING","SegmentSelector","SystemDescriptorEntry","TSS","TaskStateSegment","USER_RING","UserDescriptorEntry","access","access","apply_lgdt","base","base_high","base_high","base_low","base_low","base_middle","base_middle","base_upper","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","default","default","default","empty","empty","empty","empty","empty","flags","flags_and_limit","flags_and_limit","fmt","from","from","from","from","from","from","from","from_index","gdt","get_user_code_seg_index","get_user_data_seg_index","index","init_kernel_gdt","into","into","into","into","into","into","into","iomap_base","ist","kernel_code_seg","kernel_data_seg","limit","limit","limit_low","load_kernel_segments","load_tss","push_system","push_user","reserved","reserved2","reserved3","reserved4","rsp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_seg","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_code_seg","user_data_seg","zero","CODE","LONG_MODE","PRESENT","TSS_TYPE","USER","WRITE","dpl","BasicInterruptHandler","InterruptAllSavedState","InterruptDescriptorTable","InterruptDescriptorTableEntry","InterruptDescriptorTablePointer","InterruptHandlerWithAllState","InterruptHandlerWithError","InterruptStackFrame64","REDIRECTED_INTERRUPTS","RestSavedRegisters","alignment_check","apply_idt","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","control_protection","coprocessor_segment_overrun","cs","debug","default","default","default","default","default_handler","default_handler_with_error","device_not_available","divide_by_zero","double_fault","dr0","dr1","dr2","dr3","dr6","dr7","ds","empty","empty","error","es","flags","flags","fmt","fmt","fmt","frame","from","from","from","from","from","from","fs","general_protection_fault","gs","hypervisor_injection","init_default_handlers","interrupt_vector_table","into","into","into","into","into","into","invalid_opcode","invalid_tss","ist","limit","machine_check","non_maskable_interrupt","number","offset_high","offset_low","offset_middle","overflow","override_code_segment","page_fault","phantom","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","reserved_1","reserved_2","reserved_3","reserved_4","rest","rflags","rip","rsi","rsp","rust_interrupt_handler_for_all_state","security_exception","segment_not_present","selector","set_disable_interrupts","set_handler","set_handler","set_handler_ptr","set_handler_with_number","set_privilege_level","set_stack_index","simd_floating_point","ss","stack_exception","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_defined","vmm_communication","x87_floating_point","zero","GATE_TYPE","KEEP_INTERRUPTS","PRESENT","dpl","INTERRUPTS","InterruptHandler","Interrupts","MAX_USER_INTERRUPTS","SPECIAL_SCHEDULER_INTERRUPT","SPECIAL_SYSCALL_INTERRUPT","USER_INTERRUPTS_START","allocate_and_set_handler","allocate_basic_user_interrupt","allocate_basic_user_interrupt","allocate_user_interrupt","allocate_user_interrupt_all_saved","allocate_user_interrupt_all_saved","apic","borrow","borrow_mut","create_scheduler_interrupt","create_syscall_interrupt","empty","from","get_next_interrupt","handlers","idt","init","init_interrupts","into","last_used_user_interrupt","stack_index","try_from","try_into","type_id","APIC","APIC_BAR_ENABLED","APIC_BASE_MASK","Apic","ApicMmio","ApicReg","CPUID_FEAT_EDX_APIC","DestinationType","IoApic","IoApicMmio","IoApicRedirectionBuilder","LVT_MASK_MASK","LVT_MESSAGE_TYPE_MASK","LVT_TIMER_MODE_MASK","LVT_TRIGGER_MODE_MASK","LVT_VECTOR_MASK","LocalVectorRegister","LocalVectorRegisterBuilder","Logical","Physical","SPURIOUS_ENABLE","_pad","_pad1","_pad2","_pad3","_pad4","_pad5","_pad6","arbitration_priority","assign_io_irq","assign_io_irq","assign_io_irq_custom","assign_io_irq_custom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","default","default","destination_format","disable_local_interrupts","disable_pic","empty","end_of_interrupt","error_interrupt_handler","error_local_vector_table","error_status","extended_apic_control","extended_apic_features","extended_interrupt_local_vector_tables","from","from","from","from","from","from","from","from","from","from","global_irq_base","id","id","in_service","init","init","initialize_spurious_interrupt","initialize_timer","interrupt_command_high","interrupt_command_low","interrupt_enable","interrupt_request","into","into","into","into","into","into","into","into","into","io_apic","io_apics","irq_pin_assersion","is_entry_taken","lint0_local_vector_table","lint1_local_vector_table","logical_destination","mmio","mmio","n_cpus","n_entries","pad","performance_local_vector_table","processor_priority","read","read","read_register","read_register","reg","reg","reg","reg","register_select","remote_read","reset_all_interrupts","return_from_interrupt","return_from_interrupt","return_of_interrupt","setup_error_interrupt","source_overrides","specifc_end_of_interrupt","spurious_handler","spurious_interrupt_vector","task_priority","thermal_local_vector_table","timer_current_count","timer_divide_configuration","timer_initial_count","timer_local_vector_table","to_owned","to_owned","trigger_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","with_delivery_mode","with_destination","with_interrupt_polartiy_low","with_mask","with_mask","with_message_type","with_periodic_timer","with_trigger_mode","with_trigger_mode_level","with_vector","with_vector","write","write","write_redirect_entry","write_register","write_register","IO_APIC_ARBITRATION_ID","IO_APIC_ID","IO_APIC_REDIRECTION_TABLE","IO_APIC_VERSION","RDR_DELIVERY_MODE_MASK","RDR_DELIVERY_STATUS_MASK","RDR_DESTINATION_LOGICAL_MASK","RDR_DESTINATION_MODE_MASK","RDR_DESTINATION_PHYSICAL_MASK","RDR_MASK_MASK","RDR_PIN_POLARITY_MASK","RDR_REMOTE_IRR_MASK","RDR_TRIGGER_MODE_MASK","RDR_VECTOR_MASK","apic_timer_handler","DOUBLE_FAULT_STACK","FAULTS_STACK","APIC_BASE","EFER","read","write","DEVICES","DEVICES_FILESYSTEM_CLUSTER_MAGIC","DEVICES_FILESYSTEM_ROOT_INODE_MAGIC","Device","Devices","borrow","borrow_mut","clock","clone_device","close","devices","fmt","from","ide","init_devices_mapping","init_legacy_devices","into","name","pci","pipe","probe_pci_driver","prope_pci_devices","read","register_device","try_from","try_into","type_id","write","HPET_CLOCK","hpet","init","rtc","Hpet","HpetInterruptStatus","HpetMmio","HpetTimerConfig","HpetTimerMmio","InterruptRouteCapabilityBitmap","LEGACY_PIT_IO_PORT_CHANNEL_0","LEGACY_PIT_IO_PORT_CONTROL","ONE_SECOND_IN_FEMTOSECONDS","ack","ack_interrupt","bitmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","comparator_value","config","config_and_capabilities","counter_clock_period","current_counter","disable_pit","enabled_rounts","fmt","fmt","fmt","fmt","fmt","force_32bit_mode","from","from","from","from","from","from","fsb_capable","fsb_interrupt_route","general_capabilities_id","general_configuration","general_interrupt_status","initialize_from_bios_table","interrupt_enabled","interrupt_route","interrupt_route_capabilities","interrupt_via_fsb","into","into","into","into","into","into","is_64bit_capable","is_interrupt_level_trigerred","is_periodic","is_periodic_capable","is_set","is_set","main_counter_value","mmio","read","read_general_configuration","reserved","reserved","reserved0","reserved1","reserved2","reserved3","set_config","set_enable_legacy_replacement_route","set_enabled","set_interrupts_iter","status","status_interrupts_iter","timer0_handler","timer_set_value","timers","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write_comparator_value","write_general_configuration","Rtc","RtcTime","borrow","borrow","borrow_mut","borrow_mut","century_reg","clone","clone_into","consts","day_of_month","default","eq","fmt","fmt","from","from","get_time","get_time_sync","hours","into","into","is_bcd","is_updating","minutes","month","new","read_register","seconds","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","year","CURRENT_CENTURY","RTC_ADDRESS","RTC_DATA","RTC_DAY_OF_MONTH","RTC_HOURS","RTC_MINUTES","RTC_MONTH","RTC_SECONDS","RTC_STATUS_A","RTC_STATUS_B","RTC_YEAR","Ata","AtaCommand","Atapi","AtapiDmaDirection","AtapiPacketCommand","BoundsExceeded","CommandIdentifyDataRaw","DeviceError","FromDevice","IDE_DEVICES","INTERRUPTS_SETUP","IdeDevice","IdeDeviceImpl","IdeDeviceIndex","IdeDeviceType","IdeError","IdeIo","None","ToDevice","UnalignedSize","addional_supported","additional_product_id","ata","atapi_byte_count_behavior","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_block","command_set_supported_or_enabled","command_set_supported_or_enabled2","control_block","current_apm_level","current_media_serial_number","data_set_management_trim_support","device_impl","device_name","device_nominal_form_factor","device_type","dma","drive","drive","eq","execute","execute","extended_user_addressable_sectors","features","firmware_revision","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","general_config","get_ide_device","hardware_reset_result","ide_interrupt_primary","ide_interrupt_secondary","identify_data","index","init_new","init_new","integrity_word","interrupt","interrupt","interseek_delay_for_iso_7779","into","into","into","into","into","into","into","into","into","into","io","is_dma_supported","is_lba48_supported","is_lba_supported","is_primary","is_secondary","is_valid","lba","lba","logical_sector_size","logical_sectors_alignment","major_version","master_io","master_password_id","max_blocks_per_data_set_management","max_blocks_per_download_microcode","max_sectors_per_multiple_commands","min_blocks_per_download_microcode","min_multiword_dma_transfer_cycle_time","min_pio_transfer_cycle_time_no_flow_control","min_pio_transfer_cycle_time_with_ioready","minor_version","model_number","new","new","nominal_media_rotation_rate","number_of_sectors","number_of_sectors","obsolete1","obsolete10","obsolete11","obsolete12","obsolete13","obsolete2","obsolete3","obsolete4","obsolete6","obsolete7","obsolete8","obsolete9","params","params_index","pci_cfg","pci_device","physical_logical_sector_size","probe_init","push_param","push_param_u16","push_param_u32","queue_depth","read_command_block","read_control_block","read_data","read_data_block","read_error","read_sense_key","read_status","read_sync","read_sync_ata","read_sync_atapi","recommended_multiword_dma_transfer_cycle_time","reserved","reserved10","reserved11","reserved2","reserved3","reserved4","reserved5","reserved6","reserved7","reserved8","reserved9","reserved_cfa1","reserved_cfa2","sct_command_transport","second_device_select","second_device_select","sector_count","sector_size","sector_size","sector_size","security_status","serial_ata_capabilities","serial_ata_features_enabled","serial_ata_features_supported","serial_number","specific_config","stream_access_latency","stream_dma_time","stream_min_request_size","stream_performance_granularity","streaming_transfer_time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transport_major_version","transport_minor_version","trusted_computing_features","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_register_ide_device","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ultra_dma_modes","unk_53","unk_59","unk_63","unk_64","unk_89","unk_90","user_addressable_sectors","user_addressable_sectors","user_addressable_sectors_28_mode","vendor_specific","wait_until_can_command","wait_until_free","with_byte_count_limit","with_dma","with_features","with_lba","with_second_drive","with_second_drive","with_sector_count","world_wide_name","write","write_command_block","write_control_block","write_data","write_packet_command","write_read_verify_feature_set_current_mode","write_read_verify_sector_count_mode2","write_read_verify_sector_count_mode3","ALT_STATUS","COMMAND","COMMAND_DEVICE_RESET","COMMAND_IDENTIFY","COMMAND_PACKET","COMMAND_PACKET_IDENTIFY","COMMAND_READ_SECTORS","DATA","DEFAULT_SECTOR_SIZE","DEV_CONTROL","DRIVE","ERROR","ERROR_ABORTED","ERROR_BAD_BLOCK","ERROR_END_OF_MEDIA","ERROR_ID_NOT_FOUND","ERROR_ILL_LENGTH","ERROR_SENSE_KEY","ERROR_UNCORRECTABLE","FEATURES","LBA_HI","LBA_LO","LBA_MID","PACKET_CMD_INQUIRY","PACKET_CMD_READ_10","PACKET_CMD_READ_CAPACITY","PACKET_CMD_TEST_UNIT_READY","PACKET_FEAT_DMA","PACKET_FEAT_DMA_DIR_FROM_DEVICE","PACKET_INQUIRY_VITAL_DATA","PACKET_VITAL_PAGE_BLOCK_LIMITS","PACKET_VITAL_PAGE_BLOCK_LIMITS_SIZE","PACKET_VITAL_PAGE_DEVICE_IDENTIFY","PACKET_VITAL_PAGE_SUPPORTED_PAGES","SECTOR_COUNT","SENSE_ABORTED_COMMAND","SENSE_BLANK_CHECK","SENSE_COPY_ABORTED","SENSE_DATA_PROTECT","SENSE_HARDWARE_ERROR","SENSE_ILLEGAL_REQUEST","SENSE_MEDIUM_ERROR","SENSE_MISCOMPARE","SENSE_NOT_READY","SENSE_OK","SENSE_RECOVERED_ERROR","SENSE_UNIT_ATTENTION","SENSE_VENDOR_SPECIFIC","SENSE_VOLUME_OVERFLOW","STATUS","STATUS_ALIGN_ERR","STATUS_BUSY","STATUS_DATA_REQUEST","STATUS_DEFERRED_WRITE_ERR","STATUS_DRIVE_FAULT","STATUS_ERR","STATUS_READY","STATUS_SENSE_DATA","CFG_CONTROL_REG","CMD_BUS_MASTER","CMD_INT_DISABLE","CMD_IO_SPACE","CMD_MEM_SPACE","DEFAULT_PRIMARY_INTERRUPT","DEFAULT_PRIMARY_IO","DEFAULT_SECONDARY_INTERRUPT","DEFAULT_SECONDARY_IO","PROG_IF_MASTER","PROG_IF_PRIMARY","PROG_IF_PRIMARY_PROGRAMMABLE","PROG_IF_SECONDARY","PROG_IF_SECONDARY_PROGRAMMABLE","BaseSystemPeripheral","BridgeDevice","CoProcessor","DisplayController","DockingStation","EncryptionController","InputDeviceController","IntelligentController","Io","MassStorageController","Memory","MemoryController","MultimediaController","NetworkController","NonEssentialInstrumentation","None","PciBar","PciDevice","PciDeviceConfig","PciDevicePropeIterator","PciDeviceType","ProcessingAccelerator","Processor","PropeExtra","Reserved","SatelliteCommunicationController","SerialBusController","SignalProcessingController","SimpleCommunicationController","Unassigned","Unclassified","WirelessController","args","base_address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","bus","capabilities_ptr","clone","clone","clone","clone_into","clone_into","clone_into","dev","dev","device_id","device_name","device_type","fmt","fmt","fmt","fmt","from","from","from","from","from","func","func","get_io","get_memory","header_type","interrupt_line","interrupt_pin","into","into","into","into","into","into_iter","new","new","next","probe","probe_init","read_command","read_config","read_pci_config","read_status","reg","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vendor_id","write_command","write_config","write_pci_config","write_status","addr","addr","prefetchable","size","size","BAR0","BAR1","BAR2","BAR3","BAR4","BAR5","CAPABILITIES_PTR","CLASS_DWORD","COMMAND","DEVICE_ID","HEADER_TYPE","INTERRUPT_LINE","INTERRUPT_PIN","STATUS","SUBSYSTEM_ID","SUBSYSTEM_VENDOR_ID","VENDOR_ID","InnerPipe","PipeSide","borrow","borrow","borrow_mut","borrow_mut","buffer","clone_device","clones","close","create_pipe_pair","fmt","fmt","from","from","inner","into","into","is_read_side","name","read","read_side_available","try_from","try_from","try_into","try_into","type_id","type_id","write","write_side_available","elf","load_elf_to_vm","Dynamic","Elf","ElfHeader","ElfHeader32","ElfHeader64","ElfHeaderBase","ElfHeaderUnion","ElfLoadError","ElfProgram","ElfProgram32","ElfProgram64","ElfProgramType","FileSystemError","Interpreter","InvalidElfOrNotSupported","InvalidMagic","Load","Note","Null","OsSpecific","ProcessorSpecific","Program32","Program64","ProgramHeader","Shlib","ThreadLocalStorage","UnexpectedEndOfFile","_pad","abi","abi_version","alignment","alignment","alignment","base","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consts","elf_type","elf_version","endianness","entry","entry","entry","entry_point","file_size","file_size","file_size","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_u32","header","header","header32","header64","header_size","header_size","into","into","into","into","into","into","into","into","into","into","into","is_elf64","is_little_endian","is_valid_and_supported","load","load","machine","magic","mem_size","mem_size","mem_size","offset","offset","offset","physical_address","physical_address","physical_address","prg_headers","program_header_entry_count","program_header_entry_count","program_header_entry_count","program_header_entry_size","program_header_entry_size","program_header_entry_size","program_header_offset","program_header_offset","program_header_offset","program_headers","section_header_entry_count","section_header_entry_count","section_header_entry_size","section_header_entry_size","section_header_offset","section_header_offset","section_header_offset","section_header_string_table_index","section_header_string_table_index","size_of_header","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_virtual_memory_flags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","virtual_address","virtual_address","virtual_address","ABI_SYSV","BITS_32","BITS_64","ELF_MACHINE_X86","ELF_MACHINE_X86_64","ELF_MAGIC","ELF_TYPE_EXECUTABLE","ELF_TYPE_RELOCATABLE","ELF_TYPE_SHARED","ENDIANNESS_BIG","ENDIANNESS_LITTLE","PROG_FLAG_EXE","PROG_FLAG_READ","PROG_FLAG_WRITE","ARCHIVE","DIRECTORY","DeviceNotFound","Directory","Directory","DiskReadError","EMPTY","EMPTY_FILESYSTEM","EmptyFileSystem","EndOfFile","FILESYSTEM_MAPPING","FatError","File","File","FileAttributes","FileNotFound","FileSystem","FileSystemError","FileSystemMapping","FilesystemNode","HIDDEN","INode","InvalidData","InvalidOffset","InvalidPath","IsDirectory","IsNotDirectory","MustBeAbsolute","PartitionTableNotFound","READ_ONLY","ReadNotSupported","SYSTEM","VOLUME_LABEL","WriteNotSupported","archive","as_dir_mut","as_file","as_file_mut","as_file_stat","attributes","attributes","bitor","blocking_mode","blocking_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_inherit","clone_into","clone_into","clone_into","create_disk_mapping","device","device","dir_entries","directory","drop","empty_filesystem","eq","fat","filesize","filesystem","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_inode","from_inode","get_mapping","get_mapping","hidden","inode","inode","inode","into","into","into","into","into","into","into","into","is_blocking","is_dir","is_terminal","is_terminal","mappings","mbr","mount","mount","name","name","new_device","new_file","open","open","open","open_blocking","open_dir","open_dir","open_inode","open_root","open_root","path","path","path","path","path","position","position","read","read","read_dir","read_dir","read_file","read_only","read_to_end","seek","set_blocking","set_terminal","size","size","start_cluster","start_cluster","system","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","volume_label","write","write_file","error","sector","Bad","DIRECTORY_ENTRY_SIZE","Directory","DirectoryIterator","EndOfChain","Fat12","Fat12_16ExtendedBootSector","Fat16","Fat32","Fat32ExtendedBootSector","FatBootSector","FatBootSectorRaw","FatEntry","FatError","FatExtendedBootSector","FatFilesystem","FatType","Free","InvalidBootSector","Next","Normal","Reserved","RootFat12_16","UnexpectedFatEntry","attrs","backup_boot_sector","boot_code","boot_code","boot_sector","boot_sector","boot_signature","boot_signature","boot_signature_2","boot_signature_2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_cluster","bytes_per_sector","bytes_per_sector","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_cluster","current_sector","current_sector_index","data_sectors","data_start_sector","device","dir","drive_number","drive_number","entry_index_in_sector","eq","eq","ext_flags","extended","fat","fat12_16","fat32","fat_size_16","fat_size_32","fat_size_in_sectors","fat_start_sector","fat_type","file_attribute_from_fat","file_system_type","file_system_type","filesystem","first_sector_of_cluster","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_u32","fs_info","fs_version","get_next_entry","hidden_sectors","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","jmp_boot","load_fat","load_fat_filesystem","media_type","new","new","new","next","next_sector","number_of_fats","number_of_fats","number_of_heads","oem_name","open_dir","open_dir_inode","open_root_dir","open_root_dir_inode","read_fat_entry","read_file","read_sectors","reserved","reserved","reserved_2","reserved_sectors_count","reserved_sectors_count","root_cluster","root_dir_sectors","root_dir_start_sector","root_entry_count","sectors_per_cluster","sectors_per_cluster","sectors_per_track","size_in_sectors","start_lba","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_sectors","total_sectors_16","total_sectors_32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","volume_id","volume_id","volume_label","volume_label","volume_label","volume_label","inode","size_in_sectors","start_sector","ARCHIVE","DIRECTORY","HIDDEN","LONG_NAME","READ_ONLY","SYSTEM","VOLUME_ID","MbrRaw","PartitionEntry","boot_code","bootable","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","end_cylinder","end_head","end_sector","fmt","fmt","from","from","into","into","is_valid","partition_table","partition_type","signature","size_in_sectors","start_cylinder","start_head","start_lba","start_sector","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Ancestors","Body","Component","Components","CurDir","Display","Done","Iter","Normal","ParentDir","Path","PathBuf","Prefix","RootDir","SEPARATOR","StartDir","State","StripPrefixError","_ends_with","_join","_push","_set_file_name","_starts_with","_strip_prefix","_with_file_name","ancestors","as_path","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","components","default","deref","display","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","file_name","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","front","has_last_separator","has_root","has_root","has_root","has_root","hash","hash","hash","impl_cmp","include_cur_dir","inner","inner","inner","into","into","into","into","into","into","into","into","into_boxed_path","into_iter","into_iter","into_iter","into_iter","into_iter","into_string","is_absolute","is_empty","is_relative","is_root","is_separator","is_separator_byte","iter","iter_after","join","len_before_body","new","new","next","next","next","next","next_back","next_back","parent","parse_next_component","parse_next_component_back","parse_single_component","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","pop","push","reserve","reserve_exact","set_file_name","shrink_to","shrink_to_fit","starts_with","strip_prefix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_str","to_string","to_string","to_string_lossy","trim_left","trim_right","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_file_name","ArrayTrait","ByteStr","HexArray","Item","NoDebug","PRINT_ERR","_eprint","_print","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","console","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","from","from","from","hexdump","impl_copy_clone_deref_wrapper","into","into","into","keyboard","set_err_enable","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uart","video_memory","CONSOLE","Console","Early","EarlyConsole","Late","LateConsole","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","console_cmd_buffer","current_foreground","current_vga_attrib","early_init","empty","empty_early","fmt","from","from","from","init","init_early","init_late","init_late_device","into","into","into","is_bold","is_faint","keyboard","late_device","migrate_from_early","read","run_with","run_with_console","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uart","uart","video_buffer","video_buffer","write","write","write_byte","write_byte","write_str","write_str","A","Application","B","Backslash","Backspace","Backtick","C","Calculator","CapsLock","Comma","D","Delete","Dot","DownArrow","E","Email","End","Enter","Equals","Escape","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","Home","I","Insert","J","K","KEYBOARD","KEYBOARD_DATA_PORT","KEYBOARD_INT_NUM","KEYBOARD_STATUS_PORT","KEY_PRESSED","Key","KeyType","Keyboard","Keypad0","Keypad1","Keypad2","Keypad3","Keypad4","Keypad5","Keypad6","Keypad7","Keypad8","Keypad9","KeypadAsterisk","KeypadDot","KeypadEnter","KeypadMinus","KeypadPlus","KeypadSlash","L","LeftAlt","LeftArrow","LeftBracket","LeftCtrl","LeftGUI","LeftShift","M","Minus","MultimediaMute","MultimediaNextTrack","MultimediaPlayPause","MultimediaPreviousTrack","MultimediaSelect","MultimediaStop","MyComputer","N","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLock","O","P","PageDown","PageUp","Power","Q","R","RightAlt","RightArrow","RightBracket","RightCtrl","RightGUI","RightShift","S","ScrollLock","Semicolon","SingleQuote","Slash","Sleep","Space","T","Tab","U","US_KEYTYPE_KEYMAP","US_KEYTYPE_KEYMAP_SHIFTED","UpArrow","V","VolumeDown","VolumeUp","W","WWWBack","WWWFavorites","WWWForward","WWWHome","WWWRefresh","WWWSearch","WWWStop","Wake","X","Y","Z","_None1","_None2","_None3","_None4","active_modifiers","active_toggles","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","empty","eq","fmt","fmt","fmt","from","from","from","get_keyboard","get_modifier","get_next_char","get_toggle","init_keyboard","input_ring","into","into","into","is_modifier","key_type","keyboard_interrupt_handler","modifier","modifiers","read_data","read_status","status","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_read_char","type_id","type_id","type_id","virtual_char","virtual_key","ALT","CAPS_LOCK","CTRL","EXTENDED","NUM_LOCK","SCROLL_LOCK","SHIFT","COMMAND_DATA","DATA_READY","INPUT_BUFFER_FULL","KEYBOARD_LOCKED","KEYBOARD_TIMEOUT_MOUSE_DATA","PARITY_ERROR","RECEIVE_TIMEOUT","SYSTEM_FLAG","COM1","Data","IE_RX_READY","IE_TX_READY","InterruptAndFifoControl","InterruptEnable","LINE_BAUD_LATCH","LINE_RX_READY","LINE_TX_EMPTY","LineControl","LineStatus","MODEM_CTL_DTR","MODEM_CTL_LOOPBACK","MODEM_CTL_OUT1","MODEM_CTL_OUT2","MODEM_CTL_RTS","ModemControl","ModemStatus","Scratch","Uart","UartPort","UartReg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from","init","init_port","interrupt_num","into","into","into","is_enabled","new","port_addr","read_reg","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_read_byte","type_id","type_id","type_id","write_byte","write_reg","DEFAULT_ATTRIB","VGA_BUFFER_ADDR","VGA_HEIGHT","VGA_WIDTH","VgaBuffer","borrow","borrow_mut","clear","clear_line","clone","clone_into","fix_after_advance","from","get_index","init","into","new","pos","to_owned","try_from","try_into","type_id","write_byte","kernel_heap_allocator","memory_layout","physical_page_allocator","virtual_memory_mapper","virtual_space","ALLOCATOR","LockedKernelHeapAllocator","PageAllocator","alloc","allocate_pages","borrow","borrow","borrow_mut","borrow_mut","dealloc","deallocate_pages","empty","from","from","heap_start","init_mutex","inner","into","into","mapped_pages","new","stats","try_from","try_from","try_into","try_into","type_id","type_id","EXTENDED_OFFSET","GB","INTR_STACK_BASE","INTR_STACK_COUNT","INTR_STACK_EMPTY_SIZE","INTR_STACK_ENTRY_SIZE","INTR_STACK_SIZE","INTR_STACK_TOTAL_SIZE","KB","KERNEL_BASE","KERNEL_END","KERNEL_EXTRA_MEMORY_BASE","KERNEL_EXTRA_MEMORY_SIZE","KERNEL_HEAP_BASE","KERNEL_HEAP_SIZE","KERNEL_LAST_POSSIBLE_ADDR","KERNEL_LINK","KERNEL_MAPPED_SIZE","KERNEL_PROCESS_VIRTUAL_ADDRESS_START","MB","MemSize","PAGE_2M","PAGE_4K","PROCESS_KERNEL_STACK_BASE","PROCESS_KERNEL_STACK_END","PROCESS_KERNEL_STACK_GUARD","PROCESS_KERNEL_STACK_SIZE","align_down","align_range","align_up","begin","borrow","borrow_mut","data_end","display_kernel_map","end","fmt","fmt","from","into","is_aligned","kernel_elf_data_end","kernel_elf_end","kernel_elf_rodata_end","kernel_elf_size","kernel_text_end","physical2virtual","rodata_end","stack_guard_page","stack_guard_page_ptr","text_end","to_string","try_from","try_into","type_id","virtual2physical","ALLOCATOR","FreePage","PhysicalPageAllocator","alloc","alloc","alloc_zeroed","borrow","borrow","borrow_mut","borrow_mut","empty","end","free","free","free_count","from","from","high_mem_start","init","init","init_range","into","into","low_mem_free_list_head","next","start","stats","try_from","try_from","try_into","try_into","type_id","type_id","used_count","ADDR_MASK","KERNEL_L3_INDEX_END","KERNEL_L3_INDEX_START","KERNEL_L3_PROCESS_INDEX_END","KERNEL_L3_PROCESS_INDEX_START","KERNEL_L4_INDEX","KERNEL_PROCESS_VIRTUAL_ADDRESS_START","KERNEL_VIRTUAL_MEMORY_MANAGER","MAX_USER_VIRTUAL_ADDRESS","NUM_USER_L4_INDEXES","PageDirectoryTable","PageDirectoryTablePtr","VirtualMemoryMapEntry","VirtualMemoryMapper","add_process_specific_mappings","alloc_new","as_mut","as_physical","as_ptr","as_ref","as_virtual","boot_vm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_current_vm_as_user","clone_into","clone_kernel_mem","do_for_every_user_entry","do_for_kernel_process_entry","do_for_ranges_enteries","enteries_from_mut_entry","entries","flags","flags","fmt","free","from","from","from","from","from_entry","get_current_vm","get_current_vm","get_l1","get_l2","get_l3","get_l4","init_kernel_vm","into","into","into","into","is_address_mapped","is_address_mapped_in_kernel","is_user","load_vm","map","map_kernel","new","new_kernel_vm","page_map_l4","physical_addr","physical_address","size","switch_to_kernel","switch_to_this","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unmap","unmap_kernel","unmap_process_memory","virtual_address","PTE_ACCESSED","PTE_DIRTY","PTE_GLOBAL","PTE_HUGE_PAGE","PTE_NOT_CACHEABLE","PTE_NO_EXECUTE","PTE_PRESENT","PTE_USER","PTE_WRITABLE","PTE_WRITETHROUGH","VIRTUAL_SPACE_ALLOCATOR","VirtualSpaceAllocator","VirtualSpaceEntry","allocate","allocate_and_map_virtual_space","borrow","borrow","borrow_mut","borrow_mut","deallocate","deallocate_virtual_space","debug_blocks","debug_blocks","empty","entries","from","from","get_entry_containing","get_virtual_for_physical","get_virtual_for_physical","into","into","physical_start","size","try_from","try_from","try_into","try_into","type_id","type_id","virtual_for_physical","virtual_start","ACPINonVolatile","ACPINonVolatile","ACPIReclaimable","ACPIReclaimable","AdvancedPowerManagementTable","AdvancedPowerManagementTable","Available","BadMemory","BasicMemoryInfo","BasicMemoryInfo","BiosBootDevice","BootCommandLine","BootLoaderName","BootServicesCode","BootServicesData","Conventional","Efi64ImageHandle","Efi64SystemTablePtr","EfiBootServicesNotTerminated","EfiMemoryMap","EfiMemoryMap","EfiMemoryMapIter","EfiMemoryMapType","EfiMemoryMapsRaw","EgaText","ElfSymbols","FrameBufferInfo","Framebuffer","FramebufferColorInfo","FramebufferRaw","ImageLoadBasePhysical","Indexed","LoaderCode","LoaderData","MemoryMap","MemoryMap","MemoryMapIter","MemoryMapTagRaw","MemoryMapType","MemoryMappedIO","MemoryMappedIOPortSpace","MemoryMapsRaw","MultiBoot2Info","MultiBootTag","MultiBootTagIter","MultiBootTagRaw","NewRsdp","OldRsdp","PalCode","PersistentMemory","Reserved","Reserved","Rgb","RuntimeServicesCode","RuntimeServicesData","Undefined","Undefined","Unusable","VbeControlInfo","VbeInfo","VbeInfo","VbeModeInfo","_entry_version","addr","addr","attributes","attributes","attributes","bank_size","banks","base_addr","base_addr","blue_field_position","blue_mask_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","bpp","bpp","bytes_per_scanline","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_info","control_info","cseg","cseg_16","cseg_16_len","cseg_len","current","data_ptr","data_slice","direct_color_mode_attributes","dseg","dseg_len","end_address","entry_size","entry_size","entry_size","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer","framebuffer_addr","framebuffer_type","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_color_info","get_most_recent_rsdp","green_field_position","green_mask_size","height","height","height","image_pages","interface_len","interface_off","interface_seg","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_rgb","length","length","mem_lower","mem_type","mem_type","mem_type","mem_type","mem_upper","memory_map_raw","memory_map_raw","memory_maps","memory_model","mode","mode_info","next","next","next","number_of_pages","number_of_pages","oem_data","oem_str_ptr","offset","phantom","physical_start","physical_start","pitch","pitch","planes","product_name","product_rev","red_field_position","red_mask_size","remaining","remaining","remaining","reserved","reserved","reserved","reserved","reserved0","reserved1","rsvd_field_position","rsvd_mask_size","signature","size","software_rev","tags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","total_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vbe_info","vendor","version","version","video_memory_size_blocks","video_modes_ptr","virtual_start","virtual_start","w_char","width","width","width","window_a_attributes","window_a_segment","window_b_attributes","window_b_segment","window_func_ptr","window_granularity","window_size","y_char","blue_field_position","blue_mask_size","green_field_position","green_mask_size","num_colors","red_field_position","red_mask_size","base_addr","biosdev","cmdline","name","partition","ptr","ptr","sub_partition","CouldNotLoadElf","DEAFULT_MAX_HEAP_SIZE","Exited","FxSave","GoingUpAllocator","HEAP_OFFSET_FROM_ELF_END","INITIAL_STACK_SIZE_PAGES","PROCESS_ID_ALLOCATOR","Process","ProcessContext","ProcessError","ProcessState","Running","Scheduled","Sleeping","WaitingForPid","Yielded","add_child_exit","add_to_heap","allocate","allocate_process","argv","attach_fs_node_to_fd","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children_exits","clone","clone","clone","clone_into","clone_into","clone_into","context","cs","current_dir","default","default","dr0","dr1","dr2","dr3","dr6","dr7","drop","ds","eq","es","exit","exit_code","file_index_allocator","finish_stdio","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","fs","fxsave","get_child_exit","get_current_dir","get_fs_node","gs","heap_max","heap_size","heap_start","id","id","into","into","into","into","into","into","is_user_address_mapped","load_argv_into_stack","new","next_id","open_filesystem_nodes","parent_id","parent_id","push_fs_node","put_fs_node","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","scheduler","set_current_dir","ss","stack_ptr_end","stack_size","state","switch_to_this_vm","syscalls","take_fs_node","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vm","SCHEDULER","Scheduler","borrow","borrow_mut","exit_current_process","from","init_interrupt","interrupt_initialized","into","is_process_running","new","processes","push_process","push_process","schedule","scheduler_interrupt_handler","swap_context","syscall_interrupt_handler","try_from","try_into","type_id","wait_for_pid","with_current_process","yield_current_if_any","SYSCALLS","Syscall","check_ptr","handle_syscall","path_to_proc_absolute_path","sys_arg_to_file_mappings_array","sys_arg_to_mut_slice","sys_arg_to_path","sys_arg_to_slice","sys_arg_to_str","sys_arg_to_str_array","sys_blocking_mode","sys_chdir","sys_close","sys_create_pipe","sys_exit","sys_get_cwd","sys_get_file_meta","sys_inc_heap","sys_open","sys_open_dir","sys_read","sys_read_dir","sys_set_file_meta","sys_spawn","sys_stat","sys_wait_pid","sys_write","once","spin","ONCE_STATE_DONE","ONCE_STATE_INIT","ONCE_STATE_RUNNING","Once","OnceLock","_marker","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","default","drop","fmt","from","from","get","get_or_init","get_or_try_init","get_unchecked","init","into","into","is_completed","is_completed","new","new","once","set","state","to_owned","try_from","try_from","try_get","try_into","try_into","type_id","type_id","value","lock","mutex","remutex","Lock","borrow","borrow_mut","from","into","lock","locked","new","try_from","try_into","try_lock","type_id","unlock","Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","data","deref","deref_mut","drop","fmt","fmt","from","from","get_mut","into","into","lock","lock","lock","marker","new","open_dir","open_dir","open_root","open_root","owner_cpu","read_dir","read_dir","read_file","run_with","run_with_mut","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","ReMutex","ReMutexGuard","borrow","borrow","borrow_mut","borrow_mut","data","deref","drop","fmt","fmt","from","from","into","into","lock","lock","lock","lock_count","marker","name","new","owner_cpu","read","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","write"],"q":[[0,"kernel"],[21,"kernel::acpi"],[24,"kernel::acpi::aml"],[416,"kernel::acpi::tables"],[977,"kernel::acpi::tables::InterruptControllerStruct"],[979,"kernel::acpi::tables::StaticResourceAffinity"],[981,"kernel::collections"],[982,"kernel::collections::ring"],[999,"kernel::cpu"],[1062,"kernel::cpu::flags"],[1063,"kernel::cpu::gdt"],[1182,"kernel::cpu::gdt::flags"],[1189,"kernel::cpu::idt"],[1349,"kernel::cpu::idt::flags"],[1353,"kernel::cpu::interrupts"],[1384,"kernel::cpu::interrupts::apic"],[1570,"kernel::cpu::interrupts::apic::io_apic"],[1584,"kernel::cpu::interrupts::handlers"],[1585,"kernel::cpu::interrupts::stack_index"],[1587,"kernel::cpu::msr"],[1591,"kernel::devices"],[1619,"kernel::devices::clock"],[1623,"kernel::devices::clock::hpet"],[1734,"kernel::devices::clock::rtc"],[1772,"kernel::devices::clock::rtc::consts"],[1783,"kernel::devices::ide"],[2071,"kernel::devices::ide::ata"],[2129,"kernel::devices::ide::pci_cfg"],[2143,"kernel::devices::pci"],[2257,"kernel::devices::pci::PciBar"],[2262,"kernel::devices::pci::reg"],[2279,"kernel::devices::pipe"],[2309,"kernel::executable"],[2311,"kernel::executable::elf"],[2529,"kernel::executable::elf::consts"],[2543,"kernel::fs"],[2724,"kernel::fs::FileSystemError"],[2726,"kernel::fs::fat"],[2948,"kernel::fs::fat::Directory"],[2951,"kernel::fs::fat::attrs"],[2958,"kernel::fs::mbr"],[2993,"kernel::fs::path"],[3235,"kernel::io"],[3290,"kernel::io::console"],[3346,"kernel::io::keyboard"],[3535,"kernel::io::keyboard::modifier"],[3542,"kernel::io::keyboard::status"],[3550,"kernel::io::uart"],[3609,"kernel::io::video_memory"],[3632,"kernel::memory_management"],[3637,"kernel::memory_management::kernel_heap_allocator"],[3665,"kernel::memory_management::memory_layout"],[3721,"kernel::memory_management::physical_page_allocator"],[3755,"kernel::memory_management::virtual_memory_mapper"],[3845,"kernel::memory_management::virtual_memory_mapper::flags"],[3855,"kernel::memory_management::virtual_space"],[3887,"kernel::multiboot2"],[4269,"kernel::multiboot2::FramebufferColorInfo"],[4276,"kernel::multiboot2::MultiBootTag"],[4284,"kernel::process"],[4431,"kernel::process::scheduler"],[4455,"kernel::process::syscalls"],[4483,"kernel::sync"],[4485,"kernel::sync::once"],[4526,"kernel::sync::spin"],[4529,"kernel::sync::spin::lock"],[4542,"kernel::sync::spin::mutex"],[4581,"kernel::sync::spin::remutex"],[4613,"core::panic::panic_info"],[4614,"alloc::string"],[4615,"core::result"],[4616,"core::fmt"],[4617,"core::fmt"],[4618,"alloc::collections::btree::map"],[4619,"alloc::collections::btree::set"],[4620,"alloc::vec"],[4621,"alloc::boxed"],[4622,"core::any"],[4623,"core::any"],[4624,"core::clone"],[4625,"core::default"],[4626,"core::ops::function"],[4627,"alloc::sync"],[4628,"core::iter::traits::iterator"],[4629,"emerald_kernel_user_link::file"],[4630,"emerald_kernel_user_link::file"],[4631,"emerald_kernel_user_link::file"],[4632,"alloc::borrow"],[4633,"core::iter::traits::collect"],[4634,"core::marker"],[4635,"core::fmt"],[4636,"core::fmt"],[4637,"increasing_heap_allocator::allocator"],[4638,"increasing_heap_allocator"],[4639,"core::ops::range"],[4640,"core::convert"],[4641,"emerald_kernel_user_link::process"],[4642,"emerald_kernel_user_link::syscalls"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner state of the parser to store information about the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Renamed to not be confused with <code>Clone::clone</code>","Renamed to not be confused with <code>Clone::clone</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Shared state all method names","","","","","","","","all found names (aliases, fields, etc.)","","","","","","","","","","","","","","","","","","similar to <code>Self::parse_term_arg</code>, but doesn’t expect to …","similar to <code>Self::parse_term_arg</code>, but cannot call methods, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represent v2 and above","","","","","","","","","","","","","This is inside DSDT and SSDT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Safety","Safety","Safety","","","","","Safety","","Will fill the table from the header data, and zero out …","","Will fill the table from the header data, and zero out …","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","allocates a newfixed size ring buffer","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","SAFETY: the data pointed to by <code>gdtr</code> must be static and …","SAFETY: the data pointed to by <code>ldtr</code> must be static and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System Descriptor Entry for GDT","SAFETY: TSS is only used when <code>GDT</code> is locked, so its safe …","Task State Segment","","User Descriptor Entry for GDT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","This should be called only once, otherwise, it will crash","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Must make sure that the data is a valid descriptor …","Must make sure that the data is a valid descriptor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Puts the handler in the IDT and returns the …","","Puts the handler in the IDT and returns the …","Puts the handler in the IDT and returns the …","","","","","","","","Returns the argument unchanged.","","Global handlers that have several purposes and doesn’t …","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","disable the Local interrupts 0 and 1","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Informs the device that it is cloned.","Informs the device that it is closed.","","","Returns the argument unchanged.","","","Devices such as PS/2 keyboard, mouse, serial ports, etc.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of femtoseconds per counter tick","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pipe is a device that allows two processes to communicate …","Represent one side of a pipe. Check <code>create_pipe_pair</code> for …","","","","","The buffer of the pipe.","","","","Create a connected pipe pair. The first returned file is …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A handle to a directory, it has the inode which controls …","","","","","","","","","A handle to a file, it has the inode which controls the …","","","","","","","A node in the filesystem, can be a file or a directory","","","Unlike InvalidInput, this typically means that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a move verbose method than <code>Clone::clone</code>, as I want …","","","","Loads the hard disk specified in the argument it will load …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Retrieves the file system mapping for a given path.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Open the inode of a path, this include directories and …","","","A library for parsing, manipulating Paths that follow unix …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An iterator over <code>Path</code> and its ancestors.","","A single component of a path.","An iterator over the <code>Component</code>s of a <code>Path</code>.","A reference to the current directory, i.e., <code>.</code>.","","","An iterator over the <code>Component</code>s of a <code>Path</code>, as <code>str</code> slices.","A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.","A reference to the parent directory, i.e., <code>..</code>.","A slice of a path (akin to <code>str</code>).","An owned, mutable path (akin to <code>String</code>).","","The root directory component, appears after any prefix and …","use unix pathes seperator","","Component parsing works by a double-ended state machine; …","An error returned from <code>Path::strip_prefix</code> if the prefix …","","","","","","","","Produces an iterator over <code>Path</code> and its ancestors.","Extracts a slice corresponding to the portion of the path …","Extracts a slice corresponding to the portion of the path …","Coerces to a <code>Path</code> slice.","","","","","","","","","","","Yields the underlying bytes.","Extracts the underlying <code>str</code>.","","","","","","","","","","","","","","","","","","","","","Invokes <code>capacity</code> on the underlying instance of <code>String</code>.","Invokes <code>clear</code> on the underlying instance of <code>String</code>.","","","","","","","","","","","","","","","","","","","Produces an iterator over the <code>Component</code>s of the path.","","","Returns a newtype that implements Display for safely …","Determines whether <code>child</code> is a suffix of <code>self</code>.","","","","","","","","","","","","","","","Returns the final component of the <code>Path</code>, if there is one.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Converts a <code>String</code> into a <code>PathBuf</code>","Returns the argument unchanged.","","","","Checks if the path ends with a separator.","Check if the first char is <code>/</code>","Returns <code>true</code> if the <code>Path</code> has a root.","Is the <em>original</em> path rooted?","","","","","","Should the normalized path include a leading . ?","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>PathBuf</code> into a boxed <code>Path</code>.","","","","","","Consumes the <code>PathBuf</code>, yielding its internal <code>String</code> storage.","Returns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is …","Checks if the path is empty.","Returns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.","Checks if the path is the root directory.","","","Produces an iterator over the path’s components viewed …","","Creates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.","","Directly wraps a string slice as a <code>Path</code> slice.","Allocates an empty <code>PathBuf</code>.","","","","","","","Returns the <code>Path</code> without its final component, if there is …","","","","","","","","","","","","","","","","","","Truncates <code>self</code> to <code>self.parent</code>.","Extends <code>self</code> with <code>path</code>.","Invokes <code>reserve</code> on the underlying instance of <code>String</code>.","Invokes <code>reserve_exact</code> on the underlying instance of <code>String</code>.","Updates <code>self.file_name</code> to <code>file_name</code>.","Invokes <code>shrink_to</code> on the underlying instance of <code>String</code>.","Invokes <code>shrink_to_fit</code> on the underlying instance of <code>String</code>.","Determines whether <code>base</code> is a prefix of <code>self</code>.","Returns a path that, when joined onto <code>base</code>, yields <code>self</code>.","","","","","","","","","Converts a <code>Path</code> to an owned <code>PathBuf</code>.","Yields a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.","","","Converts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>PathBuf</code> with a given capacity used to create …","Creates an owned <code>PathBuf</code> like <code>self</code> but with the given file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A temporary tool to allow for easy printing to the screen. …","","","","","","","","","","","","","","0..=7 is normal, 8..=15 is bright this is saved state, so …","","Create an early console, this is used before the kernel …","SAFETY: the console must be used inside a lock or mutex as …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","SAFETY","Create a late console, this is used after the kernel heap …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","if the current color is bold, i.e. brighter","if the current color is faint, i.e. darker","","","SAFETY: must ensure that there is no console running at …","","","SAFETY","","","","","","","","","","","","","","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The index is <code>KeyType</code>","The index is <code>KeyType</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables the divisor latch access bit","Got data","Trasmitter is empty","","","Controls the Data Terminal Ready Pin","Controls the loopback mode","Controls the Out1 pin","Controls the Out2 pin (used for interrupts)","Controls the Request To Send Pin","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Will return <code>true</code> if the test pass, otherwise, the serial …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","SAFETY: <code>init</code> must be called before calling this function","","","","SAFETY: <code>init</code> must be called before calling this function","","White on black text","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","This very specific to 64-bit x86 architecture, if this is …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","","","","","","","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","Return the VM for the CPU at boot time (only applied to …","","","","","","","","","","","","","","","","An ugly hack used in <code>do_for_every_user_entry</code> to get a …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Safety","Safety","","","","","","","","","","","","","","Removes mapping of a virtual entry, it will free it from …","<code>is_allocated</code> is used to indicate if the physical pages …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>(virtual_start, is_fully_inside)</code>","","Checks if we have this range allocated, returns it, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return <code>None</code> if its not mapped, or if the <code>physical_start</code> is …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codedd/Remove to/from the heap and return the previous end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit the current process, and move the <code>all_state</code> to the …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Get the absolute path, if the <code>path</code> is relative, it will …","Allocates space fro the mapping and copies them","","","","","Allocates space for the strings and copies them","","","","","","","","","","","","","","","","","","","","","","","","","<code>PhantomData</code> to make sure dropck understands we’re …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A raw spin lock, only provides <code>lock</code> and <code>unlock</code> and waiting …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Try to lock the lock, returns true if successful","","SAFETY: the caller must assure that there is only one …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","We know statically that no one else is accessing the lock, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","A special method to allow accessing the variable inside …","A special method to allow accessing the variable inside …","","","","","","","","A mutex that can be intered more than once by the same CPU","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,15,15,0,0,0,15,15,16,17,15,15,14,11,15,15,15,14,14,14,15,15,15,15,15,15,14,0,16,17,15,15,17,15,15,15,15,16,15,0,0,15,15,15,15,15,17,15,0,11,11,15,15,15,15,15,15,15,15,15,16,17,15,15,0,15,15,15,15,16,17,15,22,15,17,15,15,15,15,15,15,15,0,0,15,0,15,0,14,15,17,15,0,15,11,22,15,15,15,0,15,15,15,15,15,15,0,0,0,15,15,15,0,0,15,15,15,15,11,15,15,15,14,15,5,5,9,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,10,5,10,0,0,0,0,0,0,0,0,0,0,0,0,13,20,21,5,5,20,21,9,11,13,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,10,21,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,5,18,19,20,21,9,24,25,5,5,18,19,20,21,9,23,24,25,0,10,10,10,10,10,10,10,10,10,10,10,10,23,10,19,19,19,10,25,10,25,13,18,9,23,24,25,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,13,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,10,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,24,24,24,0,41,0,0,0,0,0,41,0,0,0,0,41,0,41,0,57,57,0,0,57,0,41,0,0,43,0,43,0,43,0,43,0,57,0,43,57,0,0,43,57,0,0,0,0,0,0,41,41,0,41,43,57,0,41,0,50,50,44,48,61,51,51,53,44,58,50,52,59,59,40,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,46,50,66,37,39,58,60,61,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,39,39,50,50,0,63,63,50,50,50,55,38,52,67,37,50,50,42,44,46,47,48,50,58,59,60,61,63,50,50,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,42,53,56,40,43,57,37,37,0,0,0,38,0,46,47,45,50,50,50,50,50,38,40,52,50,50,54,54,54,54,42,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,45,45,62,67,37,39,59,59,42,49,48,58,52,50,64,66,37,39,39,39,50,50,52,50,50,50,50,50,50,50,50,50,50,50,59,60,61,62,63,58,58,50,37,51,51,67,37,45,49,50,51,56,59,60,62,63,50,56,59,60,63,59,50,50,66,37,39,64,67,64,66,37,50,50,66,37,39,50,50,50,46,56,54,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,54,60,50,50,50,50,50,50,50,50,50,50,67,37,255,255,256,256,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,0,71,71,71,0,71,71,71,0,0,71,0,71,71,0,0,0,0,0,0,71,0,0,0,71,0,71,71,0,0,0,74,0,74,0,0,0,0,71,71,71,0,0,0,71,71,71,0,71,0,0,0,0,0,0,71,71,71,71,0,0,0,0,0,0,0,0,0,0,0,0,79,80,78,75,79,80,79,80,79,80,80,81,75,82,78,77,79,80,81,75,82,78,77,79,80,77,79,80,77,79,80,78,77,79,80,81,82,78,79,80,0,79,80,77,81,75,82,78,77,79,80,77,82,0,0,78,0,81,75,82,78,77,79,80,81,81,82,82,75,80,79,82,82,78,78,81,81,81,81,81,77,79,80,81,75,82,78,77,79,80,81,75,82,78,77,79,80,82,81,75,82,78,77,79,80,82,82,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,83,76,83,76,84,85,86,87,83,76,84,85,86,87,83,83,84,85,86,87,84,85,86,87,83,83,84,83,84,85,86,87,0,0,83,83,83,85,85,85,85,85,85,85,83,87,86,85,0,87,84,85,86,86,83,76,84,85,86,87,85,83,85,83,83,0,83,76,84,85,86,87,83,83,87,76,83,83,86,87,87,87,83,87,83,87,85,85,85,85,85,85,85,85,85,85,85,85,85,85,83,83,83,83,86,84,84,85,84,0,83,83,87,87,87,87,87,87,87,87,83,84,83,84,85,86,87,83,76,84,85,86,87,83,76,84,85,86,87,83,76,84,85,86,87,83,83,83,87,0,0,0,0,0,0,0,0,0,0,0,90,0,91,0,0,91,0,91,91,0,0,91,91,91,0,91,91,0,91,91,0,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,0,100,257,257,257,257,257,257,257,0,92,0,92,98,99,257,101,100,97,92,96,93,98,99,257,101,100,97,92,96,93,96,93,96,93,100,96,93,257,92,0,92,257,0,257,257,257,257,257,98,99,257,101,100,97,97,92,96,93,97,257,97,257,0,92,92,92,257,257,257,257,98,99,257,101,100,97,92,96,93,0,92,100,97,257,257,257,97,92,92,97,98,257,257,98,99,100,97,98,99,96,93,100,257,97,0,92,100,92,92,257,0,257,257,257,257,257,257,257,96,93,257,98,99,257,101,100,97,92,96,93,98,99,257,101,100,97,92,96,93,98,99,257,101,100,97,92,96,93,257,93,93,93,96,93,96,96,96,93,96,93,98,99,97,100,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,104,0,102,102,104,104,104,0,0,0,104,102,0,0,0,0,102,0,104,104,104,102,0,0,0,0,0,0,0,0,0,0,0,0,0,107,108,109,111,107,109,110,114,108,111,107,109,110,114,108,107,109,107,109,110,110,110,108,108,0,109,107,109,110,114,108,111,111,107,109,110,114,108,111,110,114,114,114,108,111,111,111,111,111,107,109,110,114,108,111,111,111,111,107,109,114,108,111,108,107,110,114,114,114,114,110,108,108,107,107,108,0,111,114,107,109,111,107,109,110,114,108,111,107,109,110,114,108,111,107,109,110,114,108,111,110,108,0,0,116,115,116,115,116,115,115,0,115,115,115,115,115,116,115,116,116,115,116,115,116,116,115,115,116,116,115,115,115,116,115,116,115,116,115,115,0,0,0,0,0,0,0,0,0,0,0,117,0,117,0,0,123,0,123,121,0,0,0,0,0,0,0,0,121,121,123,125,125,0,125,117,118,119,120,121,122,125,123,124,126,117,118,119,120,121,122,125,123,124,126,125,117,118,119,120,121,122,123,117,118,119,120,121,122,123,120,119,125,125,119,125,125,125,124,124,125,124,122,120,122,117,120,122,125,120,125,117,118,119,120,121,122,125,123,123,124,126,117,118,119,120,121,122,125,123,124,126,125,0,125,0,0,126,118,124,126,125,124,126,125,117,118,119,120,121,122,125,123,124,126,126,125,125,125,124,124,125,120,122,125,125,125,126,125,125,125,125,125,125,125,125,125,125,120,122,125,124,124,125,125,125,125,125,125,125,125,125,125,125,125,122,122,0,126,125,124,122,122,122,125,119,119,119,119,119,119,119,124,126,126,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,124,126,120,125,124,124,125,125,125,125,125,125,125,125,125,125,125,117,118,119,120,121,122,123,123,125,125,125,117,118,119,120,121,122,125,123,124,126,117,118,119,120,121,122,125,123,124,126,0,118,117,118,119,120,121,122,125,123,124,126,125,125,125,125,125,125,125,125,125,125,125,119,119,122,122,120,120,120,122,120,125,120,119,119,119,122,125,125,125,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128,129,128,129,128,128,128,128,129,0,0,0,0,0,128,128,0,128,128,128,128,128,128,128,128,127,105,131,127,128,129,105,131,127,128,129,105,131,105,105,128,129,105,128,129,105,131,105,105,130,105,128,128,129,105,131,127,128,129,105,131,105,129,129,105,105,105,131,127,128,129,105,131,131,128,131,105,130,105,105,0,105,0,128,129,105,128,131,127,128,129,105,131,127,128,129,105,131,127,128,129,105,105,105,105,0,105,258,259,258,258,259,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,132,134,132,134,132,132,132,0,134,132,134,132,132,134,132,132,132,132,134,134,132,134,132,134,132,132,134,0,0,143,0,0,0,0,0,0,0,0,0,0,0,146,143,146,146,143,143,143,143,143,137,137,143,143,143,146,138,138,138,137,144,145,142,138,146,138,139,140,141,142,143,144,145,137,135,146,138,139,140,141,142,143,144,145,137,135,138,139,140,141,142,143,144,145,137,138,139,140,141,142,143,144,145,137,0,138,138,138,142,139,140,135,137,144,145,137,139,140,144,145,146,138,139,140,142,143,144,145,137,135,146,146,138,139,140,141,142,143,144,145,137,135,143,142,135,141,141,139,140,146,138,139,140,141,142,143,144,145,137,135,142,142,142,137,135,138,138,137,144,145,137,144,145,137,144,145,135,142,139,140,142,139,140,142,139,140,135,139,140,139,140,142,139,140,139,140,142,138,139,140,141,142,143,144,145,137,0,146,138,139,140,141,142,143,144,145,137,135,146,138,139,140,141,142,143,144,145,137,135,137,144,145,146,138,139,140,141,142,143,144,145,137,135,138,137,144,145,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,151,103,0,147,103,151,0,0,103,0,103,0,147,0,103,0,0,0,0,151,0,103,103,103,103,103,103,103,151,103,151,151,103,151,147,147,147,149,149,149,151,133,133,153,158,133,148,147,151,149,103,153,158,133,148,147,151,149,103,148,151,149,133,148,151,149,0,149,149,148,151,149,0,151,0,133,133,151,149,103,153,158,133,148,147,147,147,151,149,103,103,133,148,0,158,151,147,133,148,153,158,133,148,147,151,149,103,133,149,133,133,158,0,0,158,149,149,149,149,133,148,147,133,155,153,0,155,153,0,133,148,133,148,133,148,133,148,155,153,155,151,133,133,133,133,149,149,149,149,151,148,151,149,153,158,133,148,147,151,149,103,153,158,133,148,147,151,149,103,153,158,133,148,147,151,149,103,151,133,155,260,260,166,0,0,0,166,165,0,165,165,0,0,0,0,0,0,0,0,166,154,166,167,166,167,154,0,162,161,162,160,168,161,162,161,162,169,154,161,162,163,164,165,166,160,167,168,169,154,161,162,163,164,165,166,160,167,168,160,160,164,161,162,163,164,165,166,167,161,162,163,164,165,166,167,169,169,169,160,160,168,169,161,162,169,165,166,162,164,168,163,163,164,162,160,160,168,0,161,162,169,168,154,161,162,164,165,166,160,167,168,169,154,161,162,163,164,165,166,160,167,168,166,162,162,169,164,169,154,161,162,163,164,165,166,160,167,168,169,167,164,168,0,164,169,160,168,169,169,160,164,164,164,168,168,168,168,168,168,168,161,162,162,160,164,162,160,160,164,160,164,164,168,168,161,162,163,164,165,166,167,160,164,164,169,154,161,162,163,164,165,166,160,167,168,169,154,161,162,163,164,165,166,160,167,168,160,169,154,161,162,163,164,165,166,160,167,168,161,162,160,168,161,162,261,262,262,0,0,0,0,0,0,0,0,0,172,171,171,172,171,172,171,171,171,171,171,171,172,171,172,171,172,172,172,171,172,171,171,171,171,171,171,171,172,171,172,171,172,0,179,0,0,178,0,179,0,178,178,0,0,179,178,0,179,0,0,156,156,173,173,156,156,156,156,176,177,173,156,156,178,178,176,176,177,177,173,173,156,178,176,156,181,179,178,176,177,175,173,173,174,156,181,179,178,176,177,175,173,174,173,173,179,178,176,177,175,173,174,179,178,176,177,175,173,174,156,178,176,173,156,173,173,156,156,156,156,156,156,156,179,178,176,173,173,173,173,174,173,156,176,156,181,181,179,178,176,177,175,173,174,174,181,179,178,176,177,175,173,173,173,173,174,173,173,176,156,0,156,176,176,156,178,173,0,176,156,177,173,181,179,178,176,177,175,173,174,173,156,176,177,175,173,173,156,156,156,156,0,0,156,0,156,176,156,173,176,177,175,175,176,177,156,176,176,176,156,156,156,156,156,179,178,176,173,173,173,173,181,176,173,173,173,173,173,173,173,156,156,156,179,178,176,177,175,173,174,156,156,181,174,156,176,176,181,179,178,176,177,175,173,174,181,179,178,176,177,175,173,174,156,181,179,178,176,177,175,173,174,173,156,0,0,0,191,0,0,0,0,188,189,190,188,189,190,188,189,190,188,189,190,0,191,188,189,190,188,189,190,188,189,190,188,189,190,0,0,188,189,190,0,0,188,189,190,188,189,190,188,189,190,188,189,190,0,0,0,0,194,0,194,0,194,193,195,194,193,195,195,195,195,0,193,194,195,194,193,195,193,194,194,0,194,193,195,195,195,195,194,195,195,194,0,194,193,195,194,193,195,194,193,195,193,195,193,195,193,195,193,195,193,195,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,0,0,0,0,0,0,0,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,0,0,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,202,202,202,200,201,202,200,201,200,201,200,201,202,200,202,200,201,202,200,201,0,0,202,0,0,202,202,200,201,0,201,0,0,202,202,202,0,200,201,202,200,200,201,202,200,201,202,202,200,201,201,200,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,204,206,0,0,206,206,0,0,0,206,206,0,0,0,0,0,206,206,206,0,0,0,206,204,205,206,204,205,204,205,204,205,206,204,205,205,0,205,206,204,205,205,205,205,0,204,205,206,204,205,206,204,205,205,206,204,205,205,0,0,0,0,0,0,207,207,207,207,207,207,207,207,0,207,207,207,207,207,207,207,207,207,0,0,0,0,0,0,0,0,209,211,211,209,211,209,209,211,209,211,209,211,209,209,211,209,211,211,209,211,209,211,209,211,209,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,214,214,0,0,0,214,214,214,214,0,0,0,0,0,0,0,0,0,0,0,214,214,214,214,0,0,0,0,0,215,0,263,215,263,215,215,215,0,215,215,263,215,215,0,215,215,263,215,215,263,215,0,263,215,263,215,263,215,215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,216,216,216,216,216,216,136,217,216,136,218,217,216,136,218,218,0,218,136,136,136,136,216,217,0,218,218,216,217,216,136,218,216,0,136,0,0,0,0,0,217,216,136,218,136,0,136,136,136,0,136,136,136,216,218,218,0,136,218,217,216,136,218,217,216,136,218,217,216,136,218,136,0,136,218,0,0,0,0,0,0,0,0,0,0,0,0,0,220,0,221,220,221,220,220,0,0,220,220,220,221,220,220,0,220,221,220,221,221,221,220,221,220,221,220,221,221,232,233,232,233,0,231,232,232,0,231,231,231,231,233,233,233,231,231,231,0,231,0,0,0,224,231,231,0,0,0,231,224,233,233,0,231,0,0,0,233,233,0,0,0,0,0,231,231,233,233,232,233,224,233,233,232,233,233,0,0,231,0,264,265,225,266,235,227,227,227,267,234,227,227,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,265,225,227,227,226,222,223,224,225,226,227,228,229,230,231,222,223,224,225,226,227,228,229,230,231,225,228,230,230,230,230,236,2,2,227,230,230,2,264,222,223,232,233,230,2,232,234,234,222,233,235,235,223,224,225,226,227,228,229,230,231,2,227,265,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,224,2,227,227,265,225,227,227,228,228,228,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,236,222,223,224,267,234,229,266,267,234,235,229,222,223,2,227,228,228,236,222,223,266,235,226,226,230,236,266,235,265,225,227,226,226,227,227,236,222,223,267,265,2,226,227,227,227,227,226,268,226,2,222,223,224,225,226,227,228,229,230,231,2,234,235,2,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,268,264,266,267,265,268,236,2,232,234,222,233,235,223,224,225,226,227,228,229,230,231,2,226,226,230,226,226,266,235,227,265,225,227,227,227,227,227,227,227,227,227,269,269,269,269,270,269,269,271,272,273,274,272,275,276,272,240,0,244,0,0,0,0,0,0,0,0,0,244,244,244,244,244,237,237,239,237,237,237,239,237,240,242,243,244,239,237,240,242,243,244,237,242,243,244,242,243,244,237,243,237,242,243,243,243,243,243,243,243,237,243,244,243,237,237,237,237,240,242,243,244,239,237,240,240,242,243,244,243,243,237,237,237,243,237,237,237,237,237,239,237,240,242,243,244,237,237,239,239,237,237,237,237,237,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,0,237,243,237,237,237,237,0,237,242,243,244,239,237,240,242,243,244,239,237,240,242,243,244,239,237,240,242,243,244,237,0,0,245,245,0,245,245,245,245,0,245,245,0,245,0,0,0,0,245,245,245,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,249,250,249,250,249,250,250,249,250,250,249,250,250,250,250,250,250,249,250,249,250,249,250,250,250,249,250,249,250,250,249,250,249,250,250,0,0,0,0,252,252,252,252,252,252,252,252,252,252,252,252,0,0,203,253,203,253,203,253,253,253,203,253,203,253,203,203,253,203,203,253,253,203,203,203,203,203,203,203,203,203,203,203,203,253,203,253,203,203,253,0,0,197,254,197,254,197,254,254,197,254,197,254,197,254,197,197,254,197,254,197,197,197,197,197,254,197,254,197,197,254,197],"f":[0,0,0,0,0,0,0,0,[[],1],0,0,[2,3],[[],1],0,0,0,[4,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6,7],1],[[5,8],1],[9,7],[[10,7],[[12,[1,11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[12,[1,11]]]],[11,11],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[9,9],[23,23],[24,24],[25,25],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[10,10],[5,5],0,[[6,16,16,17,26,7],27],[[6,[28,[16]],[28,[17]],26,7],27],[[26,7],27],[[[28,[22]],26,7],27],[[16,16,17,26,7],27],[[9,26,7],27],[[6,23,26,7],27],[[18,26,7],27],[[17,26,7],27],[[15,26,7],27],[[16,26,7],27],[[[28,[15]],26,7],27],[[13,26,7],27],0,0,[[5,6],[[29,[7]]]],[[5,6],30],0,0,0,[[11,26],27],[[13,26],27],[[13,26],27],[[14,26],27],[[15,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[[20,26],27],[[21,26],27],[[22,26],27],[[9,26],27],[[23,26],27],[[24,26],27],[[25,26],27],[[5,26],27],[[10,7],[[12,[1,11]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[12,[10,11]]]],[10,[[12,[31,11]]]],[10,[[12,[7,11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[32,[8,7]],[33,[8]]],5],[10,[[12,[18,11]]]],[10,[[12,[19,11]]]],[10,[[12,[20,11]]]],[10,[[12,[21,11]]]],[10,[[12,[9,11]]]],[10,[[12,[23,11]]]],[10,[[12,[24,11]]]],[10,[[12,[25,11]]]],[[[28,[31]]],[[12,[13,11]]]],[10,[[12,[[1,[31,[34,[22]]]],11]]]],[10,[[12,[8,11]]]],[10,[[12,[13,11]]]],[10,[[12,[[35,[17]],11]]]],[10,[[12,[15,11]]]],[10,[[12,[16,11]]]],[[10,30,30],[[12,[16,11]]]],[10,[[12,[16,11]]]],[10,[[12,[16,11]]]],[10,[[12,[[34,[15]],11]]]],[10,[[12,[31,11]]]],0,0,[[10,30,6],7],0,0,0,[10,7],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[10,31],[[12,[[29,[31]],11]]]],[[10,31],[[12,[[29,[31]],11]]]],[10,[[12,[[29,[8]],11]]]],[[10,31],[[12,[[29,[15]],11]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[[7,7],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,26],27],[[38,26],27],[[39,26],27],[[40,26],27],[[41,26],27],[[42,26],27],[[43,26],27],[[44,26],27],[[45,26],27],[[46,26],27],[[47,26],27],[[48,26],27],[[49,26],27],[[50,26],27],[[51,26],27],[[52,26],27],[[53,26],27],[[54,26],27],[[55,26],27],[[56,26],27],[[57,26],27],[[58,26],27],[[59,26],27],[[60,26],27],[[61,26],27],[[62,26],27],[[63,26],27],[[64,26],27],[[64,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,42],[39,53],[39,56],[65,40],[[31,[28,[31]]],43],[[31,[28,[31]]],57],[66,37],[67,37],[7,[[1,[39,7]]]],[2,[[12,[64,1]]]],[[[28,[31]]],-1,[]],[38,[[29,[-1]]],68],[39,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[69,[-1]]],1,[]],[[],[[69,[-1]]],70],[-1,-1,[]],[-1,-2,[],[]],[[[69,[-1]]],[[29,[-1]]],[]],[[[69,[-1]],-1],1,[]],[[[69,[-1]],-1],1,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[69,[-1]],-1],30,[]],[-1,36,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[71,71],[[-1,-2],1,[],[]],0,[[],71],0,[[],71],0,[[71,26],27],[-1,-1,[]],0,[[],72],[[],72],[[],72],[[],73],[[],1],0,0,[73,31],[73,65],[[71,7,31],1],0,[71,30],[-1,-2,[],[]],[72,1],[73,73],[73,-1,74],[73,74],[[73,-1],1,74],[[73,74],1],[75,1],[76,1],[77,1],0,[71,7],0,0,[[73,31],1],[[73,65],1],[[73,73],1],[71,1],0,[71,1],[[],72],0,[72,1],[72,1],[72,1],[77,1],[77,1],[[],1],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[78,1],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[79,79],[80,80],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[],77],[[],79],[[],80],[[],81],[[],82],[[],78],[[],79],[[],80],0,0,0,[[77,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[7,77],0,[[],77],[[],77],0,[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[82,1],[82,1],[[78,80],7],[[78,79],7],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,[31,31],0,0,0,0,0,0,0,0,0,0,0,[83,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[84,84],[85,85],[86,86],[[[87,[-1]]],[[87,[-1]]],88],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[[],84],[[],85],[[],86],[[],[[87,[-1]]],89],[84,1],[[84,72],1],0,0,0,0,0,0,0,0,0,0,[[],83],[[],[[87,[-1]]],[]],0,0,0,0,[[84,26],27],[[85,26],27],[[86,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[83,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[87,[-1]],73],[[87,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,1],0,0,0,[[[87,[-1]],30],[[87,[-1]]],[]],[87,87],[87,87],[[[87,[-1]],72],[[87,[-1]]],[]],[[[87,[-1]],31],[[87,[-1]]],[]],[[[87,[-1]],31],[[87,[-1]]],[]],[[[87,[-1]],[29,[31]]],[[87,[-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,[31,31],0,0,0,0,0,0,0,[90,31],[[],31],[91,31],[-1,31,90],[[],31],[91,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],91],[-1,-1,[]],[91,31],0,0,[91,1],[[],1],[-1,-2,[],[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,31,71],1,90],[[92,-1,31,71],1,90],[[-1,31,71,-2],1,90,[[95,[93],[[94,[93]]]]]],[[92,-1,31,71,-2],1,90,[[95,[93],[[94,[93]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[93,93],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[],96],[[],93],0,[92,1],[[],1],[[],92],0,[84,1],0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,97],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[64,1],[[92,64],1],[92,1],[92,1],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[97,31],30],0,0,0,0,0,0,0,0,0,0,[98,65],[99,96],[[100,65],65],[[97,65],65],0,0,0,0,0,0,[97,1],[[],1],[92,1],0,[92,1],0,0,[84,1],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[93,31],93],[[93,101],93],[[93,30],93],[[96,30],96],[[93,30],93],[[96,31],96],[[96,30],96],[[96,30],96],[[93,30],93],[[96,31],96],[[93,31],93],[[98,65],1],[[99,96],1],[[97,31,93],1],[[100,65,65],1],[[97,65,65],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,1],0,0,0,0,[65,72],[[65,72],1],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[102,[[12,[1,103]]]],[102,[[12,[1,103]]]],0,[[104,26],27],[-1,-1,[]],0,[[],1],[[],1],[-1,-2,[],[]],[102,6],0,0,[105,30],[[],1],[[102,72,[28,[31]]],[[12,[72,103]]]],[[[106,[102]]],1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[102,72,[28,[31]]],[[12,[72,103]]]],0,0,[64,1],0,0,0,0,0,0,0,0,0,0,[[107,31],1],[[108,31],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[107,107],[109,109],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[110,111],0,[108,72],[108,72],[[],1],[109,[[0,[[113,[],[[112,[31]]]]]]]],[[107,26],27],[[109,26],27],[[110,26],27],[[114,26],27],[[108,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[52,[[29,[108]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[107,31],30],[[109,31],30],0,0,[72,111],[108,72],0,0,0,0,0,0,[[110,111],1],[[108,30],1],[[108,30],1],[107,[[0,[[113,[],[[112,[31]]]]]]]],0,[108,[[0,[[113,[],[[112,[31]]]]]]]],[86,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[111,72],1],[[110,72],1],[[108,72],1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[115,115],[[-1,-2],1,[],[]],0,0,[[],115],[[115,115],30],[[115,26],27],[[115,26],27],[-1,-1,[]],[-1,-1,[]],[116,115],[116,[[1,[115,31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[116,30],[116,30],0,0,[[[29,[31]]],116],[[116,31],31],0,[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,0,0,0,0,0,[124,6],0,0,0,0,0,[[117,117],30],[[120,119,[28,[31]]],[[12,[1,31]]]],[[122,119,[28,[31]]],[[12,[1,31]]]],0,0,0,[[117,26],27],[[118,26],27],[[119,26],27],[[120,26],27],[[121,26],27],[[122,26],27],[[125,26],27],[[123,26],27],[[123,26],27],[[124,26],27],[[126,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[118,[[29,[[106,[124]]]]]],0,[84,1],[84,1],0,0,[[[29,[73]],119,105,30],[[29,[124]]]],[[[29,[73]],119,105,30],[[29,[124]]]],0,[124,1],[126,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[125,30],[125,30],[125,30],[124,30],[124,30],[125,30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,120],[31,122],0,[124,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,127],[[29,[124]]]],[[122,31],122],[[122,73],122],[[122,65],122],0,[[119,73],31],[[119,73],31],[119,73],[[119,[28,[31]]],[[12,[1,31]]]],[119,31],[119,31],[119,31],[[124,72,[28,[31]]],[[12,[1,123]]]],[[126,72,72,[28,[31]]],[[12,[1,31]]]],[[126,72,72,[28,[31]]],[[12,[1,31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[125,65],[124,65],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[105,30],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,[125,72],0,0,0,[119,1],[119,1],[[122,73],122],[[122,121],122],[[120,31],120],[[120,72],120],[[120,30],120],[[122,30],122],[[120,73],120],0,[[120,119],1],[[119,73,31],1],[[119,73,31],1],[[119,73],1],[[122,119],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[128,128],[129,129],[105,105],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[130,6],0,[[128,26],27],[[128,26],27],[[129,26],27],[[105,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[129,[[29,[[1,[73,72]]]]]],[129,[[29,[[1,[72,72,30]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],131],[65,128],[131,[[29,[-1]]],[]],[[31,31,31],[[29,[105]]]],[[105,127],[[29,[130]]]],[105,73],[[105,31],-1,74],[[31,31,31,31],-1,74],[105,73],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[105,73],1],[[105,31,-1],1,74],[[31,31,31,31,-1],1,74],[[105,73],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[132,[[12,[1,103]]]],0,[132,[[12,[1,103]]]],[[],[[1,[133,133]]]],[[134,26],27],[[132,26],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[132,6],[[132,72,[28,[31]]],[[12,[72,103]]]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[[132,72,[28,[31]]],[[12,[72,103]]]],0,0,[[135,133,136],[[12,[[1,[7,7]],103]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[137,72],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[137,137],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[142,72],0,0,[135,72],[137,72],0,0,[137,65],0,0,0,0,[[146,26],27],[[138,26],27],[[139,26],27],[[140,26],27],[[142,26],27],[[143,26],27],[[144,26],27],[[145,26],27],[[137,26],27],[[135,26],27],[-1,-1,[]],[103,146],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,143],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[142,30],[142,30],[142,30],[[133,30,72],[[12,[137,146]]]],[133,[[12,[135,146]]]],0,0,[137,72],0,0,[137,72],0,0,[137,72],0,0,0,[142,72],0,0,[142,72],0,0,[142,72],0,0,[135,[[28,[137]]]],0,0,0,0,[142,72],0,0,0,0,[142,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,72],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[137,143],0,0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[137,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[147,[[12,[148,103]]]],[147,[[12,[133,103]]]],[147,[[12,[133,103]]]],[149,150],[149,151],0,[[151,151],-1,[]],[133,152],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[148,148],[151,151],[149,149],[133,133],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[7,[[12,[1,103]]]],[149,[[29,[[106,[102]]]]]],0,0,0,[149,1],[[],[[106,[153]]]],[[151,151],30],0,[133,72],0,[[151,26],27],[[149,26],27],[[103,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[148,147],[-1,-1,[]],[133,147],[-1,-1,[]],[-1,-1,[]],[154,103],[-1,-1,[]],[[149,-1,[106,[155]],72,152],[[12,[133,103]]],[[157,[156]]]],[[149,-1,[106,[155]],72],[[12,[148,103]]],[[157,[156]]]],[156,[[12,[[1,[156,[106,[155]]]],103]]]],[[158,156],[[12,[[1,[156,[106,[155]]]],103]]]],0,[147,149],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[133,30],[149,30],[133,30],0,0,0,[[6,[106,[155]]],1],[[158,-1,[106,[155]]],1,[[157,[156]]]],[149,6],0,[[8,151,[29,[[106,[102]]]]],149],[[8,151,72,72],149],[-1,[[12,[133,103]]],[[157,[156]]]],[-1,[[12,[148,103]]],[[157,[156]]]],[-1,[[12,[147,103]]],[[157,[156]]]],[[-1,152],[[12,[133,103]]],[[157,[156]]]],[[155,156],[[12,[[34,[149]],103]]]],[[153,156],[[12,[[34,[149]],103]]]],[-1,[[12,[[1,[[106,[155]],149]],103]]],[[157,[156]]]],[155,[[12,[149,103]]]],[153,[[12,[149,103]]]],0,[133,156],[148,156],0,0,0,0,[[133,[28,[31]]],[[12,[72,103]]]],[[148,[28,[159]]],[[12,[7,103]]]],[[155,149],[[12,[[34,[149]],103]]]],[[153,149],[[12,[[34,[149]],103]]]],[[155,149,72,[28,[31]]],[[12,[72,103]]]],0,[133,[[12,[[34,[31]],103]]]],[[133,72],[[12,[1,103]]]],[[133,152],1],[[133,30],1],[149,72],0,[149,72],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[133,[28,[31]]],[[12,[72,103]]]],[[155,149,72,[28,[31]]],[[12,[72,103]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[160,65],[160,73],0,[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[160,65],[160,65],0,0,0,0,0,[[165,165],30],[[166,166],30],0,0,0,0,0,0,0,[160,65],[160,65],[168,165],[31,151],0,0,0,[[168,65],65],[[154,26],27],[[161,26],27],[[162,26],27],[[164,26],27],[[165,26],27],[[166,26],27],[[160,26],27],[[167,26],27],[[168,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[165,65],166],0,0,[169,[[12,[[28,[31]],103]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[167,168],[[12,[169,103]]]],0,[168,[[12,[1,103]]]],[[118,65,65],[[12,[168,103]]]],0,[[168,167],[[12,[169,103]]]],[[164,65],[[12,[160,154]]]],[[65,65,160,[106,[124]]],[[12,[168,103]]]],[169,[[29,[-1]]],[]],[169,[[12,[30,103]]]],[160,31],0,0,0,[[168,156],[[12,[169,103]]]],[[168,149],[[12,[169,103]]]],[168,[[12,[167,103]]]],[168,[[12,[149,103]]]],[[168,65],166],[[168,149,65,[28,[31]]],[[12,[72,103]]]],[[168,65,65],[[12,[[34,[31]],103]]]],0,0,0,[160,73],0,0,[160,65],[160,65],0,[160,31],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[160,65],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,[160,[[170,[31]]]],[168,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[171,171],[[-1,-2],1,[],[]],0,0,0,[[171,26],27],[[172,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[172,30],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[156,156],30],[[156,156],173],[[173,156],1],[[173,6],1],[[156,156],30],[[156,156],[[12,[156,174]]]],[[156,6],173],[156,175],[176,156],[177,156],[173,156],[156,6],[156,156],[178,6],[178,156],[176,6],[176,156],[177,156],[177,6],[173,6],[173,156],[156,6],[178,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,156],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,7],[173,1],[179,179],[178,178],[176,176],[177,177],[175,175],[173,173],[174,174],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[156,156],180],[[178,178],180],[[176,176],180],[[173,173],180],[156,176],[[],173],[173,156],[156,181],[[156,-1],30,[[157,[156]]]],[[156,173],30],[[156,156],30],[[156,[182,[156]]],30],[[156,[182,[156]]],30],[[156,173],30],[[179,179],30],[[178,178],30],[[176,176],30],[[173,[182,[156]]],30],[[173,156],30],[[173,156],30],[[173,173],30],[[174,174],30],[[173,-2],1,[[157,[156]]],[[183,[],[[112,[-1]]]]]],[156,[[29,[6]]]],[176,30],[[156,26],27],[[181,26],27],[[181,26],27],[[179,26],27],[[178,26],27],[[176,26],27],[[177,26],27],[[175,26],27],[[173,26],27],[[174,26],27],[[174,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[182,[156]]],173],[-1,-1,[]],[-1,173,[184,[157,[6]]]],[8,173],[-1,-1,[]],[-2,173,[[157,[156]]],[[183,[],[[112,[-1]]]]]],[6,[[12,[173,-1]]],[]],0,[156,30],[6,30],[156,30],[176,30],0,[[156,-1],1,185],[[178,-1],1,185],[[173,-1],1,185],0,[176,30],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,[[35,[156]]]],[156,177],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[173,177],[173,8],[156,30],[156,30],[156,30],[156,30],[186,30],[31,30],[156,177],[[-1,-2],[[29,[-1]]],[[113,[],[[112,[178]]]],88],[[113,[],[[112,[178]]]]]],[[156,-1],173,[[157,[156]]]],[176,7],[-1,156,[[157,[6]],184]],[[],173],[176,[[29,[178]]]],[177,[[29,[-1]]],[]],[175,[[29,[-1]]],[]],0,[176,[[29,[178]]]],[177,[[29,[-1]]],[]],[156,[[29,[156]]]],[176,[[1,[7,[29,[178]]]]]],[176,[[1,[7,[29,[178]]]]]],[[176,6],[[29,[178]]]],[[156,156],[[29,[180]]]],[[156,173],[[29,[180]]]],[[156,173],[[29,[180]]]],[[156,[182,[156]]],[[29,[180]]]],[[156,[182,[156]]],[[29,[180]]]],[[179,179],[[29,[180]]]],[[178,178],[[29,[180]]]],[[176,176],[[29,[180]]]],[[173,173],[[29,[180]]]],[[173,156],[[29,[180]]]],[[173,156],[[29,[180]]]],[[173,[182,[156]]],[[29,[180]]]],0,0,[173,30],[[173,-1],1,[[157,[156]]]],[[173,7],1],[[173,7],1],[[173,-1],1,[[157,[6]]]],[[173,7],1],[173,1],[[156,-1],30,[[157,[156]]]],[[156,-1],[[12,[156,174]]],[[157,[156]]]],[156,173],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,173],[156,[[29,[6]]]],[-1,8,[]],[-1,8,[]],[156,[[182,[6]]]],[176,1],[176,1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[7,173],[[156,-1],173,[[157,[6]]]],0,0,0,0,0,0,[187,1],[187,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[188,[-1]]],[[188,[-1]]],88],[[[189,[-1]]],[[189,[-1]]],88],[[[190,[-1]]],[[190,[-1]]],88],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[[191,[],[[112,[-1]]]]],[[28,[-1]]],[]],[[[188,[-1]]],-2,[],[]],[[[189,[-1]]],-2,[],[]],[[[190,[-1]]],-2,[],[]],[[[188,[-1]]],-2,[],[]],[[[189,[-1]]],-2,[],[]],[[[190,[-1]]],-2,[],[]],[[[188,[-1]],26],27,[]],[[[189,[-2]],26],27,192,[[191,[],[[112,[-1]]]]]],[[[190,[-1]],26],27,[[157,[[28,[31]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[28,[31]]],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[30,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],1],[[],193],[[],194],[[195,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[193,1],[194,1],[194,1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[194,[[29,[[106,[[197,[[196,[195]]]]]]]]]],[193,195],[[195,[28,[31]]],7],[[194,-2],-1,[],[[199,[198],[[94,[-1]]]]]],[-2,-1,[],[[199,[198],[[94,[-1]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,[[193,[28,[31]]],7],[[195,[28,[31]]],7],[[193,31],1],[[195,31],1],[[193,6],27],[[195,6],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[200,200],[201,201],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],202],[[200,200],30],[[202,26],27],[[200,26],27],[[201,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[106,[[203,[202]]]]]],[31,[[29,[31]]]],[202,[[29,[201]]]],[31,[[29,[31]]]],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,30],0,[84,1],0,[202,31],[202,31],[202,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[31,[[12,[200,-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[202,[[29,[201]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[200,30],[[29,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[204,204],[205,205],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[205,1],[204,30],[205,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[204,205],0,[[204,206],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[205,[[29,[31]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[205,31],1],[[204,206,31],1],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[207,1],[[207,7],1],[207,207],[[-1,-2],1,[],[]],[207,1],[-1,-1,[]],[[[1,[7,7]]],208],[207,1],[-1,-2,[],[]],[[],207],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[207,31,31],1],0,0,0,0,0,0,0,0,[[209,210],31],[[211,7],[[29,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[209,31,210],1],[[211,7],30],[[],209],[-1,-1,[]],[-1,-1,[]],0,[[],[[203,[[212,[211]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],211],[209,213],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,7],7],[[7,7,7],[[1,[7,7,7]]]],[[7,7],7],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],0,[[214,26],27],[[214,26],27],[-1,-1,[]],[-1,-2,[],[]],[[7,7],30],[[],7],[[],7],[[],7],[[],7],[[],7],[7,7],0,0,[[],7],0,[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[7,7],0,0,0,[[],31],[215,31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],215],0,[31,1],[[215,31],1],0,[-1,-1,[]],[-1,-1,[]],0,[2,1],[[215,2],1],[[215,31,31],1],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],[[1,[7,7]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[136,1],[[],216],[216,217],[216,72],[216,217],[216,217],[216,72],[[],136],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[218,218],[[],136],[[-1,-2],1,[],[]],[136,136],[[136,-1],1,[[199,[72]]]],[[136,-1],1,[[199,[72]]]],[[136,-1,-2,-3],1,[[219,[7]]],[[219,[7]]],[[199,[72]]]],[72,217],0,0,0,[[218,26],27],[216,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,216],[[],136],[[],136],[72,72],[72,72],[72,72],[72,72],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[136,72],30],[72,30],0,[216,1],[[136,218],1],[218,1],[[],136],[[],136],0,0,0,0,[[],1],[136,1],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[136,218,30],1],[[218,30],1],[136,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[220,72,72],72],[[72,72],72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[220,72,72],1],[[72,72],1],[[],1],[220,1],[[],220],0,[-1,-1,[]],[-1,-1,[]],[[220,72,72],[[29,[[1,[221,30]]]]]],[[72,72],72],[[220,72,72],72],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[[221,72],[[29,[72]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,0,0,0,[2,31],[2,[[28,[31]]]],0,0,0,[2,72],0,0,0,[[232,232],30],[[233,233],30],0,[[2,26],27],[[232,26],27],[[234,26],27],[[234,26],27],[[222,26],27],[[233,26],27],[[235,26],27],[[235,26],27],[[223,26],27],[[224,26],27],[[225,26],27],[[226,26],27],[[227,26],27],[[228,26],27],[[229,26],27],[[230,26],27],[[231,26],27],[2,[[29,[225]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[31,[28,[31]]],224],[2,[[29,[37]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,30],0,0,0,0,0,0,0,0,0,0,[2,[[29,[[0,[[113,[],[[112,[234]]]]]]]]]],0,0,0,[236,[[29,[-1]]],[]],[222,[[29,[-1]]],[]],[223,[[29,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,236],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[2,[[29,[228]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[237,72,238],1],[[237,208],[[29,[7]]]],[239,72],[[72,135,133,[34,[8]],148],[[12,[237,240]]]],0,[[237,7,-1],30,[[241,[147]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[242,242],[243,243],[244,244],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[[],242],[[],243],0,0,0,0,0,0,[237,1],0,[[244,244],30],0,[[237,238],1],0,0,[237,1],[[240,26],27],[[242,26],27],[[243,26],27],[[244,26],27],[-1,-1,[]],[-1,-1,[]],[103,240],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[237,72],[[29,[238]]]],[237,148],[[237,7],[[29,[147]]]],0,0,0,0,[237,72],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[237,72],30],[[136,[28,[8]],72,72],[[1,[72,72,72]]]],[[],239],0,0,[237,72],0,[[237,-1],7,[[241,[147]]]],[[237,7,147],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[237,148],1],0,0,0,0,[237,1],0,[[237,7],[[29,[147]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[238,86],1],[-1,-1,[]],[245,1],0,[-1,-2,[],[]],[72,30],[[],245],0,[237,1],[[245,237],1],[[],3],[86,1],[[243,86],1],[86,1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[86,72],30],[-2,-1,[],[[95,[237],[[94,[-1]]]]]],[86,1],0,0,[[31,7],[[12,[1,246]]]],[86,1],[156,[[182,[156]]]],[[31,7],[[12,[[28,[247]],246]]]],[[31,7],[[12,[[28,[-1]],246]]],184],[31,[[12,[156,246]]]],[[31,7],[[12,[[28,[-1]],246]]],184],[31,[[12,[6,246]]]],[31,[[12,[[34,[8]],246]]]],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],[86,248],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[249,-1],1,95],[[[250,[-1]]],[[250,[-1]]],88],[[-1,-2],1,[],[]],[[],249],[[[250,[-1]]],1,[]],[[[250,[-1]],26],27,251],[-1,-1,[]],[-1,-1,[]],[[[250,[-1]]],-1,[]],[[[250,[-1]],-2],-1,[],[[95,[],[[94,[-1]]]]]],[[[250,[-1]],-3],[[12,[-1,-2]]],[],[],[[95,[],[[94,[[12,[-1,-2]]]]]]]],[[[250,[-1]]],-1,[]],[[[250,[-1]],-3],[[12,[1,-2]]],[],[],[[95,[],[[94,[[12,[-1,-2]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[249,30],[[[250,[-1]]],30,[]],[[],249],[[],[[250,[-1]]],[]],0,[[[250,[-1]],-1],[[12,[1,-1]]],[]],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[250,[-1]]],[[29,[-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[252,1],0,[[],252],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[252,30],[-1,36,[]],[252,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[253,[-1]]],-2,[],[]],[[[253,[-1]]],-2,[],[]],[[[253,[-1]]],1,184],[[[203,[-1]],26],27,251],[[[253,[-1]],26],27,251],[-1,-1,[]],[-1,-1,[]],[[[203,[-1]]],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[203,[-1]]],[[253,[-1]]],[]],0,0,0,[-1,[[203,[-1]]],[]],[[[203,[104]],156],[[12,[[34,[149]],103]]]],[[[203,[168]],156],[[12,[[34,[149]],103]]]],[[[203,[168]]],[[12,[149,103]]]],[[[203,[104]]],[[12,[149,103]]]],0,[[[203,[168]],149],[[12,[[34,[149]],103]]]],[[[203,[104]],149],[[12,[[34,[149]],103]]]],[[[203,[168]],149,72,[28,[31]]],[[12,[72,103]]]],[[[203,[-1]],-3],-2,[],[],[[95,[-1],[[94,[-2]]]]]],[[[203,[-1]],-3],-2,[],[],[[95,[-1],[[94,[-2]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[203,[-1]]],[[29,[[253,[-1]]]]],[]],[-1,36,[]],[-1,36,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[254,[-1]]],-2,[],[]],[[[254,[-1]]],1,[]],[[[197,[-1]],26],27,251],[[[254,[-1]],26],27,251],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[197,[-1]]],[[254,[-1]]],[]],0,0,0,0,[[[197,[[196,[195]]]]],6],[-1,[[197,[-1]]],[]],0,[[[197,[[196,[195]]]],72,[28,[31]]],[[12,[72,103]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[197,[-1]]],[[29,[[254,[-1]]]]],[]],[-1,36,[]],[-1,36,[]],[[[197,[[196,[195]]]],72,[28,[31]]],[[12,[72,103]]]]],"c":[],"p":[[1,"tuple"],[5,"MultiBoot2Info",3887],[1,"never"],[5,"PanicInfo",4613],[5,"State",24],[1,"str"],[1,"usize"],[5,"String",4614],[5,"MethodObj",24],[5,"Parser",24],[6,"AmlParseError",24],[6,"Result",4615],[5,"AmlCode",24],[6,"DataObject",24],[6,"AmlTerm",24],[6,"TermArg",24],[6,"Target",24],[5,"ScopeObj",24],[5,"RegionObj",24],[5,"FieldDef",24],[5,"IndexFieldDef",24],[6,"FieldElement",24],[5,"PredicateBlock",24],[5,"ProcessorDeprecated",24],[5,"PowerResource",24],[5,"Formatter",4616],[8,"Result",4616],[1,"slice"],[6,"Option",4617],[1,"bool"],[1,"u8"],[5,"BTreeMap",4618],[5,"BTreeSet",4619],[5,"Vec",4620],[5,"Box",4621],[5,"TypeId",4622],[5,"Rsdp",416],[5,"Rsdt",416],[5,"DescriptionHeader",416],[5,"DescriptorTable",416],[6,"DescriptorTableBody",416],[5,"Apic",416],[6,"InterruptControllerStruct",416],[5,"ProcessorLocalApic",416],[5,"IoApic",416],[5,"InterruptSourceOverride",416],[5,"NonMaskableInterrupt",416],[5,"LocalApicNmi",416],[5,"LocalApicAddressOverride",416],[5,"Facp",416],[5,"ApicGenericAddress",416],[5,"Hpet",416],[5,"Xsdt",416],[5,"Bgrt",416],[5,"Waet",416],[5,"Srat",416],[6,"StaticResourceAffinity",416],[5,"ProcessorLocalAcpiAffinity",416],[5,"MemoryAffinity",416],[5,"ProcessorLocalX2ApicAffinity",416],[5,"GiccAffinity",416],[5,"GicInterruptTranslationServiceAffinity",416],[5,"GenericInitiatorAffinity",416],[5,"BiosTables",416],[1,"u32"],[5,"RsdpV1",416],[5,"RsdpV2",416],[10,"Any",4622],[5,"RingBuffer",982],[10,"Copy",4623],[5,"Cpu",999],[1,"u64"],[1,"u16"],[10,"IoPortInt",999],[5,"GlobalDescriptorTablePointer",1063],[5,"InterruptDescriptorTablePointer",1189],[5,"SegmentSelector",1063],[5,"GlobalDescriptorTable",1063],[5,"UserDescriptorEntry",1063],[5,"SystemDescriptorEntry",1063],[5,"TaskStateSegment",1063],[5,"GlobalDescriptorManager",1063],[5,"InterruptDescriptorTable",1189],[5,"InterruptStackFrame64",1189],[5,"RestSavedRegisters",1189],[5,"InterruptAllSavedState",1189],[5,"InterruptDescriptorTableEntry",1189],[10,"Clone",4624],[10,"Default",4625],[10,"InterruptHandler",1353],[5,"Interrupts",1353],[5,"Apic",1384],[5,"IoApicRedirectionBuilder",1384],[17,"Output"],[10,"FnOnce",4626],[5,"LocalVectorRegisterBuilder",1384],[5,"IoApic",1384],[5,"ApicReg",1384],[5,"LocalVectorRegister",1384],[5,"IoApicMmio",1384],[6,"DestinationType",1384],[10,"Device",1591],[6,"FileSystemError",2543],[5,"Devices",1591],[5,"PciDeviceConfig",2143],[5,"Arc",4627],[5,"HpetInterruptStatus",1623],[5,"Hpet",1623],[5,"InterruptRouteCapabilityBitmap",1623],[5,"HpetTimerMmio",1623],[5,"HpetTimerConfig",1623],[17,"Item"],[10,"Iterator",4628],[5,"HpetMmio",1623],[5,"RtcTime",1734],[5,"Rtc",1734],[6,"IdeDeviceType",1783],[5,"IdeDeviceIndex",1783],[5,"IdeIo",1783],[5,"AtaCommand",1783],[6,"AtapiDmaDirection",1783],[5,"AtapiPacketCommand",1783],[6,"IdeError",1783],[5,"IdeDevice",1783],[5,"CommandIdentifyDataRaw",1783],[5,"IdeDeviceImpl",1783],[5,"PropeExtra",2143],[6,"PciDeviceType",2143],[6,"PciBar",2143],[10,"PciDevice",2143],[5,"PciDevicePropeIterator",2143],[5,"PipeSide",2279],[5,"File",2543],[5,"InnerPipe",2279],[5,"Elf",2311],[5,"VirtualMemoryMapper",3755],[6,"ElfProgram",2311],[5,"ElfHeaderBase",2311],[5,"ElfHeader32",2311],[5,"ElfHeader64",2311],[20,"ElfHeaderUnion",2311],[5,"ElfHeader",2311],[6,"ElfProgramType",2311],[5,"ElfProgram32",2311],[5,"ElfProgram64",2311],[6,"ElfLoadError",2311],[6,"FilesystemNode",2543],[5,"Directory",2543],[5,"INode",2543],[5,"FileStat",4629],[5,"FileAttributes",2543],[6,"BlockingMode",4629],[5,"EmptyFileSystem",2543],[6,"FatError",2726],[10,"FileSystem",2543],[5,"Path",2993],[10,"AsRef",4630],[5,"FileSystemMapping",2543],[5,"DirEntry",4629],[5,"FatBootSector",2726],[5,"Fat12_16ExtendedBootSector",2726],[5,"Fat32ExtendedBootSector",2726],[20,"FatExtendedBootSector",2726],[5,"FatBootSectorRaw",2726],[6,"FatType",2726],[6,"FatEntry",2726],[6,"Directory",2726],[5,"FatFilesystem",2726],[5,"DirectoryIterator",2726],[1,"array"],[5,"PartitionEntry",2958],[5,"MbrRaw",2958],[5,"PathBuf",2993],[5,"StripPrefixError",2993],[5,"Ancestors",2993],[5,"Components",2993],[5,"Iter",2993],[6,"Component",2993],[6,"State",2993],[6,"Ordering",4631],[5,"Display",2993],[6,"Cow",4632],[10,"IntoIterator",4633],[10,"Sized",4623],[10,"Hasher",4634],[1,"char"],[5,"Arguments",4616],[5,"NoDebug",3235],[5,"HexArray",3235],[5,"ByteStr",3235],[10,"ArrayTrait",3235],[10,"UpperHex",4616],[5,"EarlyConsole",3290],[6,"Console",3290],[5,"LateConsole",3290],[5,"RefCell",4635],[5,"ReMutex",4581],[10,"Write",4616],[10,"FnMut",4626],[6,"KeyType",3346],[5,"Key",3346],[5,"Keyboard",3346],[5,"Mutex",4542],[6,"UartPort",3550],[5,"Uart",3550],[6,"UartReg",3550],[5,"VgaBuffer",3609],[1,"isize"],[5,"LockedKernelHeapAllocator",3637],[5,"Layout",4636],[5,"PageAllocator",3637],[5,"HeapAllocator",4637],[5,"HeapStats",4638],[5,"MemSize",3665],[5,"PhysicalPageAllocator",3721],[5,"PageDirectoryTablePtr",3755],[5,"PageDirectoryTable",3755],[5,"VirtualMemoryMapEntry",3755],[10,"RangeBounds",4639],[5,"VirtualSpaceAllocator",3855],[5,"VirtualSpaceEntry",3855],[5,"MemoryMapIter",3887],[5,"EfiMemoryMapIter",3887],[6,"FramebufferColorInfo",3887],[5,"Framebuffer",3887],[5,"VbeControlInfo",3887],[5,"VbeModeInfo",3887],[5,"VbeInfo",3887],[5,"BasicMemoryInfo",3887],[5,"AdvancedPowerManagementTable",3887],[6,"MultiBootTag",3887],[6,"MemoryMapType",3887],[6,"EfiMemoryMapType",3887],[5,"MemoryMap",3887],[5,"EfiMemoryMap",3887],[5,"MultiBootTagIter",3887],[5,"Process",4284],[1,"i32"],[5,"GoingUpAllocator",4284],[6,"ProcessError",4284],[10,"Into",4630],[5,"FxSave",4284],[5,"ProcessContext",4284],[6,"ProcessState",4284],[5,"Scheduler",4431],[6,"SyscallArgError",4640],[5,"SpawnFileMapping",4641],[8,"SyscallResult",4640],[5,"Once",4485],[5,"OnceLock",4485],[10,"Debug",4616],[5,"Lock",4529],[5,"MutexGuard",4542],[5,"ReMutexGuard",4581],[15,"Unknown",977],[15,"Unknown",979],[5,"ApicMmio",1384],[15,"Memory",2257],[15,"Io",2257],[15,"DiskReadError",2724],[15,"Normal",2948],[15,"RootFat12_16",2948],[5,"FreePage",3721],[5,"MemoryMapTagRaw",3887],[5,"FramebufferRaw",3887],[5,"EfiMemoryMapsRaw",3887],[5,"MemoryMapsRaw",3887],[5,"MultiBootTagRaw",3887],[15,"Rgb",4269],[15,"Indexed",4269],[15,"ImageLoadBasePhysical",4276],[15,"BiosBootDevice",4276],[15,"BootCommandLine",4276],[15,"BootLoaderName",4276],[15,"Efi64SystemTablePtr",4276],[15,"Efi64ImageHandle",4276]],"b":[[241,"impl-Debug-for-AmlCode"],[242,"impl-Display-for-AmlCode"],[668,"impl-Display-for-BiosTables"],[669,"impl-Debug-for-BiosTables"],[1314,"impl-InterruptDescriptorTableEntry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame64)%3E"],[1315,"impl-InterruptDescriptorTableEntry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame64,+u64)%3E"],[1747,"impl-Debug-for-RtcTime"],[1748,"impl-Display-for-RtcTime"],[1870,"impl-Display-for-IdeError"],[1871,"impl-Debug-for-IdeError"],[2201,"impl-Debug-for-PciDeviceType"],[2202,"impl-Display-for-PciDeviceType"],[2628,"impl-From%3CDirectory%3E-for-FilesystemNode"],[2630,"impl-From%3CFile%3E-for-FilesystemNode"],[3022,"impl-AsRef%3Cstr%3E-for-Path"],[3023,"impl-AsRef%3CPath%3E-for-Path"],[3024,"impl-AsRef%3Cstr%3E-for-Component%3C\'_%3E"],[3025,"impl-AsRef%3CPath%3E-for-Component%3C\'_%3E"],[3026,"impl-AsRef%3Cstr%3E-for-Components%3C\'_%3E"],[3027,"impl-AsRef%3CPath%3E-for-Components%3C\'_%3E"],[3028,"impl-AsRef%3CPath%3E-for-Iter%3C\'_%3E"],[3029,"impl-AsRef%3Cstr%3E-for-Iter%3C\'_%3E"],[3030,"impl-AsRef%3Cstr%3E-for-PathBuf"],[3031,"impl-AsRef%3CPath%3E-for-PathBuf"],[3079,"impl-PartialEq%3CPathBuf%3E-for-Path"],[3080,"impl-PartialEq-for-Path"],[3081,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-Path"],[3082,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-%26Path"],[3083,"impl-PartialEq%3CPathBuf%3E-for-%26Path"],[3087,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3088,"impl-PartialEq%3CPath%3E-for-PathBuf"],[3089,"impl-PartialEq%3C%26Path%3E-for-PathBuf"],[3090,"impl-PartialEq-for-PathBuf"],[3096,"impl-Display-for-Display%3C\'_%3E"],[3097,"impl-Debug-for-Display%3C\'_%3E"],[3104,"impl-Display-for-StripPrefixError"],[3105,"impl-Debug-for-StripPrefixError"],[3112,"impl-From%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3114,"impl-From%3C%26T%3E-for-PathBuf"],[3115,"impl-From%3CString%3E-for-PathBuf"],[3170,"impl-PartialOrd-for-Path"],[3171,"impl-PartialOrd%3CPathBuf%3E-for-Path"],[3172,"impl-PartialOrd%3CPathBuf%3E-for-%26Path"],[3173,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-%26Path"],[3174,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-Path"],[3178,"impl-PartialOrd-for-PathBuf"],[3179,"impl-PartialOrd%3C%26Path%3E-for-PathBuf"],[3180,"impl-PartialOrd%3CPath%3E-for-PathBuf"],[3181,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3701,"impl-Display-for-MemSize"],[3702,"impl-Debug-for-MemSize"],[4049,"impl-Display-for-MemoryMap"],[4050,"impl-Debug-for-MemoryMap"],[4053,"impl-Display-for-EfiMemoryMap"],[4054,"impl-Debug-for-EfiMemoryMap"],[4564,"impl-FileSystem-for-Mutex%3CDevices%3E"],[4565,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4566,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4567,"impl-FileSystem-for-Mutex%3CDevices%3E"],[4569,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4570,"impl-FileSystem-for-Mutex%3CDevices%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
