var searchIndex = new Map(JSON.parse('[\
["emerald_kernel_user_link",{"doc":"","t":"SSSQCCCQCQQFGPPNNNNNNNNNNNNOONNNNNNNPGPFFPPGFGPPSPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOHOONNNNNNNNNNNNNNNNNNNNNNFNNNONNNONNNPPPPPPPPPPKPPPPPPPPPPSPPPPSSSSSSSSSSSSSSSSSSSSGGPINNNNNNNNNNNNMNNHHHHNNNNNN","n":["FD_STDERR","FD_STDIN","FD_STDOUT","call_syscall","clock","file","process","sys_arg","syscalls","to_arg_err","verify_args","ClockTime","ClockType","RealTime","SystemTime","borrow","borrow","borrow_mut","borrow_mut","clone","clone","fmt","fmt","from","from","into","into","nanoseconds","seconds","try_from","try_from","try_from","try_into","try_into","type_id","type_id","Block","BlockingMode","BlockingMode","DirEntry","DirFilename","Directory","File","FileMeta","FileStat","FileType","IsTerminal","Line","MAX_FILENAME_LEN","None","as_cstr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","default","default","default","default","eq","eq","eq","eq","eq","eq","file_type","filename_cstr","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_flags","hash","hash","hash","hash","hash","hash","inner_u64","into","into","into","into","into","into","name","parse_flags","size","stat","to_u64","to_u64_meta_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","SpawnFileMapping","borrow","borrow_mut","clone","dst_fd","fmt","from","into","src_fd","try_from","try_into","type_id","BufferTooSmall","CouldNotAllocateProcess","CouldNotLoadElf","CouldNotOpenFile","CouldNotReadFromFile","CouldNotWriteToFile","DuplicateFileMappings","EndOfFile","Err","FileNotFound","FromSyscallArgU64","GeneralInvalid","HeapRangesExceeded","InvalidArgument","InvalidError","InvalidFileIndex","InvalidHeapIncrement","InvalidNanoseconds","InvalidUserPointer","IsDirectory","IsNotDirectory","NUM_SYSCALLS","NotValidUtf8","Ok","PidNotFound","ProcessStillRunning","SYSCALL_INTERRUPT_NUMBER","SYS_BLOCKING_MODE","SYS_CHDIR","SYS_CLOSE","SYS_CREATE_PIPE","SYS_EXIT","SYS_GET_CWD","SYS_GET_FILE_META","SYS_GET_TIME","SYS_INC_HEAP","SYS_OPEN","SYS_OPEN_DIR","SYS_READ","SYS_READ_DIR","SYS_SET_FILE_META","SYS_SLEEP","SYS_SPAWN","SYS_STAT","SYS_WAIT_PID","SYS_WRITE","SyscallArgError","SyscallError","SyscallNotFound","SyscallResult","borrow","borrow","borrow_mut","borrow_mut","clone","clone","eq","fmt","fmt","from","from","from","from_syscall_arg_u64","into","into","syscall_arg_to_u64","syscall_handler_wrapper","syscall_result_from_u64","syscall_result_to_u64","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"emerald_kernel_user_link"],[11,"emerald_kernel_user_link::clock"],[36,"emerald_kernel_user_link::file"],[134,"emerald_kernel_user_link::process"],[146,"emerald_kernel_user_link::syscalls"],[221,"core::fmt"],[222,"core::fmt"],[223,"core::any"],[224,"core::ffi::c_str"],[225,"core::hash"],[226,"core::option"],[227,"core::ops::function"]],"d":["","","","Creates a syscall, the first argument is the syscall …","","","","Get the syscall arguments from the interrupt state, the …","","","","","","Real time clock, this follows the unix time","Monotonic system time, this is based on the system time …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","A blocking flag when dealing with files When using …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Will extract all the information from the flags, will …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Contains the error value","","","","","","","","","","","","","","","Contains the success value","","","must be one of user interrupts, i.e. 0x20+","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,1,2,2,1,2,1,2,10,0,14,0,0,11,11,0,0,0,14,10,0,10,8,10,11,12,8,13,14,10,11,12,8,13,14,10,11,12,8,13,14,11,12,8,13,10,11,12,8,13,14,12,13,10,11,12,8,13,14,10,11,12,8,8,13,14,10,10,11,12,8,13,14,14,10,11,12,8,13,14,13,0,12,13,10,14,10,10,11,12,8,13,14,14,10,11,12,8,13,14,10,11,12,8,13,14,0,20,20,20,20,20,20,20,20,20,20,20,22,22,22,22,22,22,21,22,23,22,0,21,22,22,22,22,21,21,21,22,22,0,21,23,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,21,22,21,22,21,22,21,21,22,23,21,22,24,21,22,0,0,0,0,21,22,21,22,21,22],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[1,3],4],[[2,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[5,[-2]]],[],[]],[6,[[5,[2,-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[8,9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,10],[11,11],[12,12],[8,8],[13,13],[14,14],[[],11],[[],12],[[],8],[[],13],[[10,10],15],[[11,11],15],[[12,12],15],[[8,8],15],[[13,13],15],[[14,14],15],0,[13,9],[[10,3],4],[[11,3],4],[[12,3],4],[[8,3],4],[[13,3],4],[[14,3],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,8],[-1,-1,[]],[-1,-1,[]],[6,10],[[10,-1],17,18],[[11,-1],17,18],[[12,-1],17,18],[[8,-1],17,18],[[13,-1],17,18],[[14,-1],17,18],[14,6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[6,[[19,[10]]]],0,0,[10,6],[14,6],[6,[[5,[10,-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[[[17,[6,6]]],[[5,[14,-1]]],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],[-1,7,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[20,20],0,[[20,3],4],[-1,-1,[]],[-1,-2,[],[]],0,[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[21,21],[22,22],[[21,21],15],[[21,3],4],[[22,3],4],[22,23],[-1,-1,[]],[-1,-1,[]],[6,[[5,[24,21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[6,[[5,[-1,21]]],24],[[6,-1],6,[[26,[],[[25,[23]]]]]],[6,23],[23,6],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,7,[]],[-1,7,[]]],"c":[173],"p":[[5,"ClockTime",11],[6,"ClockType",11],[5,"Formatter",221],[8,"Result",221],[6,"Result",222],[1,"u64"],[5,"TypeId",223],[5,"DirFilename",36],[5,"CStr",224],[6,"BlockingMode",36],[6,"FileType",36],[5,"FileStat",36],[5,"DirEntry",36],[6,"FileMeta",36],[1,"bool"],[1,"str"],[1,"tuple"],[10,"Hasher",225],[6,"Option",226],[5,"SpawnFileMapping",134],[6,"SyscallArgError",146],[6,"SyscallError",146],[8,"SyscallResult",146],[10,"FromSyscallArgU64",146],[17,"Output"],[10,"FnOnce",227]],"b":[]}],\
["increasing_heap_allocator",{"doc":"","t":"FFKNMONNNNNNMNNONNONNNNNNNNNN","n":["HeapAllocator","HeapStats","PageAllocatorProvider","alloc","allocate_pages","allocated","borrow","borrow","borrow_mut","borrow_mut","clone","dealloc","deallocate_pages","debug_free_blocks","fmt","free_size","from","from","heap_size","into","into","new","stats","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"increasing_heap_allocator"],[29,"core::alloc::layout"],[30,"core::option"],[31,"core::iter::traits::iterator"],[32,"core::fmt"],[33,"core::fmt"],[34,"core::any"]],"d":["","","","Safety","Return the start address of the new allocated heap","","","","","","","Safety","Deallocate pages from the end of the heap Return true if …","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,1,4,7,1,7,1,7,7,1,4,1,7,7,1,7,7,1,7,1,1,1,7,1,7,1,7],"f":[0,0,0,[[[1,[-1]],2],3,4],[[4,5],[[6,[3]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[[[1,[-1]],3,2],8,4],[[4,5],9],[[[1,[-1]]],[[0,[[11,[],[[10,[[8,[5,5]]]]]]]]],4],[[7,12],13],0,[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-1]]],4],[[[1,[-1]]],7,4],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]]],"c":[],"p":[[5,"HeapAllocator",0],[5,"Layout",29],[1,"u8"],[10,"PageAllocatorProvider",0],[1,"usize"],[6,"Option",30],[5,"HeapStats",0],[1,"tuple"],[1,"bool"],[17,"Item"],[10,"Iterator",31],[5,"Formatter",32],[8,"Result",32],[6,"Result",33],[5,"TypeId",34]],"b":[]}],\
["kernel",{"doc":"","t":"CCCQCQQCHCCHHCCCHQQCCCECPPPFGGPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPFGPPPPPPPFPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPFFPFPFPPPPFPPPPPPFPPPPPPFIIPPPGGPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHHHHHHHHHHHNOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNHNNNNNNNNNNNOONOOONOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOFPFSSJFPFFFGPFPFPPFFPFPGFPFPFPFPFPFPPFFPPFFFFFFPPGPPPFPFOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOHOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNHOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOCFNNONNNNNNNONNNNOJFKSONNHNNOHCNCNNCHHHHHOCHHNCNNHHHMHMHHHCNOOHHHNONHHOHHHHHHNNNNSSSESJFFFSFFJFSFOONOOOOOOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNCOONNNNNNNNNOHHOHNNNNNNNOOOOOOONNNNOOOOONNNNNNNNNNNNNNNNNONNNNNNNOOOSSSSSSHIFFFFIIFJFONONNNNNNNNNNNNOONNNNNNNNOOOONNNNHHOOOOOOOOOONNOOCONNNONNNNNNOOOONJNNNNNNOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOOOOOHOOONNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNOOOOSSSHJKFSSSSMHNHHNCNNHHNNNCONHNOCNNNJSSFFFGFFFSSSSSFFPPSOOOOOOOOHNHNNNNNNNNNNNNNNNNNNNNNNNONNONHNOHOOOOONNNNNNNNNNOOOOHNNNOOOONNNNNNNNNCOONOOOOOOOOOONNNNOOOOOONHNONOOHOOOOOOONNONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNSSSSSSSSSSSSSSHSSSSHHJSSKFNNCNNONNCHHNMCCHHNHNNNNJFKFSFNNNNNNNNNHNNNOONNNNNNNNMMCHNNNOMONNNNMCOOOONONNNNNNNNNNNNNCNNNNJFFFFFFSSSSNNONNNNNNNNNNNNNNNNONONNNHNNNNNNONNNNNNOOOOOHOOOONNNNNNOOOONNOONNOOOOOONNNNONHOONNNNNNNNNNNNNNNNNNNNNNNSSSSSSSSSSSFFSSSSSNNNNONNONNNNNNNNONNNNOONNONNNNNNNNNOFFNNNNNOHNNNNNNNNNNOONNONNONNNNNNNPFPGFPFPPJJFFFGGFPPPOOCONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOOOOOOOONOOOOONNNOOONNNNNNNNNNNNNNNNNNNNNOHOHHOONNONNONNNNNNNNNNONNNNNNOOOOOOOOOOOOOOOONNONOOOOOOOOOOOOOOOCOONNNNONNNNNNNNNNOOOOOOOOOOOOOOOOOONNOOOOOOOOOOOONNNNNNNNOOONNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNOOOOOOONOOONNNNNNNNNONNNNNOOOSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSPPPPPPPPPPPPPPPPGKFFGPPFPPPPPPPPOONNNNNNNNNNOOONNNNNNOOOMONNNNNNNNNOONNOOONNNNNNNNNNMNNHNCNNNNNNNNNNNNNNNNNNNONNHNOOOOOSSSSSSSSSSSSSSSSSFFNNNNONONHNNNNONNONNONNNNNNNOCHPFFFFFUGGFFGPPPPPPPPPPPPPPPOOONOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOONOONNOONOOOONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNOONOONOONOOONOONOONOONOOOONOOOONNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNONOOSSSSSSSSSSSSSSTTPFPPTJFPJPFPFPKGFGTFPPPPPPPTPTTPONNNNNONNONNNNNNNNNNNNNNNNNNNNNNNHNOOONHNCNONNNNNNNNNNNNNNNNHNONOONNNNNNNNNNNOOCHNNONNNNNNMNHMNCNNOOOONNMNNONNNNNONOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOPSGFPPFPPFFFGGUFGPPPPPPPCOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOONNOOOOONNOOOOOOONNNHOOONNNNNNNNNNNNNNNNNNNNNNOONONNNNNNNNNNNNNONHONNNNNNOOONNNNNNNOOONOONNONOOOONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNOONNOOOOOSSSSSSSFFOONNNNNNOOONNNNNNNOOOOOOOONNNNNNNFPGFPFPFPPFFPPSPGFNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONHNNONNNQNOOONNNNNNNNNNNNNNNNNNNHHNHNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFFRFJHHNNNNNNNNNNNNCMNNNNNNNNNNNNHQNNNCHNNNNNNNNNNNNCCJGPFPFNNNNNNOOOHNNNNNNNNNHNNNOOONNNNHNNNNNNNNNOOOONNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPJSSSSFGFPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPSSPPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNHHNHHONNNHOHCNNNCNNNNNNNNNNNNNONSSSSSSSSSSSSSSSPPSSPPSSSPPSSSSSPPPFGGNNNNNNNNNNNNNNHNNNNONOHNNNNNNNNNNNNNHSSSSFNNNNNNNNHNNNONNNNNCCCCCJFFNNNNNNNNNNNONONNONNNNNNNNSSSSSSSSSSSSSSSSSSSSFSSSSSSHHHJNNJHJNNNNHHHHHHHJJHJNNNNHJFFHNHNNNNNOHNONNOHNNNNOOOHNNNNNNOSSSSSSSJSSFFFFNNNNNNNNNNNNNNNNNHNNNNNNOCONNNNNNNHNHHHHHNNNNNHONNHNNOOOOHNNNNNNNNNNNNNNNHNOSSSSSSSSSSJFFNHNNNNNHHNNONNNHNNNOONNNNNNNOPPPPFPPPFPPPPPPPPPPFPFGFPPPFGFPPPPFPFFGPPFFGFFPPPPPPPPPPPPFFPFOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNOOOOOOONNOOONOOONNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONOOONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPSPFFSSJFFGGPPPPPPNNNNONNNNNNNNNNNNNONNNNNNOOONNOOOOOONONONOONNNNNNNNNNNNOONNNOOOONONNNNNNNNNOONONNOOOOOOOOOOOOOOOOOOCNOOOONCNNNNNNNNNNNNNNNNNNNNNNOJFNNOHNNONHNOHNHHHHHNNNHHHSIHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCSSSFFONNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNOCCCFNNNNNONNNNNNFFNNNNONNNNNNNNNNNNNOOONNNNNNONNNNNNNNNNNNNNFFNNNNONNNNNNNNNOOOONNONNNNNNNNN","n":["acpi","collections","cpu","cpuid","devices","eprint","eprintln","executable","finish_boot","fs","io","kernel_main","load_init_process","macros","memory_management","multiboot2","panic","print","println","process","sync","aml","get_acpi_tables","tables","AccessField","Add","Alias","AmlCode","AmlParseError","AmlTerm","And","Aquire","Arg","Arg","Break","Buffer","ByteConst","CannotMoveBackward","Concat","ConcatRes","CondRefOf","ConstOne","ConstOnes","ConstZero","CreateBitField","CreateByteField","CreateDWordField","CreateFieldOp","CreateQWordField","CreateWordField","DWordConst","DataObject","DataObject","Debug","Decrement","DerefOf","DerefOf","Device","Divide","Else","Event","Expression","Field","FieldDef","FieldElement","FindSetLeftBit","FindSetRightBit","If","Increment","Index","Index","IndexField","IndexFieldDef","InvalidPkgLengthLead","InvalidTarget","LAnd","LEqual","LGreater","LGreaterEqual","LLess","LLessEqual","LNot","LNotEqual","LOr","Local","Local","Method","MethodCall","MethodObj","Mid","Mod","Multiply","Mutex","Name","Name","NameObj","NamedField","Nand","None","Noop","Nor","Not","Notify","ObjectType","Or","Package","Parser","PowerResource","PowerResource","PredicateBlock","Processor","ProcessorDeprecated","QWordConst","RefOf","RefOf","Region","RegionObj","Release","RemainingBytes","ReservedField","Reset","Return","Scope","ScopeObj","ShiftLeft","ShiftRight","Signal","SizeOf","Sleep","Stall","State","StateMethodsList","StateNamesList","Store","String","Subtract","Target","TermArg","ToBuffer","ToDecimalString","ToHexString","ToInteger","UnexpectedEndOfCode","VarPackage","Wait","While","WordConst","Xor","add_method","add_name","arg_count","backward","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_empty","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_parser","clone_state","code","display_binary_op","display_call_term_target","display_depth","display_fields","display_index","display_method","display_predicate_block","display_scope","display_target","display_term","display_term_arg","display_terms","display_with_depth","fields","fields","find_method","find_name","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_inner_parser","get_next_byte","get_pkg_length","index_name","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","methods","name","name","name","name","name","name","name","names","new","parse","parse","parse","parse","parse","parse","parse","parse","parse_aml","parse_fields_list_and_flags","parse_name","parse_root","parse_target","parse_term","parse_term_arg","parse_term_arg_general","parse_term_arg_last","parse_term_arg_non_method_arg","parse_term_list","peek_next_byte","pos","predicate","predict_possible_args","region_length","region_offset","region_space","remaining_bytes","resource_order","state","system_level","term_list","term_list","term_list","term_list","term_list","term_list","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse_arg","try_parse_local","try_parse_name","try_parse_term","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unk1","unk2","unk3","Apic","Apic","ApicGenericAddress","BIOS_RO_MEM_END","BIOS_RO_MEM_START","BIOS_TABLES","Bgrt","Bgrt","BiosTables","DescriptionHeader","DescriptorTable","DescriptorTableBody","Dsdt","Facp","Facp","GenericInitiatorAffinity","GenericInitiatorAffinity","GicInterruptTranslationService","GicInterruptTranslationServiceAffinity","GiccAffinity","GiccAffinity","Hpet","Hpet","InterruptControllerStruct","InterruptSourceOverride","InterruptSourceOverride","IoApic","IoApic","LocalApicAddressOverride","LocalApicAddressOverride","LocalApicNmi","LocalApicNmi","MemoryAffinity","MemoryAffinity","NonMaskableInterrupt","NonMaskableInterrupt","ProcessorLocalAcpi","ProcessorLocalAcpiAffinity","ProcessorLocalApic","ProcessorLocalApic","ProcessorLocalX2Apic","ProcessorLocalX2ApicAffinity","Rsdp","RsdpV1","RsdpV2","Rsdt","Srat","Srat","Ssdt","StaticResourceAffinity","Unknown","Unknown","Unknown","Waet","Waet","Xsdt","acpi_disable","acpi_enable","acpi_processor_id","acpi_processor_uid","acpi_processor_uid","address","address_space_id","aml_code","apic_id","apic_id","arm_boot_arch","base_address","base_address_high","base_address_low","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","century","checksum","checksum","checksum","clock_domain","clock_domain","clock_domain","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","creator_id","creator_revision","cstate_control","day_alarm","deallocate_acpi_mapping","device_handle","device_handle_type","dsdt","duty_offset","duty_width","emulated_device_flags","entries","event_timer_block_id","extended_checksum","extended_checksum","fadt_minor_version","firmware_control","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flags","flush_size","flush_stride","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_header","from_header","from_header","from_physical_ptr","from_type_and_bytes","from_type_and_bytes","from_v1","from_v2","get_acpi_header_with_len","get_acpi_tables","get_struct_from_bytes","get_table","get_table_from_header","global_system_interrupt","global_system_interrupt","global_system_interrupt_base","gpe0_block","gpe0_block_length","gpe1_base","gpe1_block","gpe1_block_length","header","header","hpet_number","hypervisor_vendor_id","iapc_boot_arch","image_address","image_offset_x","image_offset_y","image_type","interrupt_controller_structs","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","io_apic_address","io_apic_id","its_id","length","length","length","length_high","length_low","local_apic_address","local_apic_address","local_apic_lint","local_sapic_eid","main_counter_minimum_clock_tick","month_alarm","new","oem_id","oem_id","oem_id","oem_revision","oem_table_id","p_level2_latency","p_level3_latency","page_protection","pm1_control_length","pm1_event_length","pm1a_control_block","pm1a_event_block","pm1b_control_block","pm1b_event_block","pm2_control_block","pm2_control_length","pm_timer_block","pm_timer_length","preferred_pm_profile","proximity_domain","proximity_domain","proximity_domain","proximity_domain","proximity_domain","proximity_domain_high","proximity_domain_low","pstate_control","rdst","register_bit_offset","register_bit_width","reserved","reserved","reserved","reserved","reserved","reserved","reserved1","reserved1","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved2","reserved2","reserved3","reset_reg","reset_value","revision","revision","revision","rsdp","rsdp_v1","rsdt","rsdt_address","rsdt_address","s4bios_req","sci_interrupt","signature","signature","signature","sleep_control_reg","sleep_status_reg","smi_command_port","source","static_resource_allocation","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","x2apic_id","x_dsdt","x_firmware_control","x_gpe0_block","x_gpe1_block","x_pm1a_control_block","x_pm1a_event_block","x_pm1b_control_block","x_pm1b_event_block","x_pm2_control_block","x_pm_timer_block","xsdt_address","xsdt_address","bytes","struct_type","bytes","struct_type","ring","RingBuffer","borrow","borrow_mut","buffer","clear","empty","from","into","pop","push","push_replace","read_index","try_from","try_into","try_push","type_id","write_index","CPUS","Cpu","IoPortInt","MAX_CPUS","apic_id","borrow","borrow_mut","clear_interrupts","clone","clone_into","context","cpu","cpuid","empty","flags","fmt","from","gdt","get_cr0","get_cr3","get_cr4","get_cs","halt","id","idt","inb","ind","init","interrupts","interrupts_disabled","into","invalidate_tlp","inw","io_in","io_in","io_out","io_out","lgdt","lidt","ltr","msr","n_cli","n_cli","old_interrupt_enable","outb","outd","outw","pop_cli","process_id","push_cli","read_tsc","rflags","scheduling","set_cr0","set_cr3","set_cr4","set_cs","set_data_segments","set_interrupts","to_owned","try_from","try_into","type_id","FEAT_EDX_APIC","FEAT_EDX_TSC","FN_FEAT","cpuid","IF","GDT","GlobalDescriptorManager","GlobalDescriptorTable","GlobalDescriptorTablePointer","KERNEL_RING","SegmentSelector","SystemDescriptorEntry","TSS","TaskStateSegment","USER_RING","UserDescriptorEntry","access","access","apply_lgdt","base","base_high","base_high","base_low","base_low","base_middle","base_middle","base_upper","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","default","default","default","empty","empty","empty","empty","empty","flags","flags_and_limit","flags_and_limit","fmt","from","from","from","from","from","from","from","from_index","gdt","get_user_code_seg_index","get_user_data_seg_index","index","init_kernel_gdt","into","into","into","into","into","into","into","iomap_base","ist","kernel_code_seg","kernel_data_seg","limit","limit","limit_low","load_kernel_segments","load_tss","push_system","push_user","reserved","reserved2","reserved3","reserved4","rsp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tss_seg","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_code_seg","user_data_seg","zero","CODE","LONG_MODE","PRESENT","TSS_TYPE","USER","WRITE","dpl","BasicInterruptHandler","InterruptAllSavedState","InterruptDescriptorTable","InterruptDescriptorTableEntry","InterruptDescriptorTablePointer","InterruptHandlerWithAllState","InterruptHandlerWithError","InterruptStackFrame64","REDIRECTED_INTERRUPTS","RestSavedRegisters","alignment_check","apply_idt","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound_range_exceeded","breakpoint","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","control_protection","coprocessor_segment_overrun","cs","debug","default","default","default","default","default_handler","default_handler_with_error","device_not_available","divide_by_zero","double_fault","dr0","dr1","dr2","dr3","dr6","dr7","ds","empty","empty","error","es","flags","flags","fmt","fmt","fmt","frame","from","from","from","from","from","from","fs","general_protection_fault","gs","hypervisor_injection","init_default_handlers","interrupt_vector_table","into","into","into","into","into","into","invalid_opcode","invalid_tss","ist","limit","machine_check","non_maskable_interrupt","number","offset_high","offset_low","offset_middle","overflow","override_code_segment","page_fault","phantom","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","reserved_1","reserved_2","reserved_3","reserved_4","rest","rflags","rip","rsi","rsp","rust_interrupt_handler_for_all_state","security_exception","segment_not_present","selector","set_disable_interrupts","set_handler","set_handler","set_handler_ptr","set_handler_with_number","set_privilege_level","set_stack_index","simd_floating_point","ss","stack_exception","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","user_defined","vmm_communication","x87_floating_point","zero","GATE_TYPE","KEEP_INTERRUPTS","PRESENT","dpl","INTERRUPTS","InterruptHandler","Interrupts","MAX_USER_INTERRUPTS","SPECIAL_SCHEDULER_INTERRUPT","SPECIAL_SYSCALL_INTERRUPT","USER_INTERRUPTS_START","allocate_and_set_handler","allocate_basic_user_interrupt","allocate_basic_user_interrupt","allocate_user_interrupt","allocate_user_interrupt_all_saved","allocate_user_interrupt_all_saved","apic","borrow","borrow_mut","create_scheduler_interrupt","create_syscall_interrupt","empty","from","get_next_interrupt","handlers","idt","init","init_interrupts","into","last_used_user_interrupt","stack_index","try_from","try_into","type_id","APIC","APIC_BAR_ENABLED","APIC_BASE_MASK","Apic","ApicMmio","ApicReg","DestinationType","IoApic","IoApicMmio","IoApicRedirectionBuilder","LVT_MASK_MASK","LVT_MESSAGE_TYPE_MASK","LVT_TIMER_MODE_MASK","LVT_TRIGGER_MODE_MASK","LVT_VECTOR_MASK","LocalVectorRegister","LocalVectorRegisterBuilder","Logical","Physical","SPURIOUS_ENABLE","_pad","_pad1","_pad2","_pad3","_pad4","_pad5","_pad6","arbitration_priority","assign_io_irq","assign_io_irq","assign_io_irq_custom","assign_io_irq_custom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","default","default","destination_format","disable_local_interrupts","disable_pic","empty","end_of_interrupt","error_interrupt_handler","error_local_vector_table","error_status","extended_apic_control","extended_apic_features","extended_interrupt_local_vector_tables","from","from","from","from","from","from","from","from","from","from","global_irq_base","id","id","in_service","init","init","initialize_spurious_interrupt","initialize_timer","interrupt_command_high","interrupt_command_low","interrupt_enable","interrupt_request","into","into","into","into","into","into","into","into","into","io_apic","io_apics","irq_pin_assersion","is_entry_taken","lint0_local_vector_table","lint1_local_vector_table","logical_destination","mmio","mmio","n_cpus","n_entries","pad","performance_local_vector_table","processor_priority","read","read","read_register","read_register","reg","reg","reg","reg","register_select","remote_read","reset_all_interrupts","return_from_interrupt","return_from_interrupt","return_of_interrupt","setup_error_interrupt","source_overrides","specifc_end_of_interrupt","spurious_handler","spurious_interrupt_vector","task_priority","thermal_local_vector_table","timer_current_count","timer_divide_configuration","timer_initial_count","timer_local_vector_table","to_owned","to_owned","trigger_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","with_delivery_mode","with_destination","with_interrupt_polartiy_low","with_mask","with_mask","with_message_type","with_periodic_timer","with_trigger_mode","with_trigger_mode_level","with_vector","with_vector","write","write","write_redirect_entry","write_register","write_register","IO_APIC_ARBITRATION_ID","IO_APIC_ID","IO_APIC_REDIRECTION_TABLE","IO_APIC_VERSION","RDR_DELIVERY_MODE_MASK","RDR_DELIVERY_STATUS_MASK","RDR_DESTINATION_LOGICAL_MASK","RDR_DESTINATION_MODE_MASK","RDR_DESTINATION_PHYSICAL_MASK","RDR_MASK_MASK","RDR_PIN_POLARITY_MASK","RDR_REMOTE_IRR_MASK","RDR_TRIGGER_MODE_MASK","RDR_VECTOR_MASK","apic_timer_handler","DOUBLE_FAULT_STACK","FAULTS_STACK","APIC_BASE","EFER","read","write","DEVICES","DEVICES_FILESYSTEM_CLUSTER_MAGIC","DEVICES_FILESYSTEM_ROOT_INODE_MAGIC","Device","Devices","borrow","borrow_mut","clock","clone_device","close","devices","fmt","from","ide","init_devices_mapping","init_legacy_devices","into","name","pci","pipe","probe_pci_driver","prope_pci_devices","read","register_device","try_from","try_into","type_id","write","CLOCKS","Clock","ClockDevice","ClockTime","NANOS_PER_SEC","SystemTime","add","add_device","as_nanos","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clocks","clone","clone_into","cmp","device","devices","eq","fmt","fmt","from","from","from","get_best_clock","get_best_for_calibration","get_time","granularity","hpet","init","into","into","into","last_tick","name","nanoseconds","new","new","partial_cmp","rating","require_calibration","rtc","rtc","seconds","start_unix","startup_offset","sub","system_time","tick","tick_system_time","time_since_startup","time_since_startup","time_since_unix_epoch","time_since_unix_epoch","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","tsc","type_id","type_id","type_id","update_device","HPET_CLOCK","Hpet","HpetInterruptStatus","HpetMmio","HpetTimerConfig","HpetTimerMmio","InterruptRouteCapabilityBitmap","LEGACY_PIT_IO_PORT_CHANNEL_0","LEGACY_PIT_IO_PORT_CONTROL","ONE_NANOSECOND_IN_FEMTOSECONDS","ONE_SECOND_IN_FEMTOSECONDS","ack","ack_interrupt","bitmap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","comparator_value","config","config_and_capabilities","counter_clock_period","create_disabled","current_counter","disable_pit","enabled_rounts","fmt","fmt","fmt","fmt","fmt","force_32bit_mode","from","from","from","from","from","from","fsb_capable","fsb_interrupt_route","general_capabilities_id","general_configuration","general_interrupt_status","init","interrupt_enabled","interrupt_route","interrupt_route_capabilities","interrupt_via_fsb","into","into","into","into","into","into","is_64bit_capable","is_interrupt_level_trigerred","is_periodic","is_periodic_capable","is_set","is_set","main_counter_value","mmio","read","read_general_configuration","reserved","reserved","reserved0","reserved1","reserved2","reserved3","set_config","set_enable_legacy_replacement_route","set_enabled","set_interrupts_iter","status","status_interrupts_iter","timer0_handler","timer_set_value","timers","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","write_comparator_value","write_general_configuration","CURRENT_CENTURY","RTC_ADDRESS","RTC_DATA","RTC_DAY_OF_MONTH","RTC_HOURS","RTC_MINUTES","RTC_MONTH","RTC_SECONDS","RTC_STATUS_A","RTC_STATUS_B","RTC_YEAR","Rtc","RtcTime","SECONDS_PER_DAY","SECONDS_PER_HOUR","SECONDS_PER_MINUTE","SECONDS_PER_MONTH","SECONDS_PER_YEAR","borrow","borrow","borrow_mut","borrow_mut","century_reg","clone","clone_into","day_of_month","default","eq","fmt","fmt","from","from","get_time","get_time_sync","hours","into","into","is_bcd","is_updating","minutes","month","new","read_register","seconds","seconds_since_unix_epoch","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","year","SyncPoint","Tsc","borrow","borrow","borrow_mut","borrow_mut","calibrate","cycles","cycles_to_ns","cycles_to_time_nanos","from","from","get_device_delay","get_sync_time_point","get_time","granularity","into","into","name","nanos","nanos_per_cycle_scaled","new","rating","rd_tsc_call_latency","recalibrate","require_calibration","start_time","time_nanos_since_start","try_from","try_from","try_into","try_into","type_id","type_id","Ata","AtaCommand","Atapi","AtapiDmaDirection","AtapiPacketCommand","BoundsExceeded","CommandIdentifyDataRaw","DeviceError","FromDevice","IDE_DEVICES","INTERRUPTS_SETUP","IdeDevice","IdeDeviceImpl","IdeDeviceIndex","IdeDeviceType","IdeError","IdeIo","None","ToDevice","UnalignedSize","addional_supported","additional_product_id","ata","atapi_byte_count_behavior","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_block","command_set_supported_or_enabled","command_set_supported_or_enabled2","control_block","current_apm_level","current_media_serial_number","data_set_management_trim_support","device_impl","device_name","device_nominal_form_factor","device_type","dma","drive","drive","eq","execute","execute","extended_user_addressable_sectors","features","firmware_revision","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","general_config","get_ide_device","hardware_reset_result","ide_interrupt_primary","ide_interrupt_secondary","identify_data","index","init_new","init_new","integrity_word","interrupt","interrupt","interseek_delay_for_iso_7779","into","into","into","into","into","into","into","into","into","into","io","is_dma_supported","is_lba48_supported","is_lba_supported","is_primary","is_secondary","is_valid","lba","lba","logical_sector_size","logical_sectors_alignment","major_version","master_io","master_password_id","max_blocks_per_data_set_management","max_blocks_per_download_microcode","max_sectors_per_multiple_commands","min_blocks_per_download_microcode","min_multiword_dma_transfer_cycle_time","min_pio_transfer_cycle_time_no_flow_control","min_pio_transfer_cycle_time_with_ioready","minor_version","model_number","new","new","nominal_media_rotation_rate","number_of_sectors","number_of_sectors","obsolete1","obsolete10","obsolete11","obsolete12","obsolete13","obsolete2","obsolete3","obsolete4","obsolete6","obsolete7","obsolete8","obsolete9","params","params_index","pci_cfg","pci_device","physical_logical_sector_size","probe_init","push_param","push_param_u16","push_param_u32","queue_depth","read_command_block","read_control_block","read_data","read_data_block","read_error","read_sense_key","read_status","read_sync","read_sync_ata","read_sync_atapi","recommended_multiword_dma_transfer_cycle_time","reserved","reserved10","reserved11","reserved2","reserved3","reserved4","reserved5","reserved6","reserved7","reserved8","reserved9","reserved_cfa1","reserved_cfa2","sct_command_transport","second_device_select","second_device_select","sector_count","sector_size","sector_size","sector_size","security_status","serial_ata_capabilities","serial_ata_features_enabled","serial_ata_features_supported","serial_number","specific_config","stream_access_latency","stream_dma_time","stream_min_request_size","stream_performance_granularity","streaming_transfer_time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transport_major_version","transport_minor_version","trusted_computing_features","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_register_ide_device","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ultra_dma_modes","unk_53","unk_59","unk_63","unk_64","unk_89","unk_90","user_addressable_sectors","user_addressable_sectors","user_addressable_sectors_28_mode","vendor_specific","wait_until_can_command","wait_until_free","with_byte_count_limit","with_dma","with_features","with_lba","with_second_drive","with_second_drive","with_sector_count","world_wide_name","write","write_command_block","write_control_block","write_data","write_packet_command","write_read_verify_feature_set_current_mode","write_read_verify_sector_count_mode2","write_read_verify_sector_count_mode3","ALT_STATUS","COMMAND","COMMAND_DEVICE_RESET","COMMAND_IDENTIFY","COMMAND_PACKET","COMMAND_PACKET_IDENTIFY","COMMAND_READ_SECTORS","DATA","DEFAULT_SECTOR_SIZE","DEV_CONTROL","DRIVE","ERROR","ERROR_ABORTED","ERROR_BAD_BLOCK","ERROR_END_OF_MEDIA","ERROR_ID_NOT_FOUND","ERROR_ILL_LENGTH","ERROR_SENSE_KEY","ERROR_UNCORRECTABLE","FEATURES","LBA_HI","LBA_LO","LBA_MID","PACKET_CMD_INQUIRY","PACKET_CMD_READ_10","PACKET_CMD_READ_CAPACITY","PACKET_CMD_TEST_UNIT_READY","PACKET_FEAT_DMA","PACKET_FEAT_DMA_DIR_FROM_DEVICE","PACKET_INQUIRY_VITAL_DATA","PACKET_VITAL_PAGE_BLOCK_LIMITS","PACKET_VITAL_PAGE_BLOCK_LIMITS_SIZE","PACKET_VITAL_PAGE_DEVICE_IDENTIFY","PACKET_VITAL_PAGE_SUPPORTED_PAGES","SECTOR_COUNT","SENSE_ABORTED_COMMAND","SENSE_BLANK_CHECK","SENSE_COPY_ABORTED","SENSE_DATA_PROTECT","SENSE_HARDWARE_ERROR","SENSE_ILLEGAL_REQUEST","SENSE_MEDIUM_ERROR","SENSE_MISCOMPARE","SENSE_NOT_READY","SENSE_OK","SENSE_RECOVERED_ERROR","SENSE_UNIT_ATTENTION","SENSE_VENDOR_SPECIFIC","SENSE_VOLUME_OVERFLOW","STATUS","STATUS_ALIGN_ERR","STATUS_BUSY","STATUS_DATA_REQUEST","STATUS_DEFERRED_WRITE_ERR","STATUS_DRIVE_FAULT","STATUS_ERR","STATUS_READY","STATUS_SENSE_DATA","CFG_CONTROL_REG","CMD_BUS_MASTER","CMD_INT_DISABLE","CMD_IO_SPACE","CMD_MEM_SPACE","DEFAULT_PRIMARY_INTERRUPT","DEFAULT_PRIMARY_IO","DEFAULT_SECONDARY_INTERRUPT","DEFAULT_SECONDARY_IO","PROG_IF_MASTER","PROG_IF_PRIMARY","PROG_IF_PRIMARY_PROGRAMMABLE","PROG_IF_SECONDARY","PROG_IF_SECONDARY_PROGRAMMABLE","BaseSystemPeripheral","BridgeDevice","CoProcessor","DisplayController","DockingStation","EncryptionController","InputDeviceController","IntelligentController","Io","MassStorageController","Memory","MemoryController","MultimediaController","NetworkController","NonEssentialInstrumentation","None","PciBar","PciDevice","PciDeviceConfig","PciDevicePropeIterator","PciDeviceType","ProcessingAccelerator","Processor","PropeExtra","Reserved","SatelliteCommunicationController","SerialBusController","SignalProcessingController","SimpleCommunicationController","Unassigned","Unclassified","WirelessController","args","base_address","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bus","bus","capabilities_ptr","clone","clone","clone","clone_into","clone_into","clone_into","dev","dev","device_id","device_name","device_type","fmt","fmt","fmt","fmt","from","from","from","from","from","func","func","get_io","get_memory","header_type","interrupt_line","interrupt_pin","into","into","into","into","into","into_iter","new","new","next","probe","probe_init","read_command","read_config","read_pci_config","read_status","reg","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vendor_id","write_command","write_config","write_pci_config","write_status","addr","addr","prefetchable","size","size","BAR0","BAR1","BAR2","BAR3","BAR4","BAR5","CAPABILITIES_PTR","CLASS_DWORD","COMMAND","DEVICE_ID","HEADER_TYPE","INTERRUPT_LINE","INTERRUPT_PIN","STATUS","SUBSYSTEM_ID","SUBSYSTEM_VENDOR_ID","VENDOR_ID","InnerPipe","PipeSide","borrow","borrow","borrow_mut","borrow_mut","buffer","clone_device","clones","close","create_pipe_pair","fmt","fmt","from","from","inner","into","into","is_read_side","name","read","read_side_available","try_from","try_from","try_into","try_into","type_id","type_id","write","write_side_available","elf","load_elf_to_vm","Dynamic","Elf","ElfHeader","ElfHeader32","ElfHeader64","ElfHeaderBase","ElfHeaderUnion","ElfLoadError","ElfProgram","ElfProgram32","ElfProgram64","ElfProgramType","FileSystemError","Interpreter","InvalidElfOrNotSupported","InvalidMagic","Load","Note","Null","OsSpecific","ProcessorSpecific","Program32","Program64","ProgramHeader","Shlib","ThreadLocalStorage","UnexpectedEndOfFile","_pad","abi","abi_version","alignment","alignment","alignment","base","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consts","elf_type","elf_version","endianness","entry","entry","entry","entry_point","file_size","file_size","file_size","flags","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_u32","header","header","header32","header64","header_size","header_size","into","into","into","into","into","into","into","into","into","into","into","is_elf64","is_little_endian","is_valid_and_supported","load","load","machine","magic","mem_size","mem_size","mem_size","offset","offset","offset","physical_address","physical_address","physical_address","prg_headers","program_header_entry_count","program_header_entry_count","program_header_entry_count","program_header_entry_size","program_header_entry_size","program_header_entry_size","program_header_offset","program_header_offset","program_header_offset","program_headers","section_header_entry_count","section_header_entry_count","section_header_entry_size","section_header_entry_size","section_header_offset","section_header_offset","section_header_offset","section_header_string_table_index","section_header_string_table_index","size_of_header","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_virtual_memory_flags","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","virtual_address","virtual_address","virtual_address","ABI_SYSV","BITS_32","BITS_64","ELF_MACHINE_X86","ELF_MACHINE_X86_64","ELF_MAGIC","ELF_TYPE_EXECUTABLE","ELF_TYPE_RELOCATABLE","ELF_TYPE_SHARED","ENDIANNESS_BIG","ENDIANNESS_LITTLE","PROG_FLAG_EXE","PROG_FLAG_READ","PROG_FLAG_WRITE","ARCHIVE","DIRECTORY","DeviceNotFound","Directory","Directory","DiskReadError","EMPTY","EMPTY_FILESYSTEM","EmptyFileSystem","EndOfFile","FILESYSTEM_MAPPING","FatError","File","File","FileAttributes","FileNotFound","FileSystem","FileSystemError","FileSystemMapping","FilesystemNode","HIDDEN","INode","InvalidData","InvalidOffset","InvalidPath","IsDirectory","IsNotDirectory","MustBeAbsolute","PartitionTableNotFound","READ_ONLY","ReadNotSupported","SYSTEM","VOLUME_LABEL","WriteNotSupported","archive","as_dir_mut","as_file","as_file_mut","as_file_stat","attributes","attributes","bitor","blocking_mode","blocking_mode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_inherit","clone_into","clone_into","clone_into","create_disk_mapping","device","device","dir_entries","directory","drop","empty_filesystem","eq","fat","filesize","filesystem","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_inode","from_inode","get_mapping","get_mapping","hidden","inode","inode","inode","into","into","into","into","into","into","into","into","is_blocking","is_dir","is_terminal","is_terminal","mappings","mbr","mount","mount","name","name","new_device","new_file","open","open","open","open_blocking","open_dir","open_dir","open_inode","open_root","open_root","path","path","path","path","path","position","position","read","read","read_dir","read_dir","read_file","read_only","read_to_end","seek","set_blocking","set_terminal","size","size","start_cluster","start_cluster","system","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","volume_label","write","write_file","error","sector","Bad","DIRECTORY_ENTRY_SIZE","Directory","DirectoryIterator","EndOfChain","Fat12","Fat12_16ExtendedBootSector","Fat16","Fat32","Fat32ExtendedBootSector","FatBootSector","FatBootSectorRaw","FatEntry","FatError","FatExtendedBootSector","FatFilesystem","FatType","Free","InvalidBootSector","Next","Normal","Reserved","RootFat12_16","UnexpectedFatEntry","attrs","backup_boot_sector","boot_code","boot_code","boot_sector","boot_sector","boot_signature","boot_signature","boot_signature_2","boot_signature_2","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes_per_cluster","bytes_per_sector","bytes_per_sector","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current_cluster","current_sector","current_sector_index","data_sectors","data_start_sector","device","dir","drive_number","drive_number","entry_index_in_sector","eq","eq","ext_flags","extended","fat","fat12_16","fat32","fat_size_16","fat_size_32","fat_size_in_sectors","fat_start_sector","fat_type","file_attribute_from_fat","file_system_type","file_system_type","filesystem","first_sector_of_cluster","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_u32","fs_info","fs_version","get_next_entry","hidden_sectors","into","into","into","into","into","into","into","into","into","into","into","into_iter","iter","jmp_boot","load_fat","load_fat_filesystem","media_type","new","new","new","next","next_sector","number_of_fats","number_of_fats","number_of_heads","oem_name","open_dir","open_dir_inode","open_root_dir","open_root_dir_inode","read_fat_entry","read_file","read_sectors","reserved","reserved","reserved_2","reserved_sectors_count","reserved_sectors_count","root_cluster","root_dir_sectors","root_dir_start_sector","root_entry_count","sectors_per_cluster","sectors_per_cluster","sectors_per_track","size_in_sectors","start_lba","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_sectors","total_sectors_16","total_sectors_32","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","volume_id","volume_id","volume_label","volume_label","volume_label","volume_label","inode","size_in_sectors","start_sector","ARCHIVE","DIRECTORY","HIDDEN","LONG_NAME","READ_ONLY","SYSTEM","VOLUME_ID","MbrRaw","PartitionEntry","boot_code","bootable","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","end_cylinder","end_head","end_sector","fmt","fmt","from","from","into","into","is_valid","partition_table","partition_type","signature","size_in_sectors","start_cylinder","start_head","start_lba","start_sector","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Ancestors","Body","Component","Components","CurDir","Display","Done","Iter","Normal","ParentDir","Path","PathBuf","Prefix","RootDir","SEPARATOR","StartDir","State","StripPrefixError","_ends_with","_join","_push","_set_file_name","_starts_with","_strip_prefix","_with_file_name","ancestors","as_path","as_path","as_path","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","back","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","components","default","deref","display","ends_with","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","file_name","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_str","front","has_last_separator","has_root","has_root","has_root","has_root","hash","hash","hash","impl_cmp","include_cur_dir","inner","inner","inner","into","into","into","into","into","into","into","into","into_boxed_path","into_iter","into_iter","into_iter","into_iter","into_iter","into_string","is_absolute","is_empty","is_relative","is_root","is_separator","is_separator_byte","iter","iter_after","join","len_before_body","new","new","next","next","next","next","next_back","next_back","parent","parse_next_component","parse_next_component_back","parse_single_component","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path","pop","push","reserve","reserve_exact","set_file_name","shrink_to","shrink_to_fit","starts_with","strip_prefix","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_path_buf","to_str","to_string","to_string","to_string_lossy","trim_left","trim_right","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_file_name","ArrayTrait","ByteStr","HexArray","Item","NoDebug","PRINT_ERR","_eprint","_print","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","console","data","deref","deref","deref","deref_mut","deref_mut","deref_mut","fmt","fmt","fmt","from","from","from","hexdump","impl_copy_clone_deref_wrapper","into","into","into","keyboard","set_err_enable","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uart","video_memory","CONSOLE","Console","Early","EarlyConsole","Late","LateConsole","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","console_cmd_buffer","current_foreground","current_vga_attrib","early_init","empty","empty_early","fmt","from","from","from","init","init_early","init_late","init_late_device","into","into","into","is_bold","is_faint","keyboard","late_device","migrate_from_early","read","run_with","run_with_console","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uart","uart","video_buffer","video_buffer","write","write","write_byte","write_byte","write_str","write_str","A","Application","B","Backslash","Backspace","Backtick","C","Calculator","CapsLock","Comma","D","Delete","Dot","DownArrow","E","Email","End","Enter","Equals","Escape","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","G","H","Home","I","Insert","J","K","KEYBOARD","KEYBOARD_DATA_PORT","KEYBOARD_INT_NUM","KEYBOARD_STATUS_PORT","KEY_PRESSED","Key","KeyType","Keyboard","Keypad0","Keypad1","Keypad2","Keypad3","Keypad4","Keypad5","Keypad6","Keypad7","Keypad8","Keypad9","KeypadAsterisk","KeypadDot","KeypadEnter","KeypadMinus","KeypadPlus","KeypadSlash","L","LeftAlt","LeftArrow","LeftBracket","LeftCtrl","LeftGUI","LeftShift","M","Minus","MultimediaMute","MultimediaNextTrack","MultimediaPlayPause","MultimediaPreviousTrack","MultimediaSelect","MultimediaStop","MyComputer","N","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumLock","O","P","PageDown","PageUp","Power","Q","R","RightAlt","RightArrow","RightBracket","RightCtrl","RightGUI","RightShift","S","ScrollLock","Semicolon","SingleQuote","Slash","Sleep","Space","T","Tab","U","US_KEYTYPE_KEYMAP","US_KEYTYPE_KEYMAP_SHIFTED","UpArrow","V","VolumeDown","VolumeUp","W","WWWBack","WWWFavorites","WWWForward","WWWHome","WWWRefresh","WWWSearch","WWWStop","Wake","X","Y","Z","_None1","_None2","_None3","_None4","active_modifiers","active_toggles","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","empty","eq","fmt","fmt","fmt","from","from","from","get_keyboard","get_modifier","get_next_char","get_toggle","init_keyboard","input_ring","into","into","into","is_modifier","key_type","keyboard_interrupt_handler","modifier","modifiers","read_data","read_status","status","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_read_char","type_id","type_id","type_id","virtual_char","virtual_key","ALT","CAPS_LOCK","CTRL","EXTENDED","NUM_LOCK","SCROLL_LOCK","SHIFT","COMMAND_DATA","DATA_READY","INPUT_BUFFER_FULL","KEYBOARD_LOCKED","KEYBOARD_TIMEOUT_MOUSE_DATA","PARITY_ERROR","RECEIVE_TIMEOUT","SYSTEM_FLAG","COM1","Data","IE_RX_READY","IE_TX_READY","InterruptAndFifoControl","InterruptEnable","LINE_BAUD_LATCH","LINE_RX_READY","LINE_TX_EMPTY","LineControl","LineStatus","MODEM_CTL_DTR","MODEM_CTL_LOOPBACK","MODEM_CTL_OUT1","MODEM_CTL_OUT2","MODEM_CTL_RTS","ModemControl","ModemStatus","Scratch","Uart","UartPort","UartReg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","from","from","from","init","init_port","interrupt_num","into","into","into","is_enabled","new","port_addr","read_reg","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_read_byte","type_id","type_id","type_id","write_byte","write_reg","DEFAULT_ATTRIB","VGA_BUFFER_ADDR","VGA_HEIGHT","VGA_WIDTH","VgaBuffer","borrow","borrow_mut","clear","clear_line","clone","clone_into","fix_after_advance","from","get_index","init","into","new","pos","to_owned","try_from","try_into","type_id","write_byte","kernel_heap_allocator","memory_layout","physical_page_allocator","virtual_memory_mapper","virtual_space","ALLOCATOR","LockedKernelHeapAllocator","PageAllocator","alloc","allocate_pages","borrow","borrow","borrow_mut","borrow_mut","dealloc","deallocate_pages","empty","from","from","heap_start","init_mutex","inner","into","into","mapped_pages","new","stats","try_from","try_from","try_into","try_into","type_id","type_id","EXTENDED_OFFSET","GB","INTR_STACK_BASE","INTR_STACK_COUNT","INTR_STACK_EMPTY_SIZE","INTR_STACK_ENTRY_SIZE","INTR_STACK_SIZE","INTR_STACK_TOTAL_SIZE","KB","KERNEL_BASE","KERNEL_END","KERNEL_EXTRA_MEMORY_BASE","KERNEL_EXTRA_MEMORY_SIZE","KERNEL_HEAP_BASE","KERNEL_HEAP_SIZE","KERNEL_LAST_POSSIBLE_ADDR","KERNEL_LINK","KERNEL_MAPPED_SIZE","KERNEL_PROCESS_VIRTUAL_ADDRESS_START","MB","MemSize","PAGE_2M","PAGE_4K","PROCESS_KERNEL_STACK_BASE","PROCESS_KERNEL_STACK_END","PROCESS_KERNEL_STACK_GUARD","PROCESS_KERNEL_STACK_SIZE","align_down","align_range","align_up","begin","borrow","borrow_mut","data_end","display_kernel_map","end","fmt","fmt","from","into","is_aligned","kernel_elf_data_end","kernel_elf_end","kernel_elf_rodata_end","kernel_elf_size","kernel_text_end","physical2virtual","rodata_end","stack_guard_page","stack_guard_page_ptr","text_end","to_string","try_from","try_into","type_id","virtual2physical","ALLOCATOR","FreePage","PhysicalPageAllocator","alloc","alloc","alloc_zeroed","borrow","borrow","borrow_mut","borrow_mut","empty","end","free","free","free_count","from","from","high_mem_start","init","init","init_range","into","into","low_mem_free_list_head","next","start","stats","try_from","try_from","try_into","try_into","type_id","type_id","used_count","ADDR_MASK","KERNEL_L3_INDEX_END","KERNEL_L3_INDEX_START","KERNEL_L3_PROCESS_INDEX_END","KERNEL_L3_PROCESS_INDEX_START","KERNEL_L4_INDEX","KERNEL_PROCESS_VIRTUAL_ADDRESS_START","KERNEL_VIRTUAL_MEMORY_MANAGER","MAX_USER_VIRTUAL_ADDRESS","NUM_USER_L4_INDEXES","PageDirectoryTable","PageDirectoryTablePtr","VirtualMemoryMapEntry","VirtualMemoryMapper","add_process_specific_mappings","alloc_new","as_mut","as_physical","as_ptr","as_ref","as_virtual","boot_vm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_current_vm_as_user","clone_into","clone_kernel_mem","do_for_every_user_entry","do_for_kernel_process_entry","do_for_ranges_enteries","enteries_from_mut_entry","entries","flags","flags","fmt","free","from","from","from","from","from_entry","get_current_vm","get_current_vm","get_l1","get_l2","get_l3","get_l4","init_kernel_vm","into","into","into","into","is_address_mapped","is_address_mapped_in_kernel","is_user","load_vm","map","map_kernel","new","new_kernel_vm","page_map_l4","physical_addr","physical_address","size","switch_to_kernel","switch_to_this","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unmap","unmap_kernel","unmap_process_memory","virtual_address","PTE_ACCESSED","PTE_DIRTY","PTE_GLOBAL","PTE_HUGE_PAGE","PTE_NOT_CACHEABLE","PTE_NO_EXECUTE","PTE_PRESENT","PTE_USER","PTE_WRITABLE","PTE_WRITETHROUGH","VIRTUAL_SPACE_ALLOCATOR","VirtualSpaceAllocator","VirtualSpaceEntry","allocate","allocate_and_map_virtual_space","borrow","borrow","borrow_mut","borrow_mut","deallocate","deallocate_virtual_space","debug_blocks","debug_blocks","empty","entries","from","from","get_entry_containing","get_virtual_for_physical","get_virtual_for_physical","into","into","physical_start","size","try_from","try_from","try_into","try_into","type_id","type_id","virtual_for_physical","virtual_start","ACPINonVolatile","ACPINonVolatile","ACPIReclaimable","ACPIReclaimable","AdvancedPowerManagementTable","AdvancedPowerManagementTable","Available","BadMemory","BasicMemoryInfo","BasicMemoryInfo","BiosBootDevice","BootCommandLine","BootLoaderName","BootServicesCode","BootServicesData","Conventional","Efi64ImageHandle","Efi64SystemTablePtr","EfiBootServicesNotTerminated","EfiMemoryMap","EfiMemoryMap","EfiMemoryMapIter","EfiMemoryMapType","EfiMemoryMapsRaw","EgaText","ElfSymbols","FrameBufferInfo","Framebuffer","FramebufferColorInfo","FramebufferRaw","ImageLoadBasePhysical","Indexed","LoaderCode","LoaderData","MemoryMap","MemoryMap","MemoryMapIter","MemoryMapTagRaw","MemoryMapType","MemoryMappedIO","MemoryMappedIOPortSpace","MemoryMapsRaw","MultiBoot2Info","MultiBootTag","MultiBootTagIter","MultiBootTagRaw","NewRsdp","OldRsdp","PalCode","PersistentMemory","Reserved","Reserved","Rgb","RuntimeServicesCode","RuntimeServicesData","Undefined","Undefined","Unusable","VbeControlInfo","VbeInfo","VbeInfo","VbeModeInfo","_entry_version","addr","addr","attributes","attributes","attributes","bank_size","banks","base_addr","base_addr","blue_field_position","blue_mask_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bpp","bpp","bpp","bytes_per_scanline","capabilities","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color_info","control_info","cseg","cseg_16","cseg_16_len","cseg_len","current","data_ptr","data_slice","direct_color_mode_attributes","dseg","dseg_len","end_address","entry_size","entry_size","entry_size","eq","eq","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","framebuffer","framebuffer_addr","framebuffer_type","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_color_info","get_most_recent_rsdp","green_field_position","green_mask_size","height","height","height","image_pages","interface_len","interface_off","interface_seg","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_rgb","length","length","mem_lower","mem_type","mem_type","mem_type","mem_type","mem_upper","memory_map_raw","memory_map_raw","memory_maps","memory_model","mode","mode_info","next","next","next","number_of_pages","number_of_pages","oem_data","oem_str_ptr","offset","phantom","physical_start","physical_start","pitch","pitch","planes","product_name","product_rev","red_field_position","red_mask_size","remaining","remaining","remaining","reserved","reserved","reserved","reserved","reserved0","reserved1","rsvd_field_position","rsvd_mask_size","signature","size","software_rev","tags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","total_size","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vbe_info","vendor","version","version","video_memory_size_blocks","video_modes_ptr","virtual_start","virtual_start","w_char","width","width","width","window_a_attributes","window_a_segment","window_b_attributes","window_b_segment","window_func_ptr","window_granularity","window_size","y_char","blue_field_position","blue_mask_size","green_field_position","green_mask_size","num_colors","red_field_position","red_mask_size","base_addr","biosdev","cmdline","name","partition","ptr","ptr","sub_partition","CouldNotLoadElf","DEAFULT_MAX_HEAP_SIZE","Exited","FxSave","GoingUpAllocator","HEAP_OFFSET_FROM_ELF_END","INITIAL_STACK_SIZE_PAGES","PROCESS_ID_ALLOCATOR","Process","ProcessContext","ProcessError","ProcessState","Running","Scheduled","Sleeping","WaitingForPid","WaitingForTime","Yielded","add_child_exit","add_to_heap","allocate","allocate_process","argv","attach_fs_node_to_fd","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children_exits","clone","clone","clone","clone_into","clone_into","clone_into","context","cs","current_dir","default","default","dr0","dr1","dr2","dr3","dr6","dr7","drop","ds","eq","es","exit","exit_code","file_index_allocator","finish_stdio","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","fs","fxsave","get_child_exit","get_current_dir","get_fs_node","gs","heap_max","heap_size","heap_start","id","id","into","into","into","into","into","into","is_user_address_mapped","load_argv_into_stack","new","next_id","open_filesystem_nodes","parent_id","parent_id","push_fs_node","put_fs_node","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","scheduler","set_current_dir","ss","stack_ptr_end","stack_size","state","switch_to_this_vm","syscalls","take_fs_node","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vm","SCHEDULER","Scheduler","borrow","borrow_mut","earliest_wait","exit_current_process","from","init_interrupt","interrupt_initialized","into","is_process_running","new","processes","push_process","push_process","schedule","scheduler_interrupt_handler","sleep_current_process","swap_context","syscall_interrupt_handler","try_from","try_into","type_id","wait_for_pid","with_current_process","yield_current_if_any","SYSCALLS","Syscall","check_ptr","handle_syscall","path_to_proc_absolute_path","sys_arg_to_file_mappings_array","sys_arg_to_mut_slice","sys_arg_to_path","sys_arg_to_slice","sys_arg_to_str","sys_arg_to_str_array","sys_blocking_mode","sys_chdir","sys_close","sys_create_pipe","sys_exit","sys_get_cwd","sys_get_file_meta","sys_get_time","sys_inc_heap","sys_open","sys_open_dir","sys_read","sys_read_dir","sys_set_file_meta","sys_sleep","sys_spawn","sys_stat","sys_wait_pid","sys_write","once","spin","ONCE_STATE_DONE","ONCE_STATE_INIT","ONCE_STATE_RUNNING","Once","OnceLock","_marker","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","default","drop","fmt","from","from","get","get_or_init","get_or_try_init","get_unchecked","init","into","into","is_completed","is_completed","new","new","once","set","state","to_owned","try_from","try_from","try_get","try_into","try_into","type_id","type_id","value","lock","mutex","remutex","Lock","borrow","borrow_mut","from","into","lock","locked","new","try_from","try_into","try_lock","type_id","unlock","Mutex","MutexGuard","borrow","borrow","borrow_mut","borrow_mut","data","deref","deref_mut","drop","fmt","fmt","from","from","get_mut","get_time","granularity","into","into","lock","lock","lock","marker","name","new","open_dir","open_dir","open_root","open_root","owner_cpu","rating","read_dir","read_dir","read_file","require_calibration","run_with","run_with_mut","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","ReMutex","ReMutexGuard","borrow","borrow","borrow_mut","borrow_mut","data","deref","drop","fmt","fmt","from","from","into","into","lock","lock","lock","lock_count","marker","name","new","owner_cpu","read","try_from","try_from","try_into","try_into","try_lock","type_id","type_id","write"],"q":[[0,"kernel"],[21,"kernel::acpi"],[24,"kernel::acpi::aml"],[416,"kernel::acpi::tables"],[977,"kernel::acpi::tables::InterruptControllerStruct"],[979,"kernel::acpi::tables::StaticResourceAffinity"],[981,"kernel::collections"],[982,"kernel::collections::ring"],[999,"kernel::cpu"],[1062,"kernel::cpu::cpuid"],[1066,"kernel::cpu::flags"],[1067,"kernel::cpu::gdt"],[1186,"kernel::cpu::gdt::flags"],[1193,"kernel::cpu::idt"],[1353,"kernel::cpu::idt::flags"],[1357,"kernel::cpu::interrupts"],[1388,"kernel::cpu::interrupts::apic"],[1573,"kernel::cpu::interrupts::apic::io_apic"],[1587,"kernel::cpu::interrupts::handlers"],[1588,"kernel::cpu::interrupts::stack_index"],[1590,"kernel::cpu::msr"],[1594,"kernel::devices"],[1622,"kernel::devices::clock"],[1691,"kernel::devices::clock::hpet"],[1805,"kernel::devices::clock::rtc"],[1859,"kernel::devices::clock::tsc"],[1893,"kernel::devices::ide"],[2181,"kernel::devices::ide::ata"],[2239,"kernel::devices::ide::pci_cfg"],[2253,"kernel::devices::pci"],[2367,"kernel::devices::pci::PciBar"],[2372,"kernel::devices::pci::reg"],[2389,"kernel::devices::pipe"],[2419,"kernel::executable"],[2421,"kernel::executable::elf"],[2639,"kernel::executable::elf::consts"],[2653,"kernel::fs"],[2834,"kernel::fs::FileSystemError"],[2836,"kernel::fs::fat"],[3058,"kernel::fs::fat::Directory"],[3061,"kernel::fs::fat::attrs"],[3068,"kernel::fs::mbr"],[3103,"kernel::fs::path"],[3345,"kernel::io"],[3400,"kernel::io::console"],[3456,"kernel::io::keyboard"],[3645,"kernel::io::keyboard::modifier"],[3652,"kernel::io::keyboard::status"],[3660,"kernel::io::uart"],[3719,"kernel::io::video_memory"],[3742,"kernel::memory_management"],[3747,"kernel::memory_management::kernel_heap_allocator"],[3775,"kernel::memory_management::memory_layout"],[3831,"kernel::memory_management::physical_page_allocator"],[3865,"kernel::memory_management::virtual_memory_mapper"],[3955,"kernel::memory_management::virtual_memory_mapper::flags"],[3965,"kernel::memory_management::virtual_space"],[3997,"kernel::multiboot2"],[4379,"kernel::multiboot2::FramebufferColorInfo"],[4386,"kernel::multiboot2::MultiBootTag"],[4394,"kernel::process"],[4542,"kernel::process::scheduler"],[4568,"kernel::process::syscalls"],[4598,"kernel::sync"],[4600,"kernel::sync::once"],[4641,"kernel::sync::spin"],[4644,"kernel::sync::spin::lock"],[4657,"kernel::sync::spin::mutex"],[4701,"kernel::sync::spin::remutex"],[4733,"core::panic::panic_info"],[4734,"alloc::string"],[4735,"core::result"],[4736,"core::fmt"],[4737,"core::fmt"],[4738,"alloc::collections::btree::map"],[4739,"alloc::collections::btree::set"],[4740,"alloc::vec"],[4741,"alloc::boxed"],[4742,"core::any"],[4743,"core::any"],[4744,"core::clone"],[4745,"core::default"],[4746,"core::ops::function"],[4747,"alloc::sync"],[4748,"core::cmp"],[4749,"core::iter::traits::iterator"],[4750,"emerald_kernel_user_link::file"],[4751,"emerald_kernel_user_link::file"],[4752,"emerald_kernel_user_link::file"],[4753,"core::iter::traits::collect"],[4754,"core::marker"],[4755,"core::fmt"],[4756,"core::fmt"],[4757,"increasing_heap_allocator::allocator"],[4758,"increasing_heap_allocator"],[4759,"core::ops::range"],[4760,"core::convert"],[4761,"emerald_kernel_user_link::process"],[4762,"emerald_kernel_user_link::syscalls"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner state of the parser to store information about the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Renamed to not be confused with <code>Clone::clone</code>","Renamed to not be confused with <code>Clone::clone</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Shared state all method names","","","","","","","","all found names (aliases, fields, etc.)","","","","","","","","","","","","","","","","","","similar to <code>Self::parse_term_arg</code>, but doesn’t expect to …","similar to <code>Self::parse_term_arg</code>, but cannot call methods, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represent v2 and above","","","","","","","","","","","","","This is inside DSDT and SSDT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Safety","Safety","Safety","Safety","","","","","Safety","","Will fill the table from the header data, and zero out …","","Will fill the table from the header data, and zero out …","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","allocates a newfixed size ring buffer","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","SAFETY: the data pointed to by <code>gdtr</code> must be static and …","SAFETY: the data pointed to by <code>ldtr</code> must be static and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","System Descriptor Entry for GDT","SAFETY: TSS is only used when <code>GDT</code> is locked, so its safe …","Task State Segment","","User Descriptor Entry for GDT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","This should be called only once, otherwise, it will crash","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Must make sure that the data is a valid descriptor …","Must make sure that the data is a valid descriptor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Puts the handler in the IDT and returns the …","","Puts the handler in the IDT and returns the …","Puts the handler in the IDT and returns the …","","","","","","","","Returns the argument unchanged.","","Global handlers that have several purposes and doesn’t …","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","disable the Local interrupts 0 and 1","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Informs the device that it is cloned.","Informs the device that it is closed.","","","Returns the argument unchanged.","","","Devices such as PS/2 keyboard, mouse, serial ports, etc.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Accurate always increasing time source","","","","","","","","","","","","","","device used to get the time","devices sorted based on their rating","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the current time of the device with no relation to …","Returns the granularity of the device in nanoseconds, i.e. …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The last time we ticked the system time","Returns the name of the device","nanoseconds added to <code>seconds</code>","","","","Returns the rating of the device, i.e. how good it is The …","Returns true if the device needs to be calibration i.e. it …","","Used to determine the outside world time and use it as a …","seconds passed since a fixed point in time","The time when the system was started","The system time since the start","","System time","","","","","","","","","","","","","","","","","","Will update the device if this one is different","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of femtoseconds per counter tick","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is very inaccurate, but we only use it for <code>ClockDevice</code>…","(365.25925925925924 * SECONDS_PER_DAY); idk why this works …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Frequency of the TSC, how many nano seconds per cycle …","","","The latency of reading the TSC","","","Nanoseconds offset that we started counting from it may be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pipe is a device that allows two processes to communicate …","Represent one side of a pipe. Check <code>create_pipe_pair</code> for …","","","","","The buffer of the pipe.","","","","Create a connected pipe pair. The first returned file is …","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A handle to a directory, it has the inode which controls …","","","","","","","","","A handle to a file, it has the inode which controls the …","","","","","","","A node in the filesystem, can be a file or a directory","","","Unlike InvalidInput, this typically means that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is a move verbose method than <code>Clone::clone</code>, as I want …","","","","Loads the hard disk specified in the argument it will load …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Retrieves the file system mapping for a given path.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Open the inode of a path, this include directories and …","","","A library for parsing, manipulating Paths that follow unix …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","An iterator over <code>Path</code> and its ancestors.","","A single component of a path.","An iterator over the <code>Component</code>s of a <code>Path</code>.","A reference to the current directory, i.e., <code>.</code>.","","","An iterator over the <code>Component</code>s of a <code>Path</code>, as <code>str</code> slices.","A normal component, e.g., <code>a</code> and <code>b</code> in <code>a/b</code>.","A reference to the parent directory, i.e., <code>..</code>.","A slice of a path (akin to <code>str</code>).","An owned, mutable path (akin to <code>String</code>).","","The root directory component, appears after any prefix and …","use unix pathes seperator","","Component parsing works by a double-ended state machine; …","An error returned from <code>Path::strip_prefix</code> if the prefix …","","","","","","","","Produces an iterator over <code>Path</code> and its ancestors.","Extracts a slice corresponding to the portion of the path …","Extracts a slice corresponding to the portion of the path …","Coerces to a <code>Path</code> slice.","","","","","","","","","","","Yields the underlying bytes.","Extracts the underlying <code>str</code>.","","","","","","","","","","","","","","","","","","","","","Invokes <code>capacity</code> on the underlying instance of <code>String</code>.","Invokes <code>clear</code> on the underlying instance of <code>String</code>.","","","","","","","","","","","","","","","","","","","Produces an iterator over the <code>Component</code>s of the path.","","","Returns a newtype that implements Display for safely …","Determines whether <code>child</code> is a suffix of <code>self</code>.","","","","","","","","","","","","","","","Returns the final component of the <code>Path</code>, if there is one.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Converts a <code>String</code> into a <code>PathBuf</code>","Returns the argument unchanged.","","","","Checks if the path ends with a separator.","Check if the first char is <code>/</code>","Returns <code>true</code> if the <code>Path</code> has a root.","Is the <em>original</em> path rooted?","","","","","","Should the normalized path include a leading . ?","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>PathBuf</code> into a boxed <code>Path</code>.","","","","","","Consumes the <code>PathBuf</code>, yielding its internal <code>String</code> storage.","Returns <code>true</code> if the <code>Path</code> is absolute, i.e., if it is …","Checks if the path is empty.","Returns <code>true</code> if the <code>Path</code> is relative, i.e., not absolute.","Checks if the path is the root directory.","","","Produces an iterator over the path’s components viewed …","","Creates an owned <code>PathBuf</code> with <code>path</code> adjoined to <code>self</code>.","","Directly wraps a string slice as a <code>Path</code> slice.","Allocates an empty <code>PathBuf</code>.","","","","","","","Returns the <code>Path</code> without its final component, if there is …","","","","","","","","","","","","","","","","","","Truncates <code>self</code> to <code>self.parent</code>.","Extends <code>self</code> with <code>path</code>.","Invokes <code>reserve</code> on the underlying instance of <code>String</code>.","Invokes <code>reserve_exact</code> on the underlying instance of <code>String</code>.","Updates <code>self.file_name</code> to <code>file_name</code>.","Invokes <code>shrink_to</code> on the underlying instance of <code>String</code>.","Invokes <code>shrink_to_fit</code> on the underlying instance of <code>String</code>.","Determines whether <code>base</code> is a prefix of <code>self</code>.","Returns a path that, when joined onto <code>base</code>, yields <code>self</code>.","","","","","","","","","Converts a <code>Path</code> to an owned <code>PathBuf</code>.","Yields a <code>&amp;str</code> slice if the <code>Path</code> is valid unicode.","","","Converts a <code>Path</code> to a <code>Cow&lt;str&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>PathBuf</code> with a given capacity used to create …","Creates an owned <code>PathBuf</code> like <code>self</code> but with the given file …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","A temporary tool to allow for easy printing to the screen. …","","","","","","","","","","","","","","0..=7 is normal, 8..=15 is bright this is saved state, so …","","Create an early console, this is used before the kernel …","SAFETY: the console must be used inside a lock or mutex as …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","SAFETY","Create a late console, this is used after the kernel heap …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","if the current color is bold, i.e. brighter","if the current color is faint, i.e. darker","","","SAFETY: must ensure that there is no console running at …","","","SAFETY","","","","","","","","","","","","","","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","SAFETY: the caller must assure that this is called from …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The index is <code>KeyType</code>","The index is <code>KeyType</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enables the divisor latch access bit","Got data","Trasmitter is empty","","","Controls the Data Terminal Ready Pin","Controls the loopback mode","Controls the Out1 pin","Controls the Out2 pin (used for interrupts)","Controls the Request To Send Pin","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Will return <code>true</code> if the test pass, otherwise, the serial …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","SAFETY: <code>init</code> must be called before calling this function","","","","SAFETY: <code>init</code> must be called before calling this function","","White on black text","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","This very specific to 64-bit x86 architecture, if this is …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","","","","","","","SAFETY: this must be called after <code>init</code>","SAFETY: this must be called after <code>init</code>","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","Return the VM for the CPU at boot time (only applied to …","","","","","","","","","","","","","","","","An ugly hack used in <code>do_for_every_user_entry</code> to get a …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Safety","Safety","","","","","","","","","","","","","","Removes mapping of a virtual entry, it will free it from …","<code>is_allocated</code> is used to indicate if the physical pages …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns <code>(virtual_start, is_fully_inside)</code>","","Checks if we have this range allocated, returns it, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Return <code>None</code> if its not mapped, or if the <code>physical_start</code> is …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add/Remove to/from the heap and return the previous end of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Safety","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Exit the current process, and move the <code>all_state</code> to the …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Get the absolute path, if the <code>path</code> is relative, it will …","Allocates space fro the mapping and copies them","","","","","Allocates space for the strings and copies them","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>PhantomData</code> to make sure dropck understands we’re …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","A raw spin lock, only provides <code>lock</code> and <code>unlock</code> and waiting …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Try to lock the lock, returns true if successful","","SAFETY: the caller must assure that there is only one …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","We know statically that no one else is accessing the lock, …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A special method to allow accessing the variable inside …","A special method to allow accessing the variable inside …","","","","","","","","A mutex that can be intered more than once by the same CPU","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,15,15,0,0,0,15,15,16,17,15,15,14,11,15,15,15,14,14,14,15,15,15,15,15,15,14,0,16,17,15,15,17,15,15,15,15,16,15,0,0,15,15,15,15,15,17,15,0,11,11,15,15,15,15,15,15,15,15,15,16,17,15,15,0,15,15,15,15,16,17,15,22,15,17,15,15,15,15,15,15,15,0,0,15,0,15,0,14,15,17,15,0,15,11,22,15,15,15,0,15,15,15,15,15,15,0,0,0,15,15,15,0,0,15,15,15,15,11,15,15,15,14,15,5,5,9,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,10,5,10,0,0,0,0,0,0,0,0,0,0,0,0,13,20,21,5,5,20,21,9,11,13,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,10,21,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,5,18,19,20,21,9,24,25,5,5,18,19,20,21,9,23,24,25,0,10,10,10,10,10,10,10,10,10,10,10,10,23,10,19,19,19,10,25,10,25,13,18,9,23,24,25,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,13,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,10,10,10,10,10,11,13,14,15,16,17,18,19,20,21,22,9,23,24,25,5,24,24,24,0,41,0,0,0,0,0,41,0,0,0,0,41,0,41,0,57,57,0,0,57,0,41,0,0,43,0,43,0,43,0,43,0,57,0,43,57,0,0,43,57,0,0,0,0,0,0,41,41,0,41,43,57,0,41,0,50,50,44,48,61,51,51,53,44,58,50,52,59,59,40,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,46,50,66,37,39,58,60,61,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,39,39,50,50,0,63,63,50,50,50,55,38,52,67,37,50,50,42,44,46,47,48,50,58,59,60,61,63,50,50,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,42,53,56,40,43,57,37,37,0,0,0,38,0,46,47,45,50,50,50,50,50,38,40,52,50,50,54,54,54,54,42,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,45,45,62,67,37,39,59,59,42,49,48,58,52,50,64,66,37,39,39,39,50,50,52,50,50,50,50,50,50,50,50,50,50,50,59,60,61,62,63,58,58,50,37,51,51,67,37,45,49,50,51,56,59,60,62,63,50,56,59,60,63,59,50,50,66,37,39,64,67,64,66,37,50,50,66,37,39,50,50,50,46,56,54,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,54,60,50,50,50,50,50,50,50,50,50,50,67,37,261,261,262,262,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,71,71,71,0,71,71,71,0,0,71,0,71,71,0,0,0,0,0,0,71,0,0,0,71,0,71,71,0,0,0,74,0,74,0,0,0,0,71,71,71,0,0,0,71,71,71,0,0,71,0,0,0,0,0,0,71,71,71,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,80,78,75,79,80,79,80,79,80,80,81,75,82,78,77,79,80,81,75,82,78,77,79,80,77,79,80,77,79,80,78,77,79,80,81,82,78,79,80,0,79,80,77,81,75,82,78,77,79,80,77,82,0,0,78,0,81,75,82,78,77,79,80,81,81,82,82,75,80,79,82,82,78,78,81,81,81,81,81,77,79,80,81,75,82,78,77,79,80,81,75,82,78,77,79,80,82,81,75,82,78,77,79,80,82,82,80,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,83,76,83,76,84,85,86,87,83,76,84,85,86,87,83,83,84,85,86,87,84,85,86,87,83,83,84,83,84,85,86,87,0,0,83,83,83,85,85,85,85,85,85,85,83,87,86,85,0,87,84,85,86,86,83,76,84,85,86,87,85,83,85,83,83,0,83,76,84,85,86,87,83,83,87,76,83,83,86,87,87,87,83,87,83,87,85,85,85,85,85,85,85,85,85,85,85,85,85,85,83,83,83,83,86,84,84,85,84,0,83,83,87,87,87,87,87,87,87,87,83,84,83,84,85,86,87,83,76,84,85,86,87,83,76,84,85,86,87,83,76,84,85,86,87,83,83,83,87,0,0,0,0,0,0,0,0,0,0,0,90,0,91,0,0,91,0,91,91,0,0,91,91,91,0,91,91,0,91,91,0,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,0,100,263,263,263,263,263,263,263,0,92,0,92,98,99,263,101,100,97,92,96,93,98,99,263,101,100,97,92,96,93,96,93,96,93,100,96,93,263,92,0,92,263,0,263,263,263,263,263,98,99,263,101,100,97,97,92,96,93,97,263,97,263,0,92,92,92,263,263,263,263,98,99,263,101,100,97,92,96,93,0,92,100,97,263,263,263,97,92,92,97,98,263,263,98,99,100,97,98,99,96,93,100,263,97,0,92,100,92,92,263,0,263,263,263,263,263,263,263,96,93,263,98,99,263,101,100,97,92,96,93,98,99,263,101,100,97,92,96,93,98,99,263,101,100,97,92,96,93,263,93,93,93,96,93,96,96,96,93,96,93,98,99,97,100,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,104,0,102,102,104,104,104,0,0,0,104,102,0,0,0,0,102,0,104,104,104,102,0,0,0,0,0,0,107,108,107,112,108,107,112,108,107,0,107,107,107,112,108,107,108,107,112,108,107,108,108,109,109,0,0,112,108,107,112,109,107,112,108,107,109,109,0,108,107,112,112,107,108,112,108,112,108,112,108,107,112,108,107,112,108,107,0,112,108,107,112,0,0,0,0,0,0,0,0,0,0,0,113,114,115,117,113,115,116,120,114,117,113,115,116,120,114,113,115,113,115,116,116,116,114,114,114,0,115,113,115,116,120,114,117,117,113,115,116,120,114,117,116,120,120,120,0,117,117,117,117,117,113,115,116,120,114,117,117,117,117,113,115,120,114,117,114,113,116,120,120,120,120,116,114,114,113,113,114,0,117,120,113,115,117,113,115,116,120,114,117,113,115,116,120,114,117,113,115,116,120,114,117,116,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,122,111,122,111,122,122,122,122,122,122,122,111,122,111,111,122,111,122,111,111,122,122,111,111,122,122,122,122,111,122,111,122,111,122,122,0,0,124,123,124,123,123,124,0,123,124,123,123,123,123,123,124,123,123,124,123,123,123,123,123,123,123,123,124,123,124,123,124,123,125,0,125,0,0,131,0,131,129,0,0,0,0,0,0,0,0,129,129,131,133,133,0,133,125,126,127,128,129,130,133,131,132,134,125,126,127,128,129,130,133,131,132,134,133,125,126,127,128,129,130,131,125,126,127,128,129,130,131,128,127,133,133,127,133,133,133,132,132,133,132,130,128,130,125,128,130,133,128,133,125,126,127,128,129,130,133,131,131,132,134,125,126,127,128,129,130,133,131,132,134,133,0,133,0,0,134,126,132,134,133,132,134,133,125,126,127,128,129,130,133,131,132,134,134,133,133,133,132,132,133,128,130,133,133,133,134,133,133,133,133,133,133,133,133,133,133,128,130,133,132,132,133,133,133,133,133,133,133,133,133,133,133,133,130,130,0,134,133,132,130,130,130,133,127,127,127,127,127,127,127,132,134,134,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,132,134,128,133,132,132,133,133,133,133,133,133,133,133,133,133,133,125,126,127,128,129,130,131,131,133,133,133,125,126,127,128,129,130,133,131,132,134,125,126,127,128,129,130,133,131,132,134,0,126,125,126,127,128,129,130,133,131,132,134,133,133,133,133,133,133,133,133,133,133,133,127,127,130,130,128,128,128,130,128,133,128,127,127,127,130,133,133,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,136,136,136,136,136,136,136,137,136,137,136,136,136,136,137,0,0,0,0,0,136,136,0,136,136,136,136,136,136,136,136,135,105,139,135,136,137,105,139,135,136,137,105,139,105,105,136,137,105,136,137,105,139,105,105,138,105,136,136,137,105,139,135,136,137,105,139,105,137,137,105,105,105,139,135,136,137,105,139,139,136,139,105,138,105,105,0,105,0,136,137,105,136,139,135,136,137,105,139,135,136,137,105,139,135,136,137,105,105,105,105,0,105,264,265,264,264,265,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,140,142,140,142,140,140,140,0,142,140,142,140,140,142,140,140,140,140,142,142,140,142,140,142,140,140,142,0,0,151,0,0,0,0,0,0,0,0,0,0,0,154,151,154,154,151,151,151,151,151,145,145,151,151,151,154,146,146,146,145,152,153,150,146,154,146,147,148,149,150,151,152,153,145,143,154,146,147,148,149,150,151,152,153,145,143,146,147,148,149,150,151,152,153,145,146,147,148,149,150,151,152,153,145,0,146,146,146,150,147,148,143,145,152,153,145,147,148,152,153,154,146,147,148,150,151,152,153,145,143,154,154,146,147,148,149,150,151,152,153,145,143,151,150,143,149,149,147,148,154,146,147,148,149,150,151,152,153,145,143,150,150,150,145,143,146,146,145,152,153,145,152,153,145,152,153,143,150,147,148,150,147,148,150,147,148,143,147,148,147,148,150,147,148,147,148,150,146,147,148,149,150,151,152,153,145,0,154,146,147,148,149,150,151,152,153,145,143,154,146,147,148,149,150,151,152,153,145,143,145,152,153,154,146,147,148,149,150,151,152,153,145,143,146,145,152,153,0,0,0,0,0,0,0,0,0,0,0,0,0,0,159,159,103,0,155,103,159,0,0,103,0,103,0,155,0,103,0,0,0,0,159,0,103,103,103,103,103,103,103,159,103,159,159,103,159,155,155,155,157,157,157,159,141,141,161,166,141,156,155,159,157,103,161,166,141,156,155,159,157,103,156,159,157,141,156,159,157,0,157,157,156,159,157,0,159,0,141,141,159,157,103,161,166,141,156,155,155,155,159,157,103,103,141,156,0,166,159,155,141,156,161,166,141,156,155,159,157,103,141,157,141,141,166,0,0,166,157,157,157,157,141,156,155,141,163,161,0,163,161,0,141,156,141,156,141,156,141,156,163,161,163,159,141,141,141,141,157,157,157,157,159,156,159,157,161,166,141,156,155,159,157,103,161,166,141,156,155,159,157,103,161,166,141,156,155,159,157,103,159,141,163,266,266,174,0,0,0,174,173,0,173,173,0,0,0,0,0,0,0,0,174,162,174,175,174,175,162,0,170,169,170,168,176,169,170,169,170,177,162,169,170,171,172,173,174,168,175,176,177,162,169,170,171,172,173,174,168,175,176,168,168,172,169,170,171,172,173,174,175,169,170,171,172,173,174,175,177,177,177,168,168,176,177,169,170,177,173,174,170,172,176,171,171,172,170,168,168,176,0,169,170,177,176,162,169,170,172,173,174,168,175,176,177,162,169,170,171,172,173,174,168,175,176,174,170,170,177,172,177,162,169,170,171,172,173,174,168,175,176,177,175,172,176,0,172,177,168,176,177,177,168,172,172,172,176,176,176,176,176,176,176,169,170,170,168,172,170,168,168,172,168,172,172,176,176,169,170,171,172,173,174,175,168,172,172,177,162,169,170,171,172,173,174,168,175,176,177,162,169,170,171,172,173,174,168,175,176,168,177,162,169,170,171,172,173,174,168,175,176,169,170,168,176,169,170,267,268,268,0,0,0,0,0,0,0,0,0,180,179,179,180,179,180,179,179,179,179,179,179,180,179,180,179,180,180,180,179,180,179,179,179,179,179,179,179,180,179,180,179,180,0,187,0,0,186,0,187,0,186,186,0,0,187,186,0,187,0,0,164,164,181,181,164,164,164,164,184,185,181,164,164,186,186,184,184,185,185,181,181,164,186,184,164,188,187,186,184,185,183,181,181,182,164,188,187,186,184,185,183,181,182,181,181,187,186,184,185,183,181,182,187,186,184,185,183,181,182,164,186,184,181,164,181,181,164,164,164,164,164,164,164,187,186,184,181,181,181,181,182,181,164,184,164,188,188,187,186,184,185,183,181,182,182,188,187,186,184,185,183,181,181,181,181,182,181,181,184,164,0,164,184,184,164,186,181,0,184,164,185,181,188,187,186,184,185,183,181,182,181,164,184,185,183,181,181,164,164,164,164,0,0,164,0,164,184,164,181,184,185,183,183,184,185,164,184,184,184,164,164,164,164,164,187,186,184,181,181,181,181,188,184,181,181,181,181,181,181,181,164,164,164,187,186,184,185,183,181,182,164,164,188,182,164,184,184,188,187,186,184,185,183,181,182,188,187,186,184,185,183,181,182,164,188,187,186,184,185,183,181,182,181,164,0,0,0,198,0,0,0,0,195,196,197,195,196,197,195,196,197,195,196,197,0,198,195,196,197,195,196,197,195,196,197,195,196,197,0,0,195,196,197,0,0,195,196,197,195,196,197,195,196,197,195,196,197,0,0,0,0,201,0,201,0,201,200,202,201,200,202,202,202,202,0,200,201,202,201,200,202,200,201,201,0,201,200,202,202,202,202,201,202,202,201,0,201,200,202,201,200,202,201,200,202,200,202,200,202,200,202,200,202,200,202,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,0,0,0,0,0,0,0,0,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,0,0,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,209,209,209,207,208,209,207,208,207,208,207,208,209,207,209,207,208,209,207,208,0,0,209,0,0,209,209,207,208,0,208,0,0,209,209,209,0,207,208,209,207,207,208,209,207,208,209,209,207,208,208,207,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,212,0,0,212,212,0,0,0,212,212,0,0,0,0,0,212,212,212,0,0,0,212,210,211,212,210,211,210,211,210,211,212,210,211,211,0,211,212,210,211,211,211,211,0,210,211,212,210,211,212,210,211,211,212,210,211,211,0,0,0,0,0,0,213,213,213,213,213,213,213,213,0,213,213,213,213,213,213,213,213,213,0,0,0,0,0,0,0,0,215,217,217,215,217,215,215,217,215,217,215,217,215,215,217,215,217,217,215,217,215,217,215,217,215,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,220,220,0,0,0,220,220,220,220,0,0,0,0,0,0,0,0,0,0,0,220,220,220,220,0,0,0,0,0,221,0,269,221,269,221,221,221,0,221,221,269,221,221,0,221,221,269,221,221,269,221,0,269,221,269,221,269,221,221,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,222,222,222,222,222,222,144,223,222,144,224,223,222,144,224,224,0,224,144,144,144,144,222,223,0,224,224,222,223,222,144,224,222,0,144,0,0,0,0,0,223,222,144,224,144,0,144,144,144,0,144,144,144,222,224,224,0,144,224,223,222,144,224,223,222,144,224,223,222,144,224,144,0,144,224,0,0,0,0,0,0,0,0,0,0,0,0,0,226,0,227,226,227,226,226,0,0,226,226,226,227,226,226,0,226,227,226,227,227,227,226,227,226,227,226,227,227,238,239,238,239,0,237,238,238,0,237,237,237,237,239,239,239,237,237,237,0,237,0,0,0,230,237,237,0,0,0,237,230,239,239,0,237,0,0,0,239,239,0,0,0,0,0,237,237,239,239,238,239,230,239,239,238,239,239,0,0,237,0,270,271,231,272,241,233,233,233,273,240,233,233,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,271,231,233,233,232,228,229,230,231,232,233,234,235,236,237,228,229,230,231,232,233,234,235,236,237,231,234,236,236,236,236,242,2,2,233,236,236,2,270,228,229,238,239,236,2,238,240,240,228,239,241,241,229,230,231,232,233,234,235,236,237,2,233,271,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,230,2,233,233,271,231,233,233,234,234,234,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,242,228,229,230,273,240,235,272,273,240,241,235,228,229,2,233,234,234,242,228,229,272,241,232,232,236,242,272,241,271,231,233,232,232,233,233,242,228,229,273,271,2,232,233,233,233,233,232,274,232,2,228,229,230,231,232,233,234,235,236,237,2,240,241,2,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,274,270,272,273,271,274,242,2,238,240,228,239,241,229,230,231,232,233,234,235,236,237,2,232,232,236,232,232,272,241,233,271,231,233,233,233,233,233,233,233,233,233,275,275,275,275,276,275,275,277,278,279,280,278,281,282,278,246,0,250,0,0,0,0,0,0,0,0,0,250,250,250,250,250,250,243,243,245,243,243,243,245,243,246,248,249,250,245,243,246,248,249,250,243,248,249,250,248,249,250,243,249,243,248,249,249,249,249,249,249,249,243,249,250,249,243,243,243,243,246,248,249,250,245,243,246,246,248,249,250,249,249,243,243,243,249,243,243,243,243,243,245,243,246,248,249,250,243,243,245,245,243,243,243,243,243,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,0,243,249,243,243,243,243,0,243,248,249,250,245,243,246,248,249,250,245,243,246,248,249,250,245,243,246,248,249,250,243,0,0,251,251,251,0,251,251,251,251,0,251,251,0,251,0,0,0,0,0,251,251,251,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,256,255,256,255,256,255,256,256,255,256,256,255,256,256,256,256,256,256,255,256,255,256,255,256,256,256,255,256,255,256,256,255,256,255,256,256,0,0,0,0,258,258,258,258,258,258,258,258,258,258,258,258,0,0,121,259,121,259,121,259,259,259,121,259,121,259,121,121,121,121,259,121,121,259,259,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,259,121,259,121,121,259,0,0,204,260,204,260,204,260,260,204,260,204,260,204,260,204,204,260,204,260,204,204,204,204,204,260,204,260,204,204,260,204],"f":[0,0,0,0,0,0,0,0,[[],1],0,0,[2,3],[[],1],0,0,0,[4,3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[5,6,7],1],[[5,8],1],[9,7],[[10,7],[[12,[1,11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,[[12,[1,11]]]],[11,11],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[9,9],[23,23],[24,24],[25,25],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[10,10],[5,5],0,[[6,16,16,17,26,7],27],[[6,[28,[16]],[28,[17]],26,7],27],[[26,7],27],[[[28,[22]],26,7],27],[[16,16,17,26,7],27],[[9,26,7],27],[[6,23,26,7],27],[[18,26,7],27],[[17,26,7],27],[[15,26,7],27],[[16,26,7],27],[[[28,[15]],26,7],27],[[13,26,7],27],0,0,[[5,6],[[29,[7]]]],[[5,6],30],0,0,0,[[11,26],27],[[13,26],27],[[13,26],27],[[14,26],27],[[15,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[[20,26],27],[[21,26],27],[[22,26],27],[[9,26],27],[[23,26],27],[[24,26],27],[[25,26],27],[[5,26],27],[[10,7],[[12,[1,11]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,[[12,[10,11]]]],[10,[[12,[31,11]]]],[10,[[12,[7,11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[32,[8,7]],[33,[8]]],5],[10,[[12,[18,11]]]],[10,[[12,[19,11]]]],[10,[[12,[20,11]]]],[10,[[12,[21,11]]]],[10,[[12,[9,11]]]],[10,[[12,[23,11]]]],[10,[[12,[24,11]]]],[10,[[12,[25,11]]]],[[[28,[31]]],[[12,[13,11]]]],[10,[[12,[[1,[31,[34,[22]]]],11]]]],[10,[[12,[8,11]]]],[10,[[12,[13,11]]]],[10,[[12,[[35,[17]],11]]]],[10,[[12,[15,11]]]],[10,[[12,[16,11]]]],[[10,30,30],[[12,[16,11]]]],[10,[[12,[16,11]]]],[10,[[12,[16,11]]]],[10,[[12,[[34,[15]],11]]]],[10,[[12,[31,11]]]],0,0,[[10,30,6],7],0,0,0,[10,7],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[10,31],[[12,[[29,[31]],11]]]],[[10,31],[[12,[[29,[31]],11]]]],[10,[[12,[[29,[8]],11]]]],[[10,31],[[12,[[29,[15]],11]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[[7,7],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,26],27],[[38,26],27],[[39,26],27],[[40,26],27],[[41,26],27],[[42,26],27],[[43,26],27],[[44,26],27],[[45,26],27],[[46,26],27],[[47,26],27],[[48,26],27],[[49,26],27],[[50,26],27],[[51,26],27],[[52,26],27],[[53,26],27],[[54,26],27],[[55,26],27],[[56,26],27],[[57,26],27],[[58,26],27],[[59,26],27],[[60,26],27],[[61,26],27],[[62,26],27],[[63,26],27],[[64,26],27],[[64,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[39,42],[39,53],[39,56],[65,40],[[31,[28,[31]]],43],[[31,[28,[31]]],57],[66,37],[67,37],[7,[[1,[39,7]]]],[2,[[12,[64,1]]]],[[[28,[31]]],-1,[]],[38,[[29,[-1]]],68],[39,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,64],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[37,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[[69,[-1]]],1,[]],[[],[[69,[-1]]],70],[-1,-1,[]],[-1,-2,[],[]],[[[69,[-1]]],[[29,[-1]]],[]],[[[69,[-1]],-1],1,[]],[[[69,[-1]],-1],1,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[69,[-1]],-1],30,[]],[-1,36,[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[71,71],[[-1,-2],1,[],[]],0,[[],71],0,[[],71],0,[[71,26],27],[-1,-1,[]],0,[[],72],[[],72],[[],72],[[],73],[[],1],0,0,[73,31],[73,65],[[71,7,31],1],0,[71,30],[-1,-2,[],[]],[72,1],[73,73],[73,-1,74],[73,74],[[73,-1],1,74],[[73,74],1],[75,1],[76,1],[77,1],0,[71,7],0,0,[[73,31],1],[[73,65],1],[[73,73],1],[71,1],0,[71,1],[[],72],[[],72],0,[72,1],[72,1],[72,1],[77,1],[77,1],[[],1],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[78,1],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[77,77],[79,79],[80,80],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[],77],[[],79],[[],80],[[],81],[[],82],[[],78],[[],79],[[],80],0,0,0,[[77,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[7,77],0,[[],77],[[],77],0,[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[82,1],[82,1],[[78,80],7],[[78,79],7],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,[31,31],0,0,0,0,0,0,0,0,0,0,0,[83,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[84,84],[85,85],[86,86],[[[87,[-1]]],[[87,[-1]]],88],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[[],84],[[],85],[[],86],[[],[[87,[-1]]],89],[84,1],[[84,72],1],0,0,0,0,0,0,0,0,0,0,[[],83],[[],[[87,[-1]]],[]],0,0,0,0,[[84,26],27],[[85,26],27],[[86,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[83,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[[87,[-1]],73],[[87,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,1],0,0,0,[[[87,[-1]],30],[[87,[-1]]],[]],[87,87],[87,87],[[[87,[-1]],72],[[87,[-1]]],[]],[[[87,[-1]],31],[[87,[-1]]],[]],[[[87,[-1]],31],[[87,[-1]]],[]],[[[87,[-1]],[29,[31]]],[[87,[-1]]],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,[31,31],0,0,0,0,0,0,0,[90,31],[[],31],[91,31],[-1,31,90],[[],31],[91,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],[[],91],[-1,-1,[]],[91,31],0,0,[91,1],[[],1],[-1,-2,[],[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,31,71],1,90],[[92,-1,31,71],1,90],[[-1,31,71,-2],1,90,[[95,[93],[[94,[93]]]]]],[[92,-1,31,71,-2],1,90,[[95,[93],[[94,[93]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[96,96],[93,93],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[],96],[[],93],0,[92,1],[[],1],[[],92],0,[84,1],0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,97],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,[64,1],[[92,64],1],[92,1],[92,1],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[97,31],30],0,0,0,0,0,0,0,0,0,0,[98,65],[99,96],[[100,65],65],[[97,65],65],0,0,0,0,0,0,[97,1],[[],1],[92,1],0,[92,1],0,0,[84,1],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[93,31],93],[[93,101],93],[[93,30],93],[[96,30],96],[[93,30],93],[[96,31],96],[[96,30],96],[[96,30],96],[[93,30],93],[[96,31],96],[[93,31],93],[[98,65],1],[[99,96],1],[[97,31,93],1],[[100,65,65],1],[[97,65,65],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[86,1],0,0,0,0,[65,72],[[65,72],1],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[102,[[12,[1,103]]]],[102,[[12,[1,103]]]],0,[[104,26],27],[-1,-1,[]],0,[[],1],[[],1],[-1,-2,[],[]],[102,6],0,0,[105,30],[[],1],[[102,72,[28,[31]]],[[12,[72,103]]]],[[[106,[102]]],1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[102,72,[28,[31]]],[[12,[72,103]]]],0,0,0,0,0,0,[[107,107],-1,[]],[[108,[106,[109]]],1],[107,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],108],[107,107],[[-1,-2],1,[],[]],[[107,107],110],0,0,[[107,107],30],[[108,26],27],[[107,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[108,[[29,[[106,[109]]]]]],[108,[[29,[[106,[109]]]]]],[109,107],[109,72],0,[64,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[109,6],0,[111,112],[111,108],[[107,107],[[29,[110]]]],[109,72],[109,30],0,0,0,0,0,[[107,107],-1,[]],0,[112,1],[108,1],[112,107],[108,107],[112,107],[108,107],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[[112,[106,[109]],111],1],0,0,0,0,0,0,0,0,0,0,0,[[113,31],1],[[114,31],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[113,113],[115,115],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[116,117],0,[114,72],[52,114],[114,72],[[],1],[115,[[0,[[119,[],[[118,[31]]]]]]]],[[113,26],27],[[115,26],27],[[116,26],27],[[120,26],27],[[114,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,[52,[[106,[[121,[114]]]]]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[113,31],30],[[115,31],30],0,0,[72,117],[114,72],0,0,0,0,0,0,[[116,117],1],[[114,30],1],[[114,30],1],[113,[[0,[[119,[],[[118,[31]]]]]]]],0,[114,[[0,[[119,[],[[118,[31]]]]]]]],[86,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[117,72],1],[[116,72],1],[[114,72],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[122,122],[[-1,-2],1,[],[]],0,[[],122],[[122,122],30],[[122,26],27],[[122,26],27],[-1,-1,[]],[-1,-1,[]],[111,122],[111,[[1,[122,31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[111,30],[111,30],0,0,[[[29,[31]]],111],[[111,31],31],0,[122,[[29,[72]]]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[123,109],1],0,[[72,72],72],[[123,72],72],[-1,-1,[]],[-1,-1,[]],[[123,109],72],[[123,109,72],124],[123,107],[123,72],[-1,-2,[],[]],[-1,-2,[],[]],[123,6],0,0,[109,[[29,[123]]]],[123,72],0,[[123,109],1],[123,30],0,[[123,72],72],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,0,0,0,0,0,[132,6],0,0,0,0,0,[[125,125],30],[[128,127,[28,[31]]],[[12,[1,31]]]],[[130,127,[28,[31]]],[[12,[1,31]]]],0,0,0,[[125,26],27],[[126,26],27],[[127,26],27],[[128,26],27],[[129,26],27],[[130,26],27],[[133,26],27],[[131,26],27],[[131,26],27],[[132,26],27],[[134,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[126,[[29,[[106,[132]]]]]],0,[84,1],[84,1],0,0,[[[29,[73]],127,105,30],[[29,[132]]]],[[[29,[73]],127,105,30],[[29,[132]]]],0,[132,1],[134,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[133,30],[133,30],[133,30],[132,30],[132,30],[133,30],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[31,128],[31,130],0,[132,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[105,135],[[29,[132]]]],[[130,31],130],[[130,73],130],[[130,65],130],0,[[127,73],31],[[127,73],31],[127,73],[[127,[28,[31]]],[[12,[1,31]]]],[127,31],[127,31],[127,31],[[132,72,[28,[31]]],[[12,[1,131]]]],[[134,72,72,[28,[31]]],[[12,[1,31]]]],[[134,72,72,[28,[31]]],[[12,[1,31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[133,65],[132,65],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],0,0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[105,30],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,[133,72],0,0,0,[127,1],[127,1],[[130,73],130],[[130,129],130],[[128,31],128],[[128,72],128],[[128,30],128],[[130,30],130],[[128,73],128],0,[[128,127],1],[[127,73,31],1],[[127,73,31],1],[[127,73],1],[[130,127],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[136,136],[137,137],[105,105],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[138,6],0,[[136,26],27],[[136,26],27],[[137,26],27],[[105,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[137,[[29,[[1,[73,72]]]]]],[137,[[29,[[1,[72,72,30]]]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],139],[65,136],[139,[[29,[-1]]],[]],[[31,31,31],[[29,[105]]]],[[105,135],[[29,[138]]]],[105,73],[[105,31],-1,74],[[31,31,31,31],-1,74],[105,73],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[105,73],1],[[105,31,-1],1,74],[[31,31,31,31,-1],1,74],[[105,73],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[140,[[12,[1,103]]]],0,[140,[[12,[1,103]]]],[[],[[1,[141,141]]]],[[142,26],27],[[140,26],27],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[140,6],[[140,72,[28,[31]]],[[12,[72,103]]]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[[140,72,[28,[31]]],[[12,[72,103]]]],0,0,[[143,141,144],[[12,[[1,[7,7]],103]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[145,72],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[145,145],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[150,72],0,0,[143,72],[145,72],0,0,[145,65],0,0,0,0,[[154,26],27],[[146,26],27],[[147,26],27],[[148,26],27],[[150,26],27],[[151,26],27],[[152,26],27],[[153,26],27],[[145,26],27],[[143,26],27],[-1,-1,[]],[103,154],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[65,151],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[150,30],[150,30],[150,30],[[141,30,72],[[12,[145,154]]]],[141,[[12,[143,154]]]],0,0,[145,72],0,0,[145,72],0,0,[145,72],0,0,0,[150,72],0,0,[150,72],0,0,[150,72],0,0,[143,[[28,[145]]]],0,0,0,0,[150,72],0,0,0,0,[150,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[65,72],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[145,151],0,0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[145,72],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[155,[[12,[156,103]]]],[155,[[12,[141,103]]]],[155,[[12,[141,103]]]],[157,158],[157,159],0,[[159,159],-1,[]],[141,160],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[156,156],[159,159],[157,157],[141,141],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[7,[[12,[1,103]]]],[157,[[29,[[106,[102]]]]]],0,0,0,[157,1],[[],[[106,[161]]]],[[159,159],30],0,[141,72],0,[[159,26],27],[[157,26],27],[[103,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[156,155],[141,155],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[162,103],[-1,-1,[]],[[157,-1,[106,[163]],72,160],[[12,[141,103]]],[[165,[164]]]],[[157,-1,[106,[163]],72],[[12,[156,103]]],[[165,[164]]]],[164,[[12,[[1,[164,[106,[163]]]],103]]]],[[166,164],[[12,[[1,[164,[106,[163]]]],103]]]],0,[155,157],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[141,30],[157,30],[141,30],0,0,0,[[6,[106,[163]]],1],[[166,-1,[106,[163]]],1,[[165,[164]]]],[157,6],0,[[8,159,[29,[[106,[102]]]]],157],[[8,159,72,72],157],[-1,[[12,[141,103]]],[[165,[164]]]],[-1,[[12,[156,103]]],[[165,[164]]]],[-1,[[12,[155,103]]],[[165,[164]]]],[[-1,160],[[12,[141,103]]],[[165,[164]]]],[[163,164],[[12,[[34,[157]],103]]]],[[161,164],[[12,[[34,[157]],103]]]],[-1,[[12,[[1,[[106,[163]],157]],103]]],[[165,[164]]]],[163,[[12,[157,103]]]],[161,[[12,[157,103]]]],0,[141,164],[156,164],0,0,0,0,[[141,[28,[31]]],[[12,[72,103]]]],[[156,[28,[167]]],[[12,[7,103]]]],[[163,157],[[12,[[34,[157]],103]]]],[[161,157],[[12,[[34,[157]],103]]]],[[163,157,72,[28,[31]]],[[12,[72,103]]]],0,[141,[[12,[[34,[31]],103]]]],[[141,72],[[12,[1,103]]]],[[141,160],1],[[141,30],1],[157,72],0,[157,72],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[141,[28,[31]]],[[12,[72,103]]]],[[163,157,72,[28,[31]]],[[12,[72,103]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,65],[168,73],0,[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[168,65],[168,65],0,0,0,0,0,[[173,173],30],[[174,174],30],0,0,0,0,0,0,0,[168,65],[168,65],[176,173],[31,159],0,0,0,[[176,65],65],[[162,26],27],[[169,26],27],[[170,26],27],[[172,26],27],[[173,26],27],[[174,26],27],[[168,26],27],[[175,26],27],[[176,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[173,65],174],0,0,[177,[[12,[[28,[31]],103]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[175,176],[[12,[177,103]]]],0,[176,[[12,[1,103]]]],[[126,65,65],[[12,[176,103]]]],0,[[176,175],[[12,[177,103]]]],[[172,65],[[12,[168,162]]]],[[65,65,168,[106,[132]]],[[12,[176,103]]]],[177,[[29,[-1]]],[]],[177,[[12,[30,103]]]],[168,31],0,0,0,[[176,164],[[12,[177,103]]]],[[176,157],[[12,[177,103]]]],[176,[[12,[175,103]]]],[176,[[12,[157,103]]]],[[176,65],174],[[176,157,65,[28,[31]]],[[12,[72,103]]]],[[176,65,65],[[12,[[34,[31]],103]]]],0,0,0,[168,73],0,0,[168,65],[168,65],0,[168,31],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[168,65],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,[168,[[178,[31]]]],[176,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[[-1,-2],1,[],[]],0,0,0,[[179,26],27],[[180,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[180,30],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[164,164],30],[[164,164],181],[[181,164],1],[[181,6],1],[[164,164],30],[[164,164],[[12,[164,182]]]],[[164,6],181],[164,183],[184,164],[185,164],[181,164],[164,164],[164,6],[186,6],[186,164],[184,6],[184,164],[185,164],[185,6],[181,164],[181,6],[164,6],[186,6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,164],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,7],[181,1],[187,187],[186,186],[184,184],[185,185],[183,183],[181,181],[182,182],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[164,164],110],[[186,186],110],[[184,184],110],[[181,181],110],[164,184],[[],181],[181,164],[164,188],[[164,-1],30,[[165,[164]]]],[[164,164],30],[[164,181],30],[[164,181],30],[[164,[189,[164]]],30],[[164,[189,[164]]],30],[[187,187],30],[[186,186],30],[[184,184],30],[[181,164],30],[[181,[189,[164]]],30],[[181,164],30],[[181,181],30],[[182,182],30],[[181,-2],1,[[165,[164]]],[[190,[],[[118,[-1]]]]]],[164,[[29,[6]]]],[184,30],[[164,26],27],[[188,26],27],[[188,26],27],[[187,26],27],[[186,26],27],[[184,26],27],[[185,26],27],[[183,26],27],[[181,26],27],[[182,26],27],[[182,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,181,[191,[165,[6]]]],[[[189,[164]]],181],[-1,-1,[]],[8,181],[-1,-1,[]],[-2,181,[[165,[164]]],[[190,[],[[118,[-1]]]]]],[6,[[12,[181,-1]]],[]],0,[164,30],[6,30],[164,30],[184,30],0,[[164,-1],1,192],[[186,-1],1,192],[[181,-1],1,192],0,[184,30],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,[[35,[164]]]],[164,185],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[181,185],[181,8],[164,30],[164,30],[164,30],[164,30],[193,30],[31,30],[164,185],[[-1,-2],[[29,[-1]]],[[119,[],[[118,[186]]]],88],[[119,[],[[118,[186]]]]]],[[164,-1],181,[[165,[164]]]],[184,7],[-1,164,[[165,[6]],191]],[[],181],[184,[[29,[186]]]],[185,[[29,[-1]]],[]],[183,[[29,[-1]]],[]],0,[184,[[29,[186]]]],[185,[[29,[-1]]],[]],[164,[[29,[164]]]],[184,[[1,[7,[29,[186]]]]]],[184,[[1,[7,[29,[186]]]]]],[[184,6],[[29,[186]]]],[[164,[189,[164]]],[[29,[110]]]],[[164,181],[[29,[110]]]],[[164,181],[[29,[110]]]],[[164,[189,[164]]],[[29,[110]]]],[[164,164],[[29,[110]]]],[[187,187],[[29,[110]]]],[[186,186],[[29,[110]]]],[[184,184],[[29,[110]]]],[[181,164],[[29,[110]]]],[[181,164],[[29,[110]]]],[[181,[189,[164]]],[[29,[110]]]],[[181,181],[[29,[110]]]],0,0,[181,30],[[181,-1],1,[[165,[164]]]],[[181,7],1],[[181,7],1],[[181,-1],1,[[165,[6]]]],[[181,7],1],[181,1],[[164,-1],30,[[165,[164]]]],[[164,-1],[[12,[164,182]]],[[165,[164]]]],[164,181],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[164,181],[164,[[29,[6]]]],[-1,8,[]],[-1,8,[]],[164,[[189,[6]]]],[184,1],[184,1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[7,181],[[164,-1],181,[[165,[6]]]],0,0,0,0,0,0,[194,1],[194,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[195,[-1]]],[[195,[-1]]],88],[[[196,[-1]]],[[196,[-1]]],88],[[[197,[-1]]],[[197,[-1]]],88],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,[[[198,[],[[118,[-1]]]]],[[28,[-1]]],[]],[[[195,[-1]]],-2,[],[]],[[[196,[-1]]],-2,[],[]],[[[197,[-1]]],-2,[],[]],[[[195,[-1]]],-2,[],[]],[[[196,[-1]]],-2,[],[]],[[[197,[-1]]],-2,[],[]],[[[195,[-1]],26],27,[]],[[[196,[-2]],26],27,199,[[198,[],[[118,[-1]]]]]],[[[197,[-1]],26],27,[[165,[[28,[31]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[28,[31]]],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[30,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],1],[[],200],[[],201],[[202,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[200,1],[201,1],[201,1],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[201,[[29,[[106,[[204,[[203,[202]]]]]]]]]],[200,202],[[202,[28,[31]]],7],[[201,-2],-1,[],[[206,[205],[[94,[-1]]]]]],[-2,-1,[],[[206,[205],[[94,[-1]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,0,[[200,[28,[31]]],7],[[202,[28,[31]]],7],[[200,31],1],[[202,31],1],[[200,6],27],[[202,6],27],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[207,207],[208,208],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[],209],[[207,207],30],[[209,26],27],[[207,26],27],[[208,26],27],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],[[106,[[121,[209]]]]]],[31,[[29,[31]]]],[209,[[29,[208]]]],[31,[[29,[31]]]],[[],1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[31,30],0,[84,1],0,[209,31],[209,31],[209,31],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[31,[[12,[207,-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[209,[[29,[208]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[[207,30],[[29,[31]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[210,210],[211,211],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[211,1],[210,30],[211,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[210,211],0,[[210,212],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[211,[[29,[31]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[211,31],1],[[210,212,31],1],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[213,1],[[213,7],1],[213,213],[[-1,-2],1,[],[]],[213,1],[-1,-1,[]],[[[1,[7,7]]],214],[213,1],[-1,-2,[],[]],[[],213],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[213,31,31],1],0,0,0,0,0,0,0,0,[[215,216],31],[[217,7],[[29,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[215,31,216],1],[[217,7],30],[[],215],[-1,-1,[]],[-1,-1,[]],0,[[],[[121,[[218,[217]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],217],[215,219],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[7,7],7],[[7,7,7],[[1,[7,7,7]]]],[[7,7],7],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],0,[[220,26],27],[[220,26],27],[-1,-1,[]],[-1,-2,[],[]],[[7,7],30],[[],7],[[],7],[[],7],[[],7],[[],7],[7,7],0,0,[[],7],0,[-1,8,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[7,7],0,0,0,[[],31],[221,31],[[],31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],221],0,[31,1],[[221,31],1],0,[-1,-1,[]],[-1,-1,[]],0,[2,1],[[221,2],1],[[221,31,31],1],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],[[1,[7,7]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[144,1],[[],222],[222,223],[222,72],[222,223],[222,223],[222,72],[[],144],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[224,224],[[],144],[[-1,-2],1,[],[]],[144,144],[[144,-1],1,[[206,[72]]]],[[144,-1],1,[[206,[72]]]],[[144,-1,-2,-3],1,[[225,[7]]],[[225,[7]]],[[206,[72]]]],[72,223],0,0,0,[[224,26],27],[222,1],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,222],[[],144],[[],144],[72,72],[72,72],[72,72],[72,72],[[],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[144,72],30],[72,30],0,[222,1],[[144,224],1],[224,1],[[],144],[[],144],0,0,0,0,[[],1],[144,1],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[[144,224,30],1],[[224,30],1],[144,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[226,72,72],72],[[72,72],72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[226,72,72],1],[[72,72],1],[[],1],[226,1],[[],226],0,[-1,-1,[]],[-1,-1,[]],[[226,72,72],[[29,[[1,[227,30]]]]]],[[72,72],72],[[226,72,72],72],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[[227,72],[[29,[72]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,0,0,0,[2,31],[2,[[28,[31]]]],0,0,0,[2,72],0,0,0,[[238,238],30],[[239,239],30],0,[[2,26],27],[[238,26],27],[[240,26],27],[[240,26],27],[[228,26],27],[[239,26],27],[[241,26],27],[[241,26],27],[[229,26],27],[[230,26],27],[[231,26],27],[[232,26],27],[[233,26],27],[[234,26],27],[[235,26],27],[[236,26],27],[[237,26],27],[2,[[29,[231]]]],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[31,[28,[31]]],230],[2,[[29,[37]]]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[230,30],0,0,0,0,0,0,0,0,0,0,[2,[[29,[[0,[[119,[],[[118,[240]]]]]]]]]],0,0,0,[242,[[29,[-1]]],[]],[228,[[29,[-1]]],[]],[229,[[29,[-1]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[2,242],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[2,[[29,[234]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[243,72,244],1],[[243,214],[[29,[7]]]],[245,72],[[72,143,141,[34,[8]],156],[[12,[243,246]]]],0,[[243,7,-1],30,[[247,[155]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[248,248],[249,249],[250,250],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,[[],248],[[],249],0,0,0,0,0,0,[243,1],0,[[250,250],30],0,[[243,244],1],0,0,[243,1],[[246,26],27],[[248,26],27],[[249,26],27],[[250,26],27],[-1,-1,[]],[-1,-1,[]],[103,246],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[[243,72],[[29,[244]]]],[243,156],[[243,7],[[29,[155]]]],0,0,0,0,[243,72],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[243,72],30],[[144,[28,[8]],72,72],[[1,[72,72,72]]]],[[],245],0,0,[243,72],0,[[243,-1],7,[[247,[155]]]],[[243,7,155],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[243,156],1],0,0,0,0,[243,1],0,[[243,7],[[29,[155]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[244,86],1],[-1,-1,[]],[251,1],0,[-1,-2,[],[]],[72,30],[[],251],0,[243,1],[[251,243],1],[[],3],[86,1],[[107,86],1],[[249,86],1],[86,1],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[[86,72],30],[-2,-1,[],[[95,[243],[[94,[-1]]]]]],[86,1],0,0,[[31,7],[[12,[1,252]]]],[86,1],[164,[[189,[164]]]],[[31,7],[[12,[[28,[253]],252]]]],[[31,7],[[12,[[28,[-1]],252]]],191],[31,[[12,[164,252]]]],[[31,7],[[12,[[28,[-1]],252]]],191],[31,[[12,[6,252]]]],[31,[[12,[[34,[8]],252]]]],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],[86,254],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[255,-1],1,95],[[[256,[-1]]],[[256,[-1]]],88],[[-1,-2],1,[],[]],[[],255],[[[256,[-1]]],1,[]],[[[256,[-1]],26],27,257],[-1,-1,[]],[-1,-1,[]],[[[256,[-1]]],-1,[]],[[[256,[-1]],-2],-1,[],[[95,[],[[94,[-1]]]]]],[[[256,[-1]],-3],[[12,[-1,-2]]],[],[],[[95,[],[[94,[[12,[-1,-2]]]]]]]],[[[256,[-1]]],-1,[]],[[[256,[-1]],-3],[[12,[1,-2]]],[],[],[[95,[],[[94,[[12,[-1,-2]]]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[255,30],[[[256,[-1]]],30,[]],[[],255],[[],[[256,[-1]]],[]],0,[[[256,[-1]],-1],[[12,[1,-1]]],[]],0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[256,[-1]]],[[29,[-1]]],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-2,[],[]],[258,1],0,[[],258],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[258,30],[-1,36,[]],[258,1],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[259,[-1]]],-2,[],[]],[[[259,[-1]]],-2,[],[]],[[[259,[-1]]],1,191],[[[121,[-1]],26],27,257],[[[259,[-1]],26],27,257],[-1,-1,[]],[-1,-1,[]],[[[121,[-1]]],-1,[]],[[[121,[114]]],107],[[[121,[114]]],72],[-1,-2,[],[]],[-1,-2,[],[]],[[[121,[-1]]],[[259,[-1]]],[]],0,0,0,[[[121,[114]]],6],[-1,[[121,[-1]]],[]],[[[121,[104]],164],[[12,[[34,[157]],103]]]],[[[121,[176]],164],[[12,[[34,[157]],103]]]],[[[121,[176]]],[[12,[157,103]]]],[[[121,[104]]],[[12,[157,103]]]],0,[[[121,[114]]],72],[[[121,[176]],157],[[12,[[34,[157]],103]]]],[[[121,[104]],157],[[12,[[34,[157]],103]]]],[[[121,[176]],157,72,[28,[31]]],[[12,[72,103]]]],[[[121,[114]]],30],[[[121,[-1]],-3],-2,[],[],[[95,[-1],[[94,[-2]]]]]],[[[121,[-1]],-3],-2,[],[],[[95,[-1],[[94,[-2]]]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[121,[-1]]],[[29,[[259,[-1]]]]],[]],[-1,36,[]],[-1,36,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[260,[-1]]],-2,[],[]],[[[260,[-1]]],1,[]],[[[204,[-1]],26],27,257],[[[260,[-1]],26],27,257],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[204,[-1]]],[[260,[-1]]],[]],0,0,0,0,[[[204,[[203,[202]]]]],6],[-1,[[204,[-1]]],[]],0,[[[204,[[203,[202]]]],72,[28,[31]]],[[12,[72,103]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[[[204,[-1]]],[[29,[[260,[-1]]]]],[]],[-1,36,[]],[-1,36,[]],[[[204,[[203,[202]]]],72,[28,[31]]],[[12,[72,103]]]]],"c":[],"p":[[1,"tuple"],[5,"MultiBoot2Info",3997],[1,"never"],[5,"PanicInfo",4733],[5,"State",24],[1,"str"],[1,"usize"],[5,"String",4734],[5,"MethodObj",24],[5,"Parser",24],[6,"AmlParseError",24],[6,"Result",4735],[5,"AmlCode",24],[6,"DataObject",24],[6,"AmlTerm",24],[6,"TermArg",24],[6,"Target",24],[5,"ScopeObj",24],[5,"RegionObj",24],[5,"FieldDef",24],[5,"IndexFieldDef",24],[6,"FieldElement",24],[5,"PredicateBlock",24],[5,"ProcessorDeprecated",24],[5,"PowerResource",24],[5,"Formatter",4736],[8,"Result",4736],[1,"slice"],[6,"Option",4737],[1,"bool"],[1,"u8"],[5,"BTreeMap",4738],[5,"BTreeSet",4739],[5,"Vec",4740],[5,"Box",4741],[5,"TypeId",4742],[5,"Rsdp",416],[5,"Rsdt",416],[5,"DescriptionHeader",416],[5,"DescriptorTable",416],[6,"DescriptorTableBody",416],[5,"Apic",416],[6,"InterruptControllerStruct",416],[5,"ProcessorLocalApic",416],[5,"IoApic",416],[5,"InterruptSourceOverride",416],[5,"NonMaskableInterrupt",416],[5,"LocalApicNmi",416],[5,"LocalApicAddressOverride",416],[5,"Facp",416],[5,"ApicGenericAddress",416],[5,"Hpet",416],[5,"Xsdt",416],[5,"Bgrt",416],[5,"Waet",416],[5,"Srat",416],[6,"StaticResourceAffinity",416],[5,"ProcessorLocalAcpiAffinity",416],[5,"MemoryAffinity",416],[5,"ProcessorLocalX2ApicAffinity",416],[5,"GiccAffinity",416],[5,"GicInterruptTranslationServiceAffinity",416],[5,"GenericInitiatorAffinity",416],[5,"BiosTables",416],[1,"u32"],[5,"RsdpV1",416],[5,"RsdpV2",416],[10,"Any",4742],[5,"RingBuffer",982],[10,"Copy",4743],[5,"Cpu",999],[1,"u64"],[1,"u16"],[10,"IoPortInt",999],[5,"GlobalDescriptorTablePointer",1067],[5,"InterruptDescriptorTablePointer",1193],[5,"SegmentSelector",1067],[5,"GlobalDescriptorTable",1067],[5,"UserDescriptorEntry",1067],[5,"SystemDescriptorEntry",1067],[5,"TaskStateSegment",1067],[5,"GlobalDescriptorManager",1067],[5,"InterruptDescriptorTable",1193],[5,"InterruptStackFrame64",1193],[5,"RestSavedRegisters",1193],[5,"InterruptAllSavedState",1193],[5,"InterruptDescriptorTableEntry",1193],[10,"Clone",4744],[10,"Default",4745],[10,"InterruptHandler",1357],[5,"Interrupts",1357],[5,"Apic",1388],[5,"IoApicRedirectionBuilder",1388],[17,"Output"],[10,"FnOnce",4746],[5,"LocalVectorRegisterBuilder",1388],[5,"IoApic",1388],[5,"ApicReg",1388],[5,"LocalVectorRegister",1388],[5,"IoApicMmio",1388],[6,"DestinationType",1388],[10,"Device",1594],[6,"FileSystemError",2653],[5,"Devices",1594],[5,"PciDeviceConfig",2253],[5,"Arc",4747],[5,"ClockTime",1622],[5,"Clock",1622],[10,"ClockDevice",1622],[6,"Ordering",4748],[5,"Rtc",1805],[5,"SystemTime",1622],[5,"HpetInterruptStatus",1691],[5,"Hpet",1691],[5,"InterruptRouteCapabilityBitmap",1691],[5,"HpetTimerMmio",1691],[5,"HpetTimerConfig",1691],[17,"Item"],[10,"Iterator",4749],[5,"HpetMmio",1691],[5,"Mutex",4657],[5,"RtcTime",1805],[5,"Tsc",1859],[5,"SyncPoint",1859],[6,"IdeDeviceType",1893],[5,"IdeDeviceIndex",1893],[5,"IdeIo",1893],[5,"AtaCommand",1893],[6,"AtapiDmaDirection",1893],[5,"AtapiPacketCommand",1893],[6,"IdeError",1893],[5,"IdeDevice",1893],[5,"CommandIdentifyDataRaw",1893],[5,"IdeDeviceImpl",1893],[5,"PropeExtra",2253],[6,"PciDeviceType",2253],[6,"PciBar",2253],[10,"PciDevice",2253],[5,"PciDevicePropeIterator",2253],[5,"PipeSide",2389],[5,"File",2653],[5,"InnerPipe",2389],[5,"Elf",2421],[5,"VirtualMemoryMapper",3865],[6,"ElfProgram",2421],[5,"ElfHeaderBase",2421],[5,"ElfHeader32",2421],[5,"ElfHeader64",2421],[20,"ElfHeaderUnion",2421],[5,"ElfHeader",2421],[6,"ElfProgramType",2421],[5,"ElfProgram32",2421],[5,"ElfProgram64",2421],[6,"ElfLoadError",2421],[6,"FilesystemNode",2653],[5,"Directory",2653],[5,"INode",2653],[5,"FileStat",4750],[5,"FileAttributes",2653],[6,"BlockingMode",4750],[5,"EmptyFileSystem",2653],[6,"FatError",2836],[10,"FileSystem",2653],[5,"Path",3103],[10,"AsRef",4751],[5,"FileSystemMapping",2653],[5,"DirEntry",4750],[5,"FatBootSector",2836],[5,"Fat12_16ExtendedBootSector",2836],[5,"Fat32ExtendedBootSector",2836],[20,"FatExtendedBootSector",2836],[5,"FatBootSectorRaw",2836],[6,"FatType",2836],[6,"FatEntry",2836],[6,"Directory",2836],[5,"FatFilesystem",2836],[5,"DirectoryIterator",2836],[1,"array"],[5,"PartitionEntry",3068],[5,"MbrRaw",3068],[5,"PathBuf",3103],[5,"StripPrefixError",3103],[5,"Ancestors",3103],[5,"Components",3103],[5,"Iter",3103],[6,"Component",3103],[6,"State",3103],[5,"Display",3103],[6,"Cow",4752],[10,"IntoIterator",4753],[10,"Sized",4743],[10,"Hasher",4754],[1,"char"],[5,"Arguments",4736],[5,"NoDebug",3345],[5,"HexArray",3345],[5,"ByteStr",3345],[10,"ArrayTrait",3345],[10,"UpperHex",4736],[5,"EarlyConsole",3400],[6,"Console",3400],[5,"LateConsole",3400],[5,"RefCell",4755],[5,"ReMutex",4701],[10,"Write",4736],[10,"FnMut",4746],[6,"KeyType",3456],[5,"Key",3456],[5,"Keyboard",3456],[6,"UartPort",3660],[5,"Uart",3660],[6,"UartReg",3660],[5,"VgaBuffer",3719],[1,"isize"],[5,"LockedKernelHeapAllocator",3747],[5,"Layout",4756],[5,"PageAllocator",3747],[5,"HeapAllocator",4757],[5,"HeapStats",4758],[5,"MemSize",3775],[5,"PhysicalPageAllocator",3831],[5,"PageDirectoryTablePtr",3865],[5,"PageDirectoryTable",3865],[5,"VirtualMemoryMapEntry",3865],[10,"RangeBounds",4759],[5,"VirtualSpaceAllocator",3965],[5,"VirtualSpaceEntry",3965],[5,"MemoryMapIter",3997],[5,"EfiMemoryMapIter",3997],[6,"FramebufferColorInfo",3997],[5,"Framebuffer",3997],[5,"VbeControlInfo",3997],[5,"VbeModeInfo",3997],[5,"VbeInfo",3997],[5,"BasicMemoryInfo",3997],[5,"AdvancedPowerManagementTable",3997],[6,"MultiBootTag",3997],[6,"MemoryMapType",3997],[6,"EfiMemoryMapType",3997],[5,"MemoryMap",3997],[5,"EfiMemoryMap",3997],[5,"MultiBootTagIter",3997],[5,"Process",4394],[1,"i32"],[5,"GoingUpAllocator",4394],[6,"ProcessError",4394],[10,"Into",4751],[5,"FxSave",4394],[5,"ProcessContext",4394],[6,"ProcessState",4394],[5,"Scheduler",4542],[6,"SyscallArgError",4760],[5,"SpawnFileMapping",4761],[8,"SyscallResult",4760],[5,"Once",4600],[5,"OnceLock",4600],[10,"Debug",4736],[5,"Lock",4644],[5,"MutexGuard",4657],[5,"ReMutexGuard",4701],[15,"Unknown",977],[15,"Unknown",979],[5,"ApicMmio",1388],[15,"Memory",2367],[15,"Io",2367],[15,"DiskReadError",2834],[15,"Normal",3058],[15,"RootFat12_16",3058],[5,"FreePage",3831],[5,"MemoryMapTagRaw",3997],[5,"FramebufferRaw",3997],[5,"EfiMemoryMapsRaw",3997],[5,"MemoryMapsRaw",3997],[5,"MultiBootTagRaw",3997],[15,"Rgb",4379],[15,"Indexed",4379],[15,"ImageLoadBasePhysical",4386],[15,"BiosBootDevice",4386],[15,"BootCommandLine",4386],[15,"BootLoaderName",4386],[15,"Efi64SystemTablePtr",4386],[15,"Efi64ImageHandle",4386]],"b":[[241,"impl-Display-for-AmlCode"],[242,"impl-Debug-for-AmlCode"],[668,"impl-Display-for-BiosTables"],[669,"impl-Debug-for-BiosTables"],[1318,"impl-InterruptDescriptorTableEntry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame64)%3E"],[1319,"impl-InterruptDescriptorTableEntry%3Cextern+%22x86-interrupt%22+fn(InterruptStackFrame64,+u64)%3E"],[1833,"impl-Display-for-RtcTime"],[1834,"impl-Debug-for-RtcTime"],[1980,"impl-Debug-for-IdeError"],[1981,"impl-Display-for-IdeError"],[2311,"impl-Debug-for-PciDeviceType"],[2312,"impl-Display-for-PciDeviceType"],[2738,"impl-From%3CDirectory%3E-for-FilesystemNode"],[2739,"impl-From%3CFile%3E-for-FilesystemNode"],[3132,"impl-AsRef%3CPath%3E-for-Path"],[3133,"impl-AsRef%3Cstr%3E-for-Path"],[3134,"impl-AsRef%3Cstr%3E-for-Component%3C\'_%3E"],[3135,"impl-AsRef%3CPath%3E-for-Component%3C\'_%3E"],[3136,"impl-AsRef%3Cstr%3E-for-Components%3C\'_%3E"],[3137,"impl-AsRef%3CPath%3E-for-Components%3C\'_%3E"],[3138,"impl-AsRef%3CPath%3E-for-Iter%3C\'_%3E"],[3139,"impl-AsRef%3Cstr%3E-for-Iter%3C\'_%3E"],[3140,"impl-AsRef%3CPath%3E-for-PathBuf"],[3141,"impl-AsRef%3Cstr%3E-for-PathBuf"],[3189,"impl-PartialEq-for-Path"],[3190,"impl-PartialEq%3CPathBuf%3E-for-Path"],[3191,"impl-PartialEq%3CPathBuf%3E-for-%26Path"],[3192,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-Path"],[3193,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-%26Path"],[3197,"impl-PartialEq%3C%26Path%3E-for-PathBuf"],[3198,"impl-PartialEq%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3199,"impl-PartialEq%3CPath%3E-for-PathBuf"],[3200,"impl-PartialEq-for-PathBuf"],[3206,"impl-Debug-for-Display%3C\'_%3E"],[3207,"impl-Display-for-Display%3C\'_%3E"],[3214,"impl-Display-for-StripPrefixError"],[3215,"impl-Debug-for-StripPrefixError"],[3222,"impl-From%3C%26T%3E-for-PathBuf"],[3223,"impl-From%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3225,"impl-From%3CString%3E-for-PathBuf"],[3280,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-%26Path"],[3281,"impl-PartialOrd%3CPathBuf%3E-for-%26Path"],[3282,"impl-PartialOrd%3CPathBuf%3E-for-Path"],[3283,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-Path"],[3284,"impl-PartialOrd-for-Path"],[3288,"impl-PartialOrd%3C%26Path%3E-for-PathBuf"],[3289,"impl-PartialOrd%3CPath%3E-for-PathBuf"],[3290,"impl-PartialOrd%3CCow%3C\'a,+Path%3E%3E-for-PathBuf"],[3291,"impl-PartialOrd-for-PathBuf"],[3811,"impl-Display-for-MemSize"],[3812,"impl-Debug-for-MemSize"],[4159,"impl-Display-for-MemoryMap"],[4160,"impl-Debug-for-MemoryMap"],[4163,"impl-Debug-for-EfiMemoryMap"],[4164,"impl-Display-for-EfiMemoryMap"],[4682,"impl-FileSystem-for-Mutex%3CDevices%3E"],[4683,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4684,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4685,"impl-FileSystem-for-Mutex%3CDevices%3E"],[4688,"impl-FileSystem-for-Mutex%3CFatFilesystem%3E"],[4689,"impl-FileSystem-for-Mutex%3CDevices%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
