(function() {var implementors = {
"embedded_graphics":[["impl&lt;C, BO&gt; <a class=\"trait\" href=\"embedded_graphics/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"embedded_graphics/image/struct.ImageRaw.html\" title=\"struct embedded_graphics::image::ImageRaw\">ImageRaw</a>&lt;'_, C, BO&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"embedded_graphics/pixelcolor/trait.PixelColor.html\" title=\"trait embedded_graphics::pixelcolor::PixelColor\">PixelColor</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;C as <a class=\"trait\" href=\"embedded_graphics/pixelcolor/trait.PixelColor.html\" title=\"trait embedded_graphics::pixelcolor::PixelColor\">PixelColor</a>&gt;::<a class=\"associatedtype\" href=\"embedded_graphics/pixelcolor/trait.PixelColor.html#associatedtype.Raw\" title=\"type embedded_graphics::pixelcolor::PixelColor::Raw\">Raw</a>&gt;,\n    BO: <a class=\"trait\" href=\"embedded_graphics/pixelcolor/raw/trait.ByteOrder.html\" title=\"trait embedded_graphics::pixelcolor::raw::ByteOrder\">ByteOrder</a>,</div>"],["impl&lt;C, R, BO, const WIDTH: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>, const HEIGHT: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embedded_graphics/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"embedded_graphics/framebuffer/struct.Framebuffer.html\" title=\"struct embedded_graphics::framebuffer::Framebuffer\">Framebuffer</a>&lt;C, R, BO, WIDTH, HEIGHT, N&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"embedded_graphics/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"embedded_graphics/image/struct.SubImage.html\" title=\"struct embedded_graphics::image::SubImage\">SubImage</a>&lt;'_, T&gt;"],["impl&lt;T&gt; <a class=\"trait\" href=\"embedded_graphics/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"embedded_graphics/draw_target/struct.Cropped.html\" title=\"struct embedded_graphics::draw_target::Cropped\">Cropped</a>&lt;'_, T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"embedded_graphics/draw_target/trait.DrawTarget.html\" title=\"trait embedded_graphics::draw_target::DrawTarget\">DrawTarget</a>,</div>"],["impl&lt;C&gt; <a class=\"trait\" href=\"embedded_graphics/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"embedded_graphics/mock_display/struct.MockDisplay.html\" title=\"struct embedded_graphics::mock_display::MockDisplay\">MockDisplay</a>&lt;C&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"embedded_graphics/pixelcolor/trait.PixelColor.html\" title=\"trait embedded_graphics::pixelcolor::PixelColor\">PixelColor</a>,</div>"]],
"kernel":[["impl <a class=\"trait\" href=\"embedded_graphics_core/geometry/trait.OriginDimensions.html\" title=\"trait embedded_graphics_core::geometry::OriginDimensions\">OriginDimensions</a> for <a class=\"struct\" href=\"kernel/io/console/vga_graphics/struct.VgaGraphics.html\" title=\"struct kernel::io::console::vga_graphics::VgaGraphics\">VgaGraphics</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()