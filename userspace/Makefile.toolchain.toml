[env]
# set to `false` if its not set
# so that the below `env_false` condition works
NO_TOOLCHAIN_BUILD = { value = "false", condition = { env_not_set = ["NO_TOOLCHAIN_BUILD"] } }

[tasks.copy_config_toml]
workspace = false
condition= {files_modified = {input=["${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/toolchain/config.toml"], output=["${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/rust/config.toml"]}}
cwd = "../extern/rust"
command = "cp"
args = ["${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/toolchain/config.toml",
        "${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/rust/config.toml"]

[tasks.build_user_toolchain]
workspace = false
condition= { env_false = ["NO_TOOLCHAIN_BUILD"], files_modified = {input=["${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/rust/library/std/**/*"], output=["${CARGO_MAKE_CURRENT_TASK_INITIAL_MAKEFILE_DIRECTORY}/../extern/rust/build/host/stage2-std/x86_64-unknown-emerald/release/.libstd.stamp"]}}
dependencies = ["copy_config_toml"]
cwd = "../extern/rust"
command = "python"
args = ["x.py", "build", "-i", "--stage", "2", "rustfmt", "library/std"]

[tasks.install_user_toolchain]
workspace = false
dependencies = ["copy_config_toml"]
cwd = "../extern/rust"
command = "python"
args = ["x.py", "install", "rustfmt", "rustc", "library/std"]

[tasks.dist_user_toolchain]
workspace = false
dependencies = ["copy_config_toml"]
cwd = "../extern/rust"
command = "python"
args = ["x.py", "dist", "rustfmt", "rustc", "library/std"]
