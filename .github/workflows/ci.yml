# We could use `@actions-rs/cargo` Action ability to automatically install `cross` tool
# in order to compile our application for some unusual targets.

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

name: OS Build checks

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - run: >
          sudo apt update -y &&
          sudo apt install -y xorriso mtools grub-pc-bin qemu-system-x86
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-01-04
          components: rust-src
      - uses: davidB/rust-cargo-make@v1
      - uses: actions/checkout@v2
        with:
          submodules: 'false'
      - name: submodule fetch
        run: git submodule update --init --recursive
      - name: Build kernel
        run: cargo make kernel_iso
      - name: Restore cached rust build
        id: cache-os-rust-restore
        uses: actions/cache/restore@v4
        with:
          path: extern/rust/build
          key: ${{ runner.os }}-rust-build-toolchain
      - name: Build filesystem programs
        run: cargo make filesystem
      - name: Save cache rust build
        id: cache-os-rust-save
        uses: actions/cache/save@v4
        with:
          path: extern/rust/build
          key: ${{ steps.cache-os-rust-restore.outputs.cache-primary-key }}

