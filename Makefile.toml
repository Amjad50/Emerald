[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
PROFILE = { source = "${CARGO_MAKE_CARGO_PROFILE}", default_value = "dev", mapping = {"dev" = "debug", "release" = "release" } }
FILESYSTEM_PATH = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/filesystem"
ISO_PATH = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/${PROFILE}/kernel.iso"
QEMU_ARGS = "-serial mon:stdio -m 512 -boot d -drive format=raw,file=fat:rw:filesystem"
# UEFI_IMAGE = "" # external: change to a path to a UEFI image to enable UEFI booting (like, /usr/share/edk2-ovmf/x64/OVMF_CODE.fd)
QEMU_UEFI_ARGS = { value = "-bios ${UEFI_IMAGE}", condition = { env_true = ["UEFI_IMAGE"] } }

[tasks.toolchain]
workspace = false
cwd = "userspace"
command = "cargo-make"
args = ["make", "--makefile", "Makefile.toolchain.toml", "install_user_toolchain"]

[tasks.toolchain_dist]
workspace = false
cwd = "userspace"
command = "cargo-make"
args = ["make", "--makefile", "Makefile.toolchain.toml", "dist_user_toolchain"]

[tasks.filesystem]
workspace = false
cwd = "userspace"
command = "cargo-make"
args = ["make", "--makefile", "Makefile.toml", "filesystem"]

# kernel tasks
[tasks.kernel_iso]
workspace = false
env = { CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS=["kernel"] }
run_task = { name="iso", fork=true }

[tasks.run_iso]
workspace = false
dependencies = ["kernel_iso", "filesystem"]
command = "qemu-system-x86_64"
args =  ["-cdrom", "${ISO_PATH}", "@@split(QEMU_ARGS, )", "@@split(QEMU_UEFI_ARGS, )", "${@}"]

[tasks.run_iso_gdb]
workspace = false
dependencies = ["kernel_iso", "filesystem"]
command = "qemu-system-x86_64"
args = ["-cdrom", "${ISO_PATH}", "-s", "-S", "@@split(QEMU_ARGS, )", "@@split(QEMU_UEFI_ARGS, )", "${@}"]

[tasks.default]
alias = "run_iso"
