[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
PROFILE = { source = "${CARGO_MAKE_CARGO_PROFILE}", default_value = "dev", mapping = {"dev" = "debug", "release" = "release" } }
OUT_DIR = "${CARGO_MAKE_CRATE_CUSTOM_TRIPLE_TARGET_DIRECTORY}/${PROFILE}"
KERNEL_PATH = "${OUT_DIR}/kernel"
ISO_PATH = "${OUT_DIR}/kernel.iso"
GRUB_CFG_PATH = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/kernel/grub.cfg"
GRUB_PATH = "${CARGO_MAKE_CRATE_CUSTOM_TRIPLE_TARGET_DIRECTORY}/${PROFILE}/grub"
FILESYSTEM_PATH = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/filesystem"
QEMU_ARGS = "-serial mon:stdio -m 512 -boot d -drive format=raw,file=fat:rw:filesystem"
# UEFI_IMAGE = "" # external: change to a path to a UEFI image to enable UEFI booting (like, /usr/share/edk2-ovmf/x64/OVMF_CODE.fd)
QEMU_UEFI_ARGS = { value = "-bios ${UEFI_IMAGE}", condition = { env_true = ["UEFI_IMAGE"] } }

[tasks.build_member]
workspace = true
command = "cargo"
condition= {files_modified = {input=["${CARGO_MAKE_WORKING_DIRECTORY}/src/**/*", "${CARGO_MAKE_WORKING_DIRECTORY}/Cargo.toml"], output=["${OUT_DIR}/${CARGO_MAKE_PROJECT_NAME}"]}}
args = ["build", "--profile", "${CARGO_MAKE_CARGO_PROFILE}"]

[tasks.copy_to_fs]
workspace = true
condition= {files_modified = {input=["${OUT_DIR}/${CARGO_MAKE_PROJECT_NAME}"], output=["${FILESYSTEM_PATH}/${CARGO_MAKE_PROJECT_NAME}"]}}
dependencies = ["build_member"]
command = "cp"
args = ["-r", "${OUT_DIR}/${CARGO_MAKE_PROJECT_NAME}", "${FILESYSTEM_PATH}/${CARGO_MAKE_PROJECT_NAME}"]

[tasks.extra_copy_to_fs]
workspace = false
dependencies = ["build_member"]
condition= {files_modified = {input=["${OUT_DIR}/${CARGO_MAKE_PROJECT_NAME}"], output=["${FILESYSTEM_PATH}/${CARGO_MAKE_PROJECT_NAME}"]}}
command = "cp"
args = ["-r", "${OUT_DIR}/echo", "${OUT_DIR}/cat", "${FILESYSTEM_PATH}/"]

[tasks.filesystem]
workspace = false
# empty array means all members (not sure why need to be explicit)
env = { CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS=[], CARGO_MAKE_WORKSPACE_SKIP_MEMBERS=["kernel", "libraries/*"] }
run_task = { name = ["copy_to_fs", "extra_copy_to_fs"], fork = true }

# kernel tasks
[tasks.kernel_iso]
workspace = false
env = { CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS=["kernel"] }
run_task = { name="iso", fork=true }

[tasks.run_iso]
workspace = false
dependencies = ["kernel_iso", "filesystem"]
command = "qemu-system-x86_64"
args =  ["-cdrom", "${ISO_PATH}", "@@split(QEMU_ARGS, )", "@@split(QEMU_UEFI_ARGS, )", "${@}"]

[tasks.run_iso_gdb]
workspace = false
dependencies = ["kernel_iso", "filesystem"]
command = "qemu-system-x86_64"
args = ["-cdrom", "${ISO_PATH}", "-s", "-S", "@@split(QEMU_ARGS, )", "@@split(QEMU_UEFI_ARGS, )", "${@}"]

[tasks.default]
alias = "run_iso"
